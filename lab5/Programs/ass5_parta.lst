680x0 MACRO ASSEMBLER   Version 5.00   (c) 1992-2005 Peter J. Fondse

Date: 28 Mar 2023      Time: 16:25:01          Source: C:\IDE68K\ASS5_PARTA\ASS5_PARTA.SRC

                       1          section   code
                       2   **********************************************************************************************************
                       3   * CSTART.ASM  -  C startup-code
                       4   *
                       5   *          Initialises the system prior to running the users main() program
                       6   *
                       7   *          1) Sets up the user program stack pointer
                       8   *          2) Switches to User mode in the 68000
                       9   *          3) Enables All Interrupts 1-7 on 68000
                      10   *          4) Copies all initialised C program variables from Rom to Ram prior to running main()
                      11   *
                      12   **********************************************************************************************************
00000000              13                   align
                      14   
                      15   
                      16   **********************************************************************************************************
                      17   * The Following ORG Statement marks the address of the start of the this CStart Program
                      18   *
                      19   * The debug Monitor and Flash Load and Program routines assume your program lives here
                      20   **********************************************************************************************************
08000000              21                   org       $08000000
08000000  46FC 2000   22   start:          move.w    #$2000,SR             clear interrupts to enable all, move to supervisor mode
                      23   
                      24   ******************************************************************************************
                      25   * Set unitialised global variables to 0 at startup
                      26   ******************************************************************************************
08000004  207C 0800   27   mainloop        movea.l   #BssStart,a0          point a0 to the start of the initialised data section held in ROM
08000008  3E5E      
0800000A  203C 0000   28                   move.l    #BssLength,d0         figure out how many bytes of C program variables data to copy
0800000E  006C      
08000010  6700 0024   29                   beq       go_main               if no data to copy go straight to program
08000014  10FC 0000   30   Zeroinit        move.b    #0,(a0)+              copy the C program initialise variables from rom to ram
08000018  5380        31                   subq.l    #1,d0
0800001A  66F8        32                   bne       Zeroinit
                      33   
                      34   *******************************************************************************************
                      35   * last minute initialisation before calling main
                      36   *******************************************************************************************
                      37   
0800001C  23FC FFFF   38                   move.l    #-1,__ungetbuf         required for use of scanf() etc in C programs
08000020  FFFF 0800 
08000024  3D3E      
08000026  42B9 0800   39                   clr.l     __allocp               used by malloc() in C
0800002A  3D42      
0800002C  23FC 0800   40                   move.l    #heap,__heap           pointer to free memory
08000030  3ECA 0800 
08000034  3D46      
08000036  4EB9 0800   41   go_main         jsr       _main
0800003A  18C6      
0800003C  60C2        42                   bra       start
                      43   
                      44   ; C:\IDE68K\ASS5_PARTA\M68KUSERPROGRAM (DE1).C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                      45   ; #include <stdio.h>
                      46   ; #include <string.h>
                      47   ; #include <ctype.h>
                      48   ; //IMPORTANT
                      49   ; //
                      50   ; // Uncomment one of the two #defines below
                      51   ; // Define StartOfExceptionVectorTable as 08030000 if running programs from sram or
                      52   ; // 0B000000 for running programs from dram
                      53   ; //
                      54   ; // In your labs, you will initially start by designing a system with SRam and later move to
                      55   ; // Dram, so these constants will need to be changed based on the version of the system you have
                      56   ; // building
                      57   ; //
                      58   ; // The working 68k system SOF file posted on canvas that you can use for your pre-lab
                      59   ; // is based around Dram so #define accordingly before building
                      60   ; //#define StartOfExceptionVectorTable 0x08030000
                      61   ; #define StartOfExceptionVectorTable 0x0B000000
                      62   ; /**********************************************************************************************
                      63   ; **	Parallel port addresses
                      64   ; **********************************************************************************************/
                      65   ; #define PortA   *(volatile unsigned char *)(0x00400000)
                      66   ; #define PortB   *(volatile unsigned char *)(0x00400002)
                      67   ; #define PortC   *(volatile unsigned char *)(0x00400004)
                      68   ; #define PortD   *(volatile unsigned char *)(0x00400006)
                      69   ; #define PortE   *(volatile unsigned char *)(0x00400008)
                      70   ; /*********************************************************************************************
                      71   ; **	Hex 7 seg displays port addresses
                      72   ; *********************************************************************************************/
                      73   ; #define HEX_A        *(volatile unsigned char *)(0x00400010)
                      74   ; #define HEX_B        *(volatile unsigned char *)(0x00400012)
                      75   ; #define HEX_C        *(volatile unsigned char *)(0x00400014)    // de2 only
                      76   ; #define HEX_D        *(volatile unsigned char *)(0x00400016)    // de2 only
                      77   ; /**********************************************************************************************
                      78   ; **	LCD display port addresses
                      79   ; **********************************************************************************************/
                      80   ; #define LCDcommand   *(volatile unsigned char *)(0x00400020)
                      81   ; #define LCDdata      *(volatile unsigned char *)(0x00400022)
                      82   ; /********************************************************************************************
                      83   ; **	Timer Port addresses
                      84   ; *********************************************************************************************/
                      85   ; #define Timer1Data      *(volatile unsigned char *)(0x00400030)
                      86   ; #define Timer1Control   *(volatile unsigned char *)(0x00400032)
                      87   ; #define Timer1Status    *(volatile unsigned char *)(0x00400032)
                      88   ; #define Timer2Data      *(volatile unsigned char *)(0x00400034)
                      89   ; #define Timer2Control   *(volatile unsigned char *)(0x00400036)
                      90   ; #define Timer2Status    *(volatile unsigned char *)(0x00400036)
                      91   ; #define Timer3Data      *(volatile unsigned char *)(0x00400038)
                      92   ; #define Timer3Control   *(volatile unsigned char *)(0x0040003A)
                      93   ; #define Timer3Status    *(volatile unsigned char *)(0x0040003A)
                      94   ; #define Timer4Data      *(volatile unsigned char *)(0x0040003C)
                      95   ; #define Timer4Control   *(volatile unsigned char *)(0x0040003E)
                      96   ; #define Timer4Status    *(volatile unsigned char *)(0x0040003E)
                      97   ; /*********************************************************************************************
                      98   ; **	RS232 port addresses
                      99   ; *********************************************************************************************/
                     100   ; #define RS232_Control     *(volatile unsigned char *)(0x00400040)
                     101   ; #define RS232_Status      *(volatile unsigned char *)(0x00400040)
                     102   ; #define RS232_TxData      *(volatile unsigned char *)(0x00400042)
                     103   ; #define RS232_RxData      *(volatile unsigned char *)(0x00400042)
                     104   ; #define RS232_Baud        *(volatile unsigned char *)(0x00400044)
                     105   ; /*********************************************************************************************
                     106   ; **	PIA 1 and 2 port addresses
                     107   ; *********************************************************************************************/
                     108   ; #define PIA1_PortA_Data     *(volatile unsigned char *)(0x00400050)         // combined data and data direction register share same address
                     109   ; #define PIA1_PortA_Control *(volatile unsigned char *)(0x00400052)
                     110   ; #define PIA1_PortB_Data     *(volatile unsigned char *)(0x00400054)         // combined data and data direction register share same address
                     111   ; #define PIA1_PortB_Control *(volatile unsigned char *)(0x00400056)
                     112   ; #define PIA2_PortA_Data     *(volatile unsigned char *)(0x00400060)         // combined data and data direction register share same address
                     113   ; #define PIA2_PortA_Control *(volatile unsigned char *)(0x00400062)
                     114   ; #define PIA2_PortB_data     *(volatile unsigned char *)(0x00400064)         // combined data and data direction register share same address
                     115   ; #define PIA2_PortB_Control *(volatile unsigned char *)(0x00400066)
                     116   ; /*************************************************************
                     117   ; ** IIC Controller registers
                     118   ; **************************************************************/
                     119   ; //IIC Registers
                     120   ; #define IIC_Prescale_Low            (*(volatile unsigned char *)(0x00408000))
                     121   ; #define IIC_Prescale_High           (*(volatile unsigned char *)(0x00408002))
                     122   ; #define IIC_Control                 (*(volatile unsigned char *)(0x00408004))
                     123   ; #define IIC_Transmit_Receive        (*(volatile unsigned char *)(0x00408006))
                     124   ; #define IIC_Command_Status          (*(volatile unsigned char *)(0x00408008))
                     125   ; // I2C Commands
                     126   ; #define WRITE 0x10
                     127   ; #define START 0x91
                     128   ; #define ACK 0x21
                     129   ; /*********************************************************************************************************************************
                     130   ; (( DO NOT initialise global variables here, do it main even if you want 0
                     131   ; (( it's a limitation of the compiler
                     132   ; (( YOU HAVE BEEN WARNED
                     133   ; *********************************************************************************************************************************/
                     134   ; unsigned int i, x, y, z, PortA_Count;
                     135   ; unsigned char Timer1Count, Timer2Count, Timer3Count, Timer4Count ;
                     136   ; /*******************************************************************************************
                     137   ; ** Function Prototypes
                     138   ; *******************************************************************************************/
                     139   ; void Wait1ms(void);
                     140   ; void Wait3ms(void);
                     141   ; void Wait500ms(void);
                     142   ; void Wait1s(void);
                     143   ; void SendI2C(char byte, char cmd);
                     144   ; void DAC_Blinky(void);
                     145   ; void WaitForAck(void);
                     146   ; void ReadADC(void);
                     147   ; void Init_LCD(void) ;
                     148   ; void LCDOutchar(int c);
                     149   ; void LCDOutMess(char *theMessage);
                     150   ; void LCDClearln(void);
                     151   ; void LCDline1Message(char *theMessage);
                     152   ; void LCDline2Message(char *theMessage);
                     153   ; int sprintf(char *out, const char *format, ...) ;
                     154   ; /*****************************************************************************************
                     155   ; **	Interrupt service routine for Timers
                     156   ; **
                     157   ; **  Timers 1 - 4 share a common IRQ on the CPU  so this function uses polling to figure
                     158   ; **  out which timer is producing the interrupt
                     159   ; **
                     160   ; *****************************************************************************************/
                     161   ; void Timer_ISR()
                     162   ; {
                     163   _Timer_ISR:
                     164   ; if(Timer1Status == 1) {         // Did Timer 1 produce the Interrupt?
0800003E  1039 0040  165          move.b    4194354,D0
08000042  0032      
08000044  0C00 0001  166          cmp.b     #1,D0
08000048  6608       167          bne.s     Timer_ISR_1
                     168   ; Timer1Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
0800004A  13FC 0003  169          move.b    #3,4194354
0800004E  0040 0032 
                     170   Timer_ISR_1:
                     171   ; //PortA = Timer1Count++ ;     // increment an LED count on PortA with each tick of Timer 1
                     172   ; }
                     173   ; if(Timer2Status == 1) {         // Did Timer 2 produce the Interrupt?
08000052  1039 0040  174          move.b    4194358,D0
08000056  0036      
08000058  0C00 0001  175          cmp.b     #1,D0
0800005C  6608       176          bne.s     Timer_ISR_3
                     177   ; Timer2Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
0800005E  13FC 0003  178          move.b    #3,4194358
08000062  0040 0036 
                     179   Timer_ISR_3:
                     180   ; //PortC = Timer2Count++ ;     // increment an LED count on PortC with each tick of Timer 2
                     181   ; }
                     182   ; if(Timer3Status == 1) {         // Did Timer 3 produce the Interrupt?
08000066  1039 0040  183          move.b    4194362,D0
0800006A  003A      
0800006C  0C00 0001  184          cmp.b     #1,D0
08000070  6608       185          bne.s     Timer_ISR_5
                     186   ; Timer3Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000072  13FC 0003  187          move.b    #3,4194362
08000076  0040 003A 
                     188   Timer_ISR_5:
                     189   ; //HEX_A = Timer3Count++ ;     // increment a HEX count on Port HEX_A with each tick of Timer 3
                     190   ; }
                     191   ; if(Timer4Status == 1) {         // Did Timer 4 produce the Interrupt?
0800007A  1039 0040  192          move.b    4194366,D0
0800007E  003E      
08000080  0C00 0001  193          cmp.b     #1,D0
08000084  6608       194          bne.s     Timer_ISR_7
                     195   ; Timer4Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000086  13FC 0003  196          move.b    #3,4194366
0800008A  0040 003E 
                     197   Timer_ISR_7:
0800008E  4E75       198          rts
                     199   ; //HEX_B = Timer4Count++ ;     // increment a HEX count on HEX_B with each tick of Timer 4
                     200   ; }
                     201   ; }
                     202   ; /*****************************************************************************************
                     203   ; **	Interrupt service routine for ACIA. This device has it's own dedicate IRQ level
                     204   ; **  Add your code here to poll Status register and clear interrupt
                     205   ; *****************************************************************************************/
                     206   ; void ACIA_ISR()
                     207   ; {}
                     208   _ACIA_ISR:
08000090  4E75       209          rts
                     210   ; /***************************************************************************************
                     211   ; **	Interrupt service routine for PIAs 1 and 2. These devices share an IRQ level
                     212   ; **  Add your code here to poll Status register and clear interrupt
                     213   ; *****************************************************************************************/
                     214   ; void PIA_ISR()
                     215   ; {}
                     216   _PIA_ISR:
08000092  4E75       217          rts
                     218   ; /***********************************************************************************
                     219   ; **	Interrupt service routine for Key 2 on DE1 board. Add your own response here
                     220   ; ************************************************************************************/
                     221   ; void Key2PressISR()
                     222   ; {}
                     223   _Key2PressISR:
08000094  4E75       224          rts
                     225   ; /***********************************************************************************
                     226   ; **	Interrupt service routine for Key 1 on DE1 board. Add your own response here
                     227   ; ************************************************************************************/
                     228   ; void Key1PressISR()
                     229   ; {}
                     230   _Key1PressISR:
08000096  4E75       231          rts
                     232   ; /************************************************************************************
                     233   ; **   Delay Subroutine to give the 68000 something useless to do to waste 1 mSec
                     234   ; ************************************************************************************/
                     235   ; void Wait1ms(void)
                     236   ; {
                     237   _Wait1ms:
08000098  2F02       238          move.l    D2,-(A7)
                     239   ; int  i ;
                     240   ; for(i = 0; i < 1000; i ++)
0800009A  4282       241          clr.l     D2
                     242   Wait1ms_1:
0800009C  0C82 0000  243          cmp.l     #1000,D2
080000A0  03E8      
080000A2  6C04       244          bge.s     Wait1ms_3
080000A4  5282       245          addq.l    #1,D2
080000A6  60F4       246          bra       Wait1ms_1
                     247   Wait1ms_3:
080000A8  241F       248          move.l    (A7)+,D2
080000AA  4E75       249          rts
                     250   ; ;
                     251   ; }
                     252   ; /************************************************************************************
                     253   ; **  Subroutine to give the 68000 something useless to do to waste 3 mSec
                     254   ; **************************************************************************************/
                     255   ; void Wait3ms(void)
                     256   ; {
                     257   _Wait3ms:
080000AC  2F02       258          move.l    D2,-(A7)
                     259   ; int i ;
                     260   ; for(i = 0; i < 3; i++)
080000AE  4282       261          clr.l     D2
                     262   Wait3ms_1:
080000B0  0C82 0000  263          cmp.l     #3,D2
080000B4  0003      
080000B6  6C0A       264          bge.s     Wait3ms_3
                     265   ; Wait1ms() ;
080000B8  4EB9 0800  266          jsr       _Wait1ms
080000BC  0098      
080000BE  5282       267          addq.l    #1,D2
080000C0  60EE       268          bra       Wait3ms_1
                     269   Wait3ms_3:
080000C2  241F       270          move.l    (A7)+,D2
080000C4  4E75       271          rts
                     272   ; }
                     273   ; /*********************************************************************************************
                     274   ; **  Subroutine to initialise the LCD display by writing some commands to the LCD internal registers
                     275   ; **  Sets it for parallel port and 2 line display mode (if I recall correctly)
                     276   ; *********************************************************************************************/
                     277   ; void Init_LCD(void)
                     278   ; {
                     279   _Init_LCD:
                     280   ; LCDcommand = 0x0c ;
080000C6  13FC 000C  281          move.b    #12,4194336
080000CA  0040 0020 
                     282   ; Wait3ms() ;
080000CE  4EB9 0800  283          jsr       _Wait3ms
080000D2  00AC      
                     284   ; LCDcommand = 0x38 ;
080000D4  13FC 0038  285          move.b    #56,4194336
080000D8  0040 0020 
                     286   ; Wait3ms() ;
080000DC  4EB9 0800  287          jsr       _Wait3ms
080000E0  00AC      
080000E2  4E75       288          rts
                     289   ; }
                     290   ; /*********************************************************************************************
                     291   ; **  Subroutine to initialise the RS232 Port by writing some commands to the internal registers
                     292   ; *********************************************************************************************/
                     293   ; void Init_RS232(void)
                     294   ; {
                     295   _Init_RS232:
                     296   ; RS232_Control = 0x15 ; //  %00010101 set up 6850 uses divide by 16 clock, set RTS low, 8 bits no parity, 1 stop bit, transmitter interrupt disabled
080000E4  13FC 0015  297          move.b    #21,4194368
080000E8  0040 0040 
                     298   ; RS232_Baud = 0x1 ;      // program baud rate generator 001 = 115k, 010 = 57.6k, 011 = 38.4k, 100 = 19.2, all others = 9600
080000EC  13FC 0001  299          move.b    #1,4194372
080000F0  0040 0044 
080000F4  4E75       300          rts
                     301   ; }
                     302   ; /*********************************************************************************************************
                     303   ; **  Subroutine to provide a low level output function to 6850 ACIA
                     304   ; **  This routine provides the basic functionality to output a single character to the serial Port
                     305   ; **  to allow the board to communicate with HyperTerminal Program
                     306   ; **
                     307   ; **  NOTE you do not call this function directly, instead you call the normal putchar() function
                     308   ; **  which in turn calls _putch() below). Other functions like puts(), printf() call putchar() so will
                     309   ; **  call _putch() also
                     310   ; *********************************************************************************************************/
                     311   ; int _putch( int c)
                     312   ; {
                     313   __putch:
080000F6  4E56 0000  314          link      A6,#0
                     315   ; while((RS232_Status & (char)(0x02)) != (char)(0x02))    // wait for Tx bit in status register or 6850 serial comms chip to be '1'
                     316   _putch_1:
080000FA  1039 0040  317          move.b    4194368,D0
080000FE  0040      
08000100  C03C 0002  318          and.b     #2,D0
08000104  0C00 0002  319          cmp.b     #2,D0
08000108  6702       320          beq.s     _putch_3
0800010A  60EE       321          bra       _putch_1
                     322   _putch_3:
                     323   ; ;
                     324   ; RS232_TxData = (c & (char)(0x7f));                      // write to the data register to output the character (mask off bit 8 to keep it 7 bit ASCII)
0800010C  202E 0008  325          move.l    8(A6),D0
08000110  C0BC 0000  326          and.l     #127,D0
08000114  007F      
08000116  13C0 0040  327          move.b    D0,4194370
0800011A  0042      
                     328   ; return c ;                                              // putchar() expects the character to be returned
0800011C  202E 0008  329          move.l    8(A6),D0
08000120  4E5E       330          unlk      A6
08000122  4E75       331          rts
                     332   ; }
                     333   ; /*********************************************************************************************************
                     334   ; **  Subroutine to provide a low level input function to 6850 ACIA
                     335   ; **  This routine provides the basic functionality to input a single character from the serial Port
                     336   ; **  to allow the board to communicate with HyperTerminal Program Keyboard (your PC)
                     337   ; **
                     338   ; **  NOTE you do not call this function directly, instead you call the normal getchar() function
                     339   ; **  which in turn calls _getch() below). Other functions like gets(), scanf() call getchar() so will
                     340   ; **  call _getch() also
                     341   ; *********************************************************************************************************/
                     342   ; int _getch( void )
                     343   ; {
                     344   __getch:
08000124  4E56 FFFC  345          link      A6,#-4
                     346   ; char c ;
                     347   ; while((RS232_Status & (char)(0x01)) != (char)(0x01))    // wait for Rx bit in 6850 serial comms chip status register to be '1'
                     348   _getch_1:
08000128  1039 0040  349          move.b    4194368,D0
0800012C  0040      
0800012E  C03C 0001  350          and.b     #1,D0
08000132  0C00 0001  351          cmp.b     #1,D0
08000136  6702       352          beq.s     _getch_3
08000138  60EE       353          bra       _getch_1
                     354   _getch_3:
                     355   ; ;
                     356   ; return (RS232_RxData & (char)(0x7f));                   // read received character, mask off top bit and return as 7 bit ASCII character
0800013A  1039 0040  357          move.b    4194370,D0
0800013E  0042      
08000140  C0BC 0000  358          and.l     #255,D0
08000144  00FF      
08000146  C0BC 0000  359          and.l     #127,D0
0800014A  007F      
0800014C  4E5E       360          unlk      A6
0800014E  4E75       361          rts
                     362   ; }
                     363   ; /******************************************************************************
                     364   ; **  Subroutine to output a single character to the 2 row LCD display
                     365   ; **  It is assumed the character is an ASCII code and it will be displayed at the
                     366   ; **  current cursor position
                     367   ; *******************************************************************************/
                     368   ; void LCDOutchar(int c)
                     369   ; {
                     370   _LCDOutchar:
08000150  4E56 0000  371          link      A6,#0
                     372   ; LCDdata = (char)(c);
08000154  202E 0008  373          move.l    8(A6),D0
08000158  13C0 0040  374          move.b    D0,4194338
0800015C  0022      
                     375   ; Wait1ms() ;
0800015E  4EB9 0800  376          jsr       _Wait1ms
08000162  0098      
08000164  4E5E       377          unlk      A6
08000166  4E75       378          rts
                     379   ; }
                     380   ; /**********************************************************************************
                     381   ; *subroutine to output a message at the current cursor position of the LCD display
                     382   ; ************************************************************************************/
                     383   ; void LCDOutMessage(char *theMessage)
                     384   ; {
                     385   _LCDOutMessage:
08000168  4E56 FFFC  386          link      A6,#-4
                     387   ; char c ;
                     388   ; while((c = *theMessage++) != 0)     // output characters from the string until NULL
                     389   LCDOutMessage_1:
0800016C  206E 0008  390          move.l    8(A6),A0
08000170  52AE 0008  391          addq.l    #1,8(A6)
08000174  1D50 FFFF  392          move.b    (A0),-1(A6)
08000178  1010       393          move.b    (A0),D0
0800017A  6714       394          beq.s     LCDOutMessage_3
                     395   ; LCDOutchar(c) ;
0800017C  122E FFFF  396          move.b    -1(A6),D1
08000180  4881       397          ext.w     D1
08000182  48C1       398          ext.l     D1
08000184  2F01       399          move.l    D1,-(A7)
08000186  4EB9 0800  400          jsr       _LCDOutchar
0800018A  0150      
0800018C  584F       401          addq.w    #4,A7
0800018E  60DC       402          bra       LCDOutMessage_1
                     403   LCDOutMessage_3:
08000190  4E5E       404          unlk      A6
08000192  4E75       405          rts
                     406   ; }
                     407   ; /******************************************************************************
                     408   ; *subroutine to clear the line by issuing 24 space characters
                     409   ; *******************************************************************************/
                     410   ; void LCDClearln(void)
                     411   ; {
                     412   _LCDClearln:
08000194  2F02       413          move.l    D2,-(A7)
                     414   ; int i ;
                     415   ; for(i = 0; i < 24; i ++)
08000196  4282       416          clr.l     D2
                     417   LCDClearln_1:
08000198  0C82 0000  418          cmp.l     #24,D2
0800019C  0018      
0800019E  6C10       419          bge.s     LCDClearln_3
                     420   ; LCDOutchar(' ') ;       // write a space char to the LCD display
080001A0  4878 0020  421          pea       32
080001A4  4EB9 0800  422          jsr       _LCDOutchar
080001A8  0150      
080001AA  584F       423          addq.w    #4,A7
080001AC  5282       424          addq.l    #1,D2
080001AE  60E8       425          bra       LCDClearln_1
                     426   LCDClearln_3:
080001B0  241F       427          move.l    (A7)+,D2
080001B2  4E75       428          rts
                     429   ; }
                     430   ; /******************************************************************************
                     431   ; **  Subroutine to move the LCD cursor to the start of line 1 and clear that line
                     432   ; *******************************************************************************/
                     433   ; void LCDLine1Message(char *theMessage)
                     434   ; {
                     435   _LCDLine1Message:
080001B4  4E56 0000  436          link      A6,#0
                     437   ; LCDcommand = 0x80 ;
080001B8  13FC 0080  438          move.b    #128,4194336
080001BC  0040 0020 
                     439   ; Wait3ms();
080001C0  4EB9 0800  440          jsr       _Wait3ms
080001C4  00AC      
                     441   ; LCDClearln() ;
080001C6  4EB9 0800  442          jsr       _LCDClearln
080001CA  0194      
                     443   ; LCDcommand = 0x80 ;
080001CC  13FC 0080  444          move.b    #128,4194336
080001D0  0040 0020 
                     445   ; Wait3ms() ;
080001D4  4EB9 0800  446          jsr       _Wait3ms
080001D8  00AC      
                     447   ; LCDOutMessage(theMessage) ;
080001DA  2F2E 0008  448          move.l    8(A6),-(A7)
080001DE  4EB9 0800  449          jsr       _LCDOutMessage
080001E2  0168      
080001E4  584F       450          addq.w    #4,A7
080001E6  4E5E       451          unlk      A6
080001E8  4E75       452          rts
                     453   ; }
                     454   ; /******************************************************************************
                     455   ; **  Subroutine to move the LCD cursor to the start of line 2 and clear that line
                     456   ; *******************************************************************************/
                     457   ; void LCDLine2Message(char *theMessage)
                     458   ; {
                     459   _LCDLine2Message:
080001EA  4E56 0000  460          link      A6,#0
                     461   ; LCDcommand = 0xC0 ;
080001EE  13FC 00C0  462          move.b    #192,4194336
080001F2  0040 0020 
                     463   ; Wait3ms();
080001F6  4EB9 0800  464          jsr       _Wait3ms
080001FA  00AC      
                     465   ; LCDClearln() ;
080001FC  4EB9 0800  466          jsr       _LCDClearln
08000200  0194      
                     467   ; LCDcommand = 0xC0 ;
08000202  13FC 00C0  468          move.b    #192,4194336
08000206  0040 0020 
                     469   ; Wait3ms() ;
0800020A  4EB9 0800  470          jsr       _Wait3ms
0800020E  00AC      
                     471   ; LCDOutMessage(theMessage) ;
08000210  2F2E 0008  472          move.l    8(A6),-(A7)
08000214  4EB9 0800  473          jsr       _LCDOutMessage
08000218  0168      
0800021A  584F       474          addq.w    #4,A7
0800021C  4E5E       475          unlk      A6
0800021E  4E75       476          rts
                     477   ; }
                     478   ; /*********************************************************************************************************************************
                     479   ; **  IMPORTANT FUNCTION
                     480   ; **  This function install an exception handler so you can capture and deal with any 68000 exception in your program
                     481   ; **  You pass it the name of a function in your code that will get called in response to the exception (as the 1st parameter)
                     482   ; **  and in the 2nd parameter, you pass it the exception number that you want to take over (see 68000 exceptions for details)
                     483   ; **  Calling this function allows you to deal with Interrupts for example
                     484   ; ***********************************************************************************************************************************/
                     485   ; void InstallExceptionHandler( void (*function_ptr)(), int level)
                     486   ; {
                     487   _InstallExceptionHandler:
08000220  4E56 FFFC  488          link      A6,#-4
                     489   ; volatile long int *RamVectorAddress = (volatile long int *)(StartOfExceptionVectorTable) ;   // pointer to the Ram based interrupt vector table created in Cstart in debug monitor
08000224  2D7C 0B00  490          move.l    #184549376,-4(A6)
08000228  0000 FFFC 
                     491   ; RamVectorAddress[level] = (long int *)(function_ptr);                       // install the address of our function into the exception table
0800022C  206E FFFC  492          move.l    -4(A6),A0
08000230  202E 000C  493          move.l    12(A6),D0
08000234  E588       494          lsl.l     #2,D0
08000236  21AE 0008  495          move.l    8(A6),0(A0,D0.L)
0800023A  0800      
0800023C  4E5E       496          unlk      A6
0800023E  4E75       497          rts
                     498   ; }
                     499   ; char xtod(int c)
                     500   ; {
                     501   _xtod:
08000240  4E56 0000  502          link      A6,#0
08000244  2F02       503          move.l    D2,-(A7)
08000246  242E 0008  504          move.l    8(A6),D2
                     505   ; if ((char)(c) <= (char)('9'))
0800024A  0C02 0039  506          cmp.b     #57,D2
0800024E  6E08       507          bgt.s     xtod_1
                     508   ; return c - (char)(0x30);    // 0 - 9 = 0x30 - 0x39 so convert to number by sutracting 0x30
08000250  1002       509          move.b    D2,D0
08000252  0400 0030  510          sub.b     #48,D0
08000256  6014       511          bra.s     xtod_3
                     512   xtod_1:
                     513   ; else if((char)(c) > (char)('F'))    // assume lower case
08000258  0C02 0046  514          cmp.b     #70,D2
0800025C  6F08       515          ble.s     xtod_4
                     516   ; return c - (char)(0x57);    // a-f = 0x61-66 so needs to be converted to 0x0A - 0x0F so subtract 0x57
0800025E  1002       517          move.b    D2,D0
08000260  0400 0057  518          sub.b     #87,D0
08000264  6006       519          bra.s     xtod_3
                     520   xtod_4:
                     521   ; else
                     522   ; return c - (char)(0x37);    // A-F = 0x41-46 so needs to be converted to 0x0A - 0x0F so subtract 0x37
08000266  1002       523          move.b    D2,D0
08000268  0400 0037  524          sub.b     #55,D0
                     525   xtod_3:
0800026C  241F       526          move.l    (A7)+,D2
0800026E  4E5E       527          unlk      A6
08000270  4E75       528          rts
                     529   ; }
                     530   ; int Get2HexDigits(char *CheckSumPtr)
                     531   ; {
                     532   _Get2HexDigits:
08000272  4E56 0000  533          link      A6,#0
08000276  2F02       534          move.l    D2,-(A7)
                     535   ; register int i = (xtod(_getch()) << 4) | (xtod(_getch()));
08000278  2F00       536          move.l    D0,-(A7)
0800027A  4EB9 0800  537          jsr       __getch
0800027E  0124      
08000280  2200       538          move.l    D0,D1
08000282  201F       539          move.l    (A7)+,D0
08000284  2F01       540          move.l    D1,-(A7)
08000286  4EB9 0800  541          jsr       _xtod
0800028A  0240      
0800028C  584F       542          addq.w    #4,A7
0800028E  C0BC 0000  543          and.l     #255,D0
08000292  00FF      
08000294  E980       544          asl.l     #4,D0
08000296  2F00       545          move.l    D0,-(A7)
08000298  2F01       546          move.l    D1,-(A7)
0800029A  4EB9 0800  547          jsr       __getch
0800029E  0124      
080002A0  221F       548          move.l    (A7)+,D1
080002A2  2F00       549          move.l    D0,-(A7)
080002A4  4EB9 0800  550          jsr       _xtod
080002A8  0240      
080002AA  584F       551          addq.w    #4,A7
080002AC  2200       552          move.l    D0,D1
080002AE  201F       553          move.l    (A7)+,D0
080002B0  C2BC 0000  554          and.l     #255,D1
080002B4  00FF      
080002B6  8081       555          or.l      D1,D0
080002B8  2400       556          move.l    D0,D2
                     557   ; if(CheckSumPtr)
080002BA  4AAE 0008  558          tst.l     8(A6)
080002BE  6706       559          beq.s     Get2HexDigits_1
                     560   ; *CheckSumPtr += i ;
080002C0  206E 0008  561          move.l    8(A6),A0
080002C4  D510       562          add.b     D2,(A0)
                     563   Get2HexDigits_1:
                     564   ; return i ;
080002C6  2002       565          move.l    D2,D0
080002C8  241F       566          move.l    (A7)+,D2
080002CA  4E5E       567          unlk      A6
080002CC  4E75       568          rts
                     569   ; }
                     570   ; int Get4HexDigits(char *CheckSumPtr)
                     571   ; {
                     572   _Get4HexDigits:
080002CE  4E56 0000  573          link      A6,#0
                     574   ; return (Get2HexDigits(CheckSumPtr) << 8) | (Get2HexDigits(CheckSumPtr));
080002D2  2F2E 0008  575          move.l    8(A6),-(A7)
080002D6  4EB9 0800  576          jsr       _Get2HexDigits
080002DA  0272      
080002DC  584F       577          addq.w    #4,A7
080002DE  E180       578          asl.l     #8,D0
080002E0  2F00       579          move.l    D0,-(A7)
080002E2  2F2E 0008  580          move.l    8(A6),-(A7)
080002E6  4EB9 0800  581          jsr       _Get2HexDigits
080002EA  0272      
080002EC  584F       582          addq.w    #4,A7
080002EE  2200       583          move.l    D0,D1
080002F0  201F       584          move.l    (A7)+,D0
080002F2  8081       585          or.l      D1,D0
080002F4  4E5E       586          unlk      A6
080002F6  4E75       587          rts
                     588   ; }
                     589   ; int Get6HexDigits(char *CheckSumPtr)
                     590   ; {
                     591   _Get6HexDigits:
080002F8  4E56 0000  592          link      A6,#0
                     593   ; return (Get4HexDigits(CheckSumPtr) << 8) | (Get2HexDigits(CheckSumPtr));
080002FC  2F2E 0008  594          move.l    8(A6),-(A7)
08000300  4EB9 0800  595          jsr       _Get4HexDigits
08000304  02CE      
08000306  584F       596          addq.w    #4,A7
08000308  E180       597          asl.l     #8,D0
0800030A  2F00       598          move.l    D0,-(A7)
0800030C  2F2E 0008  599          move.l    8(A6),-(A7)
08000310  4EB9 0800  600          jsr       _Get2HexDigits
08000314  0272      
08000316  584F       601          addq.w    #4,A7
08000318  2200       602          move.l    D0,D1
0800031A  201F       603          move.l    (A7)+,D0
0800031C  8081       604          or.l      D1,D0
0800031E  4E5E       605          unlk      A6
08000320  4E75       606          rts
                     607   ; }
                     608   ; int Get8HexDigits(char *CheckSumPtr)
                     609   ; {
                     610   _Get8HexDigits:
08000322  4E56 0000  611          link      A6,#0
                     612   ; return (Get4HexDigits(CheckSumPtr) << 16) | (Get4HexDigits(CheckSumPtr));
08000326  2F2E 0008  613          move.l    8(A6),-(A7)
0800032A  4EB9 0800  614          jsr       _Get4HexDigits
0800032E  02CE      
08000330  584F       615          addq.w    #4,A7
08000332  E180       616          asl.l     #8,D0
08000334  E180       617          asl.l     #8,D0
08000336  2F00       618          move.l    D0,-(A7)
08000338  2F2E 0008  619          move.l    8(A6),-(A7)
0800033C  4EB9 0800  620          jsr       _Get4HexDigits
08000340  02CE      
08000342  584F       621          addq.w    #4,A7
08000344  2200       622          move.l    D0,D1
08000346  201F       623          move.l    (A7)+,D0
08000348  8081       624          or.l      D1,D0
0800034A  4E5E       625          unlk      A6
0800034C  4E75       626          rts
                     627   ; }
                     628   ; /**************************************************************************************************
                     629   ; *Memory Test Functions
                     630   ; ***************************************************************************************************/
                     631   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                     632   ; //byte_func//
                     633   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                     634   ; void byte_func(void){
                     635   _byte_func:
0800034E  4E56 FFDC  636          link      A6,#-36
08000352  48E7 3F3C  637          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08000356  45F9 0800  638          lea       _printf.L,A2
0800035A  1E08      
0800035C  47F9 0800  639          lea       _scanf.L,A3
08000360  1DD6      
08000362  4BEE FFE6  640          lea       -26(A6),A5
                     641   ; char  *Start, *End ;
                     642   ; char *Start_temp, *End_temp;
                     643   ; int *Start_hold, *End_hold;
                     644   ; unsigned char filldata = 0xAA;
08000366  1D7C 00AA  645          move.b    #170,-22(A6)
0800036A  FFEA      
                     646   ; unsigned char tempdata;
                     647   ; unsigned char readval;
                     648   ; //unsigned char bytedata1, bytedata2, bytedata3, bytedata4;
                     649   ; int bytedata1, bytedata2, bytedata3, bytedata4;
                     650   ; int count = 0;
0800036C  4282       651          clr.l     D2
                     652   ; int count2 = 0;
0800036E  4284       653          clr.l     D4
                     654   ; int j;
                     655   ; char choice;
                     656   ; printf("\r\nEnter 4 bytes of Hexidecimal test data.");
08000370  4879 0800  657          pea       @m68kus~1_1.L
08000374  3164      
08000376  4E92       658          jsr       (A2)
08000378  584F       659          addq.w    #4,A7
                     660   ; printf("\r\nEnter First byte: ");
0800037A  4879 0800  661          pea       @m68kus~1_2.L
0800037E  318E      
08000380  4E92       662          jsr       (A2)
08000382  584F       663          addq.w    #4,A7
                     664   ; scanf("%x", &bytedata1) ;
08000384  486E FFEC  665          pea       -20(A6)
08000388  4879 0800  666          pea       @m68kus~1_3.L
0800038C  31A4      
0800038E  4E93       667          jsr       (A3)
08000390  504F       668          addq.w    #8,A7
                     669   ; //bytedata1 = Get2HexDigits(0) ;
                     670   ; //printf("\r\n%X",bytedata1);
                     671   ; printf("Enter Second byte: ");
08000392  4879 0800  672          pea       @m68kus~1_4.L
08000396  31A8      
08000398  4E92       673          jsr       (A2)
0800039A  584F       674          addq.w    #4,A7
                     675   ; scanf("%x", &bytedata2) ;
0800039C  486E FFF0  676          pea       -16(A6)
080003A0  4879 0800  677          pea       @m68kus~1_3.L
080003A4  31A4      
080003A6  4E93       678          jsr       (A3)
080003A8  504F       679          addq.w    #8,A7
                     680   ; //printf("\r\n%X",bytedata2);
                     681   ; //bytedata2 = Get2HexDigits(0) ;
                     682   ; printf("Enter Third byte: ");
080003AA  4879 0800  683          pea       @m68kus~1_5.L
080003AE  31BC      
080003B0  4E92       684          jsr       (A2)
080003B2  584F       685          addq.w    #4,A7
                     686   ; scanf("%x", &bytedata3) ;
080003B4  486E FFF4  687          pea       -12(A6)
080003B8  4879 0800  688          pea       @m68kus~1_3.L
080003BC  31A4      
080003BE  4E93       689          jsr       (A3)
080003C0  504F       690          addq.w    #8,A7
                     691   ; //bytedata3 = Get2HexDigits(0) ;
                     692   ; printf("Enter Fourth byte: ");
080003C2  4879 0800  693          pea       @m68kus~1_6.L
080003C6  31D0      
080003C8  4E92       694          jsr       (A2)
080003CA  584F       695          addq.w    #4,A7
                     696   ; scanf("%x", &bytedata4) ;
080003CC  486E FFF8  697          pea       -8(A6)
080003D0  4879 0800  698          pea       @m68kus~1_3.L
080003D4  31A4      
080003D6  4E93       699          jsr       (A3)
080003D8  504F       700          addq.w    #8,A7
                     701   ; //bytedata4 = Get2HexDigits(0) ;
                     702   ; printf("Valid addresses for this program are: $0900 0000  - $097F FFFF");
080003DA  4879 0800  703          pea       @m68kus~1_7.L
080003DE  31E4      
080003E0  4E92       704          jsr       (A2)
080003E2  584F       705          addq.w    #4,A7
                     706   ; printf("\r\nEnter Start Address: ") ;
080003E4  4879 0800  707          pea       @m68kus~1_8.L
080003E8  3224      
080003EA  4E92       708          jsr       (A2)
080003EC  584F       709          addq.w    #4,A7
                     710   ; scanf("%x", &Start_hold) ;
080003EE  486E FFE2  711          pea       -30(A6)
080003F2  4879 0800  712          pea       @m68kus~1_3.L
080003F6  31A4      
080003F8  4E93       713          jsr       (A3)
080003FA  504F       714          addq.w    #8,A7
                     715   ; //Start_hold = Get8HexDigits(0) ;
                     716   ; printf("Enter End Address: ") ;
080003FC  4879 0800  717          pea       @m68kus~1_9.L
08000400  323C      
08000402  4E92       718          jsr       (A2)
08000404  584F       719          addq.w    #4,A7
                     720   ; scanf("%x", &End_hold) ;
08000406  2F0D       721          move.l    A5,-(A7)
08000408  4879 0800  722          pea       @m68kus~1_3.L
0800040C  31A4      
0800040E  4E93       723          jsr       (A3)
08000410  504F       724          addq.w    #8,A7
                     725   ; //End_hold = Get8HexDigits(0) ;
                     726   ; while ((Start_hold < 0x09000000) || (Start_hold > 0x097FFFFF)){
                     727   byte_func_1:
08000412  202E FFE2  728          move.l    -30(A6),D0
08000416  0C80 0900  729          cmp.l     #150994944,D0
0800041A  0000      
0800041C  650C       730          blo.s     byte_func_4
0800041E  202E FFE2  731          move.l    -30(A6),D0
08000422  0C80 097F  732          cmp.l     #159383551,D0
08000426  FFFF      
08000428  631A       733          bls.s     byte_func_3
                     734   byte_func_4:
                     735   ; printf("ERROR. Please Enter a valid Start Address: ");
0800042A  4879 0800  736          pea       @m68kus~1_10.L
0800042E  3250      
08000430  4E92       737          jsr       (A2)
08000432  584F       738          addq.w    #4,A7
                     739   ; scanf("%x", &Start_hold) ;
08000434  486E FFE2  740          pea       -30(A6)
08000438  4879 0800  741          pea       @m68kus~1_3.L
0800043C  31A4      
0800043E  4E93       742          jsr       (A3)
08000440  504F       743          addq.w    #8,A7
08000442  60CE       744          bra       byte_func_1
                     745   byte_func_3:
                     746   ; //Start_hold = Get8HexDigits(0) ;
                     747   ; }
                     748   ; while ((End_hold < 0x09000000) || (End_hold > 0x097FFFFF)){
                     749   byte_func_5:
08000444  2015       750          move.l    (A5),D0
08000446  0C80 0900  751          cmp.l     #150994944,D0
0800044A  0000      
0800044C  650A       752          blo.s     byte_func_8
0800044E  2015       753          move.l    (A5),D0
08000450  0C80 097F  754          cmp.l     #159383551,D0
08000454  FFFF      
08000456  6318       755          bls.s     byte_func_7
                     756   byte_func_8:
                     757   ; printf("\r\nERROR. Please Enter a valid End Address: ");
08000458  4879 0800  758          pea       @m68kus~1_11.L
0800045C  327C      
0800045E  4E92       759          jsr       (A2)
08000460  584F       760          addq.w    #4,A7
                     761   ; scanf("%x", &End_hold) ;
08000462  2F0D       762          move.l    A5,-(A7)
08000464  4879 0800  763          pea       @m68kus~1_3.L
08000468  31A4      
0800046A  4E93       764          jsr       (A3)
0800046C  504F       765          addq.w    #8,A7
0800046E  60D4       766          bra       byte_func_5
                     767   byte_func_7:
                     768   ; //End_hold = Get8HexDigits(0) ;
                     769   ; }
                     770   ; while (End_hold <= Start_hold){
                     771   byte_func_9:
08000470  2015       772          move.l    (A5),D0
08000472  B0AE FFE2  773          cmp.l     -30(A6),D0
08000476  6222       774          bhi.s     byte_func_11
                     775   ; printf("\r\nERROR. Please enter an End Address larger than the Start Address");
08000478  4879 0800  776          pea       @m68kus~1_12.L
0800047C  32A8      
0800047E  4E92       777          jsr       (A2)
08000480  584F       778          addq.w    #4,A7
                     779   ; //printf("\r\nEnter Start Address: ") ;
                     780   ; //Start_hold = Get8HexDigits(0) ;
                     781   ; printf("\r\nEnter End Address: ") ;
08000482  4879 0800  782          pea       @m68kus~1_13.L
08000486  32EC      
08000488  4E92       783          jsr       (A2)
0800048A  584F       784          addq.w    #4,A7
                     785   ; scanf("%x", &End_hold) ;
0800048C  2F0D       786          move.l    A5,-(A7)
0800048E  4879 0800  787          pea       @m68kus~1_3.L
08000492  31A4      
08000494  4E93       788          jsr       (A3)
08000496  504F       789          addq.w    #8,A7
08000498  60D6       790          bra       byte_func_9
                     791   byte_func_11:
                     792   ; //End_hold = Get8HexDigits(0) ;
                     793   ; }
                     794   ; Start = Start_hold;
0800049A  262E FFE2  795          move.l    -30(A6),D3
                     796   ; End = End_hold;
0800049E  2855       797          move.l    (A5),A4
                     798   ; Start_temp = Start_hold;
080004A0  2A2E FFE2  799          move.l    -30(A6),D5
                     800   ; End_temp = End_hold;
080004A4  2D55 FFDE  801          move.l    (A5),-34(A6)
                     802   ; printf("\r\nFilling Addresses [$%08X - $%08X] with test data", Start, End);
080004A8  2F0C       803          move.l    A4,-(A7)
080004AA  2F03       804          move.l    D3,-(A7)
080004AC  4879 0800  805          pea       @m68kus~1_14.L
080004B0  3302      
080004B2  4E92       806          jsr       (A2)
080004B4  DEFC 000C  807          add.w     #12,A7
                     808   ; while (Start <= End){
                     809   byte_func_12:
080004B8  B68C       810          cmp.l     A4,D3
080004BA  6200 0196  811          bhi       byte_func_14
                     812   ; if ((count == 0) || ((count % 4))==0 ){
080004BE  4A82       813          tst.l     D2
080004C0  6718       814          beq.s     byte_func_17
080004C2  2F02       815          move.l    D2,-(A7)
080004C4  4878 0004  816          pea       4
080004C8  4EB9 0800  817          jsr       LDIV
080004CC  1D0A      
080004CE  202F 0004  818          move.l    4(A7),D0
080004D2  504F       819          addq.w    #8,A7
080004D4  4A80       820          tst.l     D0
080004D6  6600 003C  821          bne       byte_func_15
                     822   byte_func_17:
                     823   ; *Start = bytedata1;
080004DA  202E FFEC  824          move.l    -20(A6),D0
080004DE  2043       825          move.l    D3,A0
080004E0  1080       826          move.b    D0,(A0)
                     827   ; if ((count == 0) || ((count % 1000)==0)){
080004E2  4A82       828          tst.l     D2
080004E4  6716       829          beq.s     byte_func_20
080004E6  2F02       830          move.l    D2,-(A7)
080004E8  4878 03E8  831          pea       1000
080004EC  4EB9 0800  832          jsr       LDIV
080004F0  1D0A      
080004F2  202F 0004  833          move.l    4(A7),D0
080004F6  504F       834          addq.w    #8,A7
080004F8  4A80       835          tst.l     D0
080004FA  6612       836          bne.s     byte_func_18
                     837   byte_func_20:
                     838   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata1);
080004FC  2F2E FFEC  839          move.l    -20(A6),-(A7)
08000500  2F03       840          move.l    D3,-(A7)
08000502  4879 0800  841          pea       @m68kus~1_15.L
08000506  3336      
08000508  4E92       842          jsr       (A2)
0800050A  DEFC 000C  843          add.w     #12,A7
                     844   byte_func_18:
                     845   ; }
                     846   ; Start++;
0800050E  5283       847          addq.l    #1,D3
08000510  6000 013A  848          bra       byte_func_34
                     849   byte_func_15:
                     850   ; }
                     851   ; else if ((count == 1) || (((count - 1)%4)==0)){
08000514  0C82 0000  852          cmp.l     #1,D2
08000518  0001      
0800051A  671C       853          beq.s     byte_func_23
0800051C  2002       854          move.l    D2,D0
0800051E  5380       855          subq.l    #1,D0
08000520  2F00       856          move.l    D0,-(A7)
08000522  4878 0004  857          pea       4
08000526  4EB9 0800  858          jsr       LDIV
0800052A  1D0A      
0800052C  202F 0004  859          move.l    4(A7),D0
08000530  504F       860          addq.w    #8,A7
08000532  4A80       861          tst.l     D0
08000534  6600 0044  862          bne       byte_func_21
                     863   byte_func_23:
                     864   ; *Start = bytedata2;
08000538  202E FFF0  865          move.l    -16(A6),D0
0800053C  2043       866          move.l    D3,A0
0800053E  1080       867          move.b    D0,(A0)
                     868   ; if ((count == 1) || (((count - 1) % 1000)==0)){
08000540  0C82 0000  869          cmp.l     #1,D2
08000544  0001      
08000546  671A       870          beq.s     byte_func_26
08000548  2002       871          move.l    D2,D0
0800054A  5380       872          subq.l    #1,D0
0800054C  2F00       873          move.l    D0,-(A7)
0800054E  4878 03E8  874          pea       1000
08000552  4EB9 0800  875          jsr       LDIV
08000556  1D0A      
08000558  202F 0004  876          move.l    4(A7),D0
0800055C  504F       877          addq.w    #8,A7
0800055E  4A80       878          tst.l     D0
08000560  6612       879          bne.s     byte_func_24
                     880   byte_func_26:
                     881   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata2);
08000562  2F2E FFF0  882          move.l    -16(A6),-(A7)
08000566  2F03       883          move.l    D3,-(A7)
08000568  4879 0800  884          pea       @m68kus~1_15.L
0800056C  3336      
0800056E  4E92       885          jsr       (A2)
08000570  DEFC 000C  886          add.w     #12,A7
                     887   byte_func_24:
                     888   ; }
                     889   ; Start++;
08000574  5283       890          addq.l    #1,D3
08000576  6000 00D4  891          bra       byte_func_34
                     892   byte_func_21:
                     893   ; }
                     894   ; else if ((count == 2) || (((count - 2)%4)==0)){
0800057A  0C82 0000  895          cmp.l     #2,D2
0800057E  0002      
08000580  671C       896          beq.s     byte_func_29
08000582  2002       897          move.l    D2,D0
08000584  5580       898          subq.l    #2,D0
08000586  2F00       899          move.l    D0,-(A7)
08000588  4878 0004  900          pea       4
0800058C  4EB9 0800  901          jsr       LDIV
08000590  1D0A      
08000592  202F 0004  902          move.l    4(A7),D0
08000596  504F       903          addq.w    #8,A7
08000598  4A80       904          tst.l     D0
0800059A  6600 0044  905          bne       byte_func_27
                     906   byte_func_29:
                     907   ; *Start = bytedata3;
0800059E  202E FFF4  908          move.l    -12(A6),D0
080005A2  2043       909          move.l    D3,A0
080005A4  1080       910          move.b    D0,(A0)
                     911   ; if ((count == 2) || (((count - 2) % 1000)==0)){
080005A6  0C82 0000  912          cmp.l     #2,D2
080005AA  0002      
080005AC  671A       913          beq.s     byte_func_32
080005AE  2002       914          move.l    D2,D0
080005B0  5580       915          subq.l    #2,D0
080005B2  2F00       916          move.l    D0,-(A7)
080005B4  4878 03E8  917          pea       1000
080005B8  4EB9 0800  918          jsr       LDIV
080005BC  1D0A      
080005BE  202F 0004  919          move.l    4(A7),D0
080005C2  504F       920          addq.w    #8,A7
080005C4  4A80       921          tst.l     D0
080005C6  6612       922          bne.s     byte_func_30
                     923   byte_func_32:
                     924   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata3);
080005C8  2F2E FFF4  925          move.l    -12(A6),-(A7)
080005CC  2F03       926          move.l    D3,-(A7)
080005CE  4879 0800  927          pea       @m68kus~1_15.L
080005D2  3336      
080005D4  4E92       928          jsr       (A2)
080005D6  DEFC 000C  929          add.w     #12,A7
                     930   byte_func_30:
                     931   ; }
                     932   ; Start++;
080005DA  5283       933          addq.l    #1,D3
080005DC  6000 006E  934          bra       byte_func_34
                     935   byte_func_27:
                     936   ; }
                     937   ; else if ((count == 3) || (((count - 3)%4)==0)){
080005E0  0C82 0000  938          cmp.l     #3,D2
080005E4  0003      
080005E6  671C       939          beq.s     byte_func_35
080005E8  2002       940          move.l    D2,D0
080005EA  5780       941          subq.l    #3,D0
080005EC  2F00       942          move.l    D0,-(A7)
080005EE  4878 0004  943          pea       4
080005F2  4EB9 0800  944          jsr       LDIV
080005F6  1D0A      
080005F8  202F 0004  945          move.l    4(A7),D0
080005FC  504F       946          addq.w    #8,A7
080005FE  4A80       947          tst.l     D0
08000600  6600 0042  948          bne       byte_func_33
                     949   byte_func_35:
                     950   ; *Start = bytedata4;
08000604  202E FFF8  951          move.l    -8(A6),D0
08000608  2043       952          move.l    D3,A0
0800060A  1080       953          move.b    D0,(A0)
                     954   ; if ((count == 3) || (((count - 3) % 1000)==0)){
0800060C  0C82 0000  955          cmp.l     #3,D2
08000610  0003      
08000612  671A       956          beq.s     byte_func_38
08000614  2002       957          move.l    D2,D0
08000616  5780       958          subq.l    #3,D0
08000618  2F00       959          move.l    D0,-(A7)
0800061A  4878 03E8  960          pea       1000
0800061E  4EB9 0800  961          jsr       LDIV
08000622  1D0A      
08000624  202F 0004  962          move.l    4(A7),D0
08000628  504F       963          addq.w    #8,A7
0800062A  4A80       964          tst.l     D0
0800062C  6612       965          bne.s     byte_func_36
                     966   byte_func_38:
                     967   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata4);
0800062E  2F2E FFF8  968          move.l    -8(A6),-(A7)
08000632  2F03       969          move.l    D3,-(A7)
08000634  4879 0800  970          pea       @m68kus~1_15.L
08000638  3336      
0800063A  4E92       971          jsr       (A2)
0800063C  DEFC 000C  972          add.w     #12,A7
                     973   byte_func_36:
                     974   ; }
                     975   ; Start++;
08000640  5283       976          addq.l    #1,D3
08000642  6008       977          bra.s     byte_func_34
                     978   byte_func_33:
                     979   ; }
                     980   ; else {
                     981   ; *Start++ = filldata;
08000644  2043       982          move.l    D3,A0
08000646  5283       983          addq.l    #1,D3
08000648  10AE FFEA  984          move.b    -22(A6),(A0)
                     985   byte_func_34:
                     986   ; }
                     987   ; //      if ((count == 0) || ((count % 1000)==0)){
                     988   ; //       printf("\r\nAdress $%08X being filled with $%02X", Start, readval);
                     989   ; //}
                     990   ; count++;
0800064C  5282       991          addq.l    #1,D2
0800064E  6000 FE68  992          bra       byte_func_12
                     993   byte_func_14:
                     994   ; }
                     995   ; printf("\r\nWriting to memory Complete.\r\nEnter '1' to read back the memory. Enter '0' to exit program.");
08000652  4879 0800  996          pea       @m68kus~1_16.L
08000656  335E      
08000658  4E92       997          jsr       (A2)
0800065A  584F       998          addq.w    #4,A7
                     999   ; choice = _getch();
0800065C  4EB9 0800 1000          jsr       __getch
08000660  0124      
08000662  1E00      1001          move.b    D0,D7
                    1002   ; if (choice == '1'){
08000664  0C07 0031 1003          cmp.b     #49,D7
08000668  6600 00FE 1004          bne       byte_func_39
                    1005   ; // printf("\r\nwill continue");
                    1006   ; while (Start_temp <= End_temp){
                    1007   byte_func_41:
0800066C  BAAE FFDE 1008          cmp.l     -34(A6),D5
08000670  6200 00F4 1009          bhi       byte_func_43
                    1010   ; tempdata = *Start_temp;
08000674  2045      1011          move.l    D5,A0
08000676  1C10      1012          move.b    (A0),D6
                    1013   ; if ((count2 == 0) || (count2 % 1000)==0){
08000678  4A84      1014          tst.l     D4
0800067A  6716      1015          beq.s     byte_func_46
0800067C  2F04      1016          move.l    D4,-(A7)
0800067E  4878 03E8 1017          pea       1000
08000682  4EB9 0800 1018          jsr       LDIV
08000686  1D0A      
08000688  202F 0004 1019          move.l    4(A7),D0
0800068C  504F      1020          addq.w    #8,A7
0800068E  4A80      1021          tst.l     D0
08000690  661A      1022          bne.s     byte_func_44
                    1023   byte_func_46:
                    1024   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
08000692  2F05      1025          move.l    D5,-(A7)
08000694  CCBC 0000 1026          and.l     #255,D6
08000698  00FF      
0800069A  2F06      1027          move.l    D6,-(A7)
0800069C  4879 0800 1028          pea       @m68kus~1_17.L
080006A0  33BC      
080006A2  4E92      1029          jsr       (A2)
080006A4  DEFC 000C 1030          add.w     #12,A7
080006A8  6000 00B2 1031          bra       byte_func_53
                    1032   byte_func_44:
                    1033   ; }
                    1034   ; else if ((count2 == 1) || ((count2 - 1) % 1000)==0){
080006AC  0C84 0000 1035          cmp.l     #1,D4
080006B0  0001      
080006B2  671A      1036          beq.s     byte_func_49
080006B4  2004      1037          move.l    D4,D0
080006B6  5380      1038          subq.l    #1,D0
080006B8  2F00      1039          move.l    D0,-(A7)
080006BA  4878 03E8 1040          pea       1000
080006BE  4EB9 0800 1041          jsr       LDIV
080006C2  1D0A      
080006C4  202F 0004 1042          move.l    4(A7),D0
080006C8  504F      1043          addq.w    #8,A7
080006CA  4A80      1044          tst.l     D0
080006CC  661A      1045          bne.s     byte_func_47
                    1046   byte_func_49:
                    1047   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
080006CE  2F05      1048          move.l    D5,-(A7)
080006D0  CCBC 0000 1049          and.l     #255,D6
080006D4  00FF      
080006D6  2F06      1050          move.l    D6,-(A7)
080006D8  4879 0800 1051          pea       @m68kus~1_17.L
080006DC  33BC      
080006DE  4E92      1052          jsr       (A2)
080006E0  DEFC 000C 1053          add.w     #12,A7
080006E4  6000 0076 1054          bra       byte_func_53
                    1055   byte_func_47:
                    1056   ; }
                    1057   ; else if ((count2 == 2) || ((count2 - 2) % 1000)==0){
080006E8  0C84 0000 1058          cmp.l     #2,D4
080006EC  0002      
080006EE  671A      1059          beq.s     byte_func_52
080006F0  2004      1060          move.l    D4,D0
080006F2  5580      1061          subq.l    #2,D0
080006F4  2F00      1062          move.l    D0,-(A7)
080006F6  4878 03E8 1063          pea       1000
080006FA  4EB9 0800 1064          jsr       LDIV
080006FE  1D0A      
08000700  202F 0004 1065          move.l    4(A7),D0
08000704  504F      1066          addq.w    #8,A7
08000706  4A80      1067          tst.l     D0
08000708  661A      1068          bne.s     byte_func_50
                    1069   byte_func_52:
                    1070   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
0800070A  2F05      1071          move.l    D5,-(A7)
0800070C  CCBC 0000 1072          and.l     #255,D6
08000710  00FF      
08000712  2F06      1073          move.l    D6,-(A7)
08000714  4879 0800 1074          pea       @m68kus~1_17.L
08000718  33BC      
0800071A  4E92      1075          jsr       (A2)
0800071C  DEFC 000C 1076          add.w     #12,A7
08000720  6000 003A 1077          bra       byte_func_53
                    1078   byte_func_50:
                    1079   ; }
                    1080   ; else if ((count2 == 3) || ((count2 - 3) % 1000)==0){
08000724  0C84 0000 1081          cmp.l     #3,D4
08000728  0003      
0800072A  671A      1082          beq.s     byte_func_55
0800072C  2004      1083          move.l    D4,D0
0800072E  5780      1084          subq.l    #3,D0
08000730  2F00      1085          move.l    D0,-(A7)
08000732  4878 03E8 1086          pea       1000
08000736  4EB9 0800 1087          jsr       LDIV
0800073A  1D0A      
0800073C  202F 0004 1088          move.l    4(A7),D0
08000740  504F      1089          addq.w    #8,A7
08000742  4A80      1090          tst.l     D0
08000744  6616      1091          bne.s     byte_func_53
                    1092   byte_func_55:
                    1093   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
08000746  2F05      1094          move.l    D5,-(A7)
08000748  CCBC 0000 1095          and.l     #255,D6
0800074C  00FF      
0800074E  2F06      1096          move.l    D6,-(A7)
08000750  4879 0800 1097          pea       @m68kus~1_17.L
08000754  33BC      
08000756  4E92      1098          jsr       (A2)
08000758  DEFC 000C 1099          add.w     #12,A7
                    1100   byte_func_53:
                    1101   ; }
                    1102   ; count2++;
0800075C  5284      1103          addq.l    #1,D4
                    1104   ; *Start_temp++;
0800075E  2045      1105          move.l    D5,A0
08000760  5285      1106          addq.l    #1,D5
08000762  6000 FF08 1107          bra       byte_func_41
                    1108   byte_func_43:
08000766  6010      1109          bra.s     byte_func_56
                    1110   byte_func_39:
                    1111   ; }
                    1112   ; }
                    1113   ; else if (choice == '0'){
08000768  0C07 0030 1114          cmp.b     #48,D7
0800076C  660A      1115          bne.s     byte_func_56
                    1116   ; printf("\r\nProgram Ended");
0800076E  4879 0800 1117          pea       @m68kus~1_18.L
08000772  33DC      
08000774  4E92      1118          jsr       (A2)
08000776  584F      1119          addq.w    #4,A7
                    1120   byte_func_56:
08000778  4CDF 3CFC 1121          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
0800077C  4E5E      1122          unlk      A6
0800077E  4E75      1123          rts
                    1124   ; }
                    1125   ; }
                    1126   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1127   ; //word_func//
                    1128   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1129   ; void word_func(void){
                    1130   _word_func:
08000780  4E56 FFD8 1131          link      A6,#-40
08000784  48E7 3F38 1132          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4,-(A7)
08000788  45F9 0800 1133          lea       _printf.L,A2
0800078C  1E08      
0800078E  47F9 0800 1134          lea       _scanf.L,A3
08000792  1DD6      
08000794  49EE FFF2 1135          lea       -14(A6),A4
                    1136   ; int worddata1, worddata2, worddata3, worddata4;
                    1137   ; int tempdata;
                    1138   ; int *Start_hold, *End_hold;
                    1139   ; short *Start, *End;
                    1140   ; short *Start_temp, *End_temp;
                    1141   ; unsigned char data, data2;
                    1142   ; int count1 = 0;
08000798  4283      1143          clr.l     D3
                    1144   ; int count2 = 0;
0800079A  4285      1145          clr.l     D5
                    1146   ; char choice;
                    1147   ; printf("\r\nEnter 4 words (2 bytes) of Hexidecimal test data.");
0800079C  4879 0800 1148          pea       @m68kus~1_19.L
080007A0  33EC      
080007A2  4E92      1149          jsr       (A2)
080007A4  584F      1150          addq.w    #4,A7
                    1151   ; printf("\r\nEnter First word: ");
080007A6  4879 0800 1152          pea       @m68kus~1_20.L
080007AA  3420      
080007AC  4E92      1153          jsr       (A2)
080007AE  584F      1154          addq.w    #4,A7
                    1155   ; scanf("%x", &worddata1) ;
080007B0  486E FFDA 1156          pea       -38(A6)
080007B4  4879 0800 1157          pea       @m68kus~1_3.L
080007B8  31A4      
080007BA  4E93      1158          jsr       (A3)
080007BC  504F      1159          addq.w    #8,A7
                    1160   ; //worddata1 = Get4HexDigits(0) ;
                    1161   ; printf("Enter Second word: ");
080007BE  4879 0800 1162          pea       @m68kus~1_21.L
080007C2  3436      
080007C4  4E92      1163          jsr       (A2)
080007C6  584F      1164          addq.w    #4,A7
                    1165   ; scanf("%x", &worddata2) ;
080007C8  486E FFDE 1166          pea       -34(A6)
080007CC  4879 0800 1167          pea       @m68kus~1_3.L
080007D0  31A4      
080007D2  4E93      1168          jsr       (A3)
080007D4  504F      1169          addq.w    #8,A7
                    1170   ; //worddata2 = Get4HexDigits(0) ;
                    1171   ; printf("Enter Third word: ");
080007D6  4879 0800 1172          pea       @m68kus~1_22.L
080007DA  344A      
080007DC  4E92      1173          jsr       (A2)
080007DE  584F      1174          addq.w    #4,A7
                    1175   ; scanf("%x", &worddata3) ;
080007E0  486E FFE2 1176          pea       -30(A6)
080007E4  4879 0800 1177          pea       @m68kus~1_3.L
080007E8  31A4      
080007EA  4E93      1178          jsr       (A3)
080007EC  504F      1179          addq.w    #8,A7
                    1180   ; //worddata3 = Get4HexDigits(0) ;
                    1181   ; printf("Enter Fourth word: ");
080007EE  4879 0800 1182          pea       @m68kus~1_23.L
080007F2  345E      
080007F4  4E92      1183          jsr       (A2)
080007F6  584F      1184          addq.w    #4,A7
                    1185   ; scanf("%x", &worddata4) ;
080007F8  486E FFE6 1186          pea       -26(A6)
080007FC  4879 0800 1187          pea       @m68kus~1_3.L
08000800  31A4      
08000802  4E93      1188          jsr       (A3)
08000804  504F      1189          addq.w    #8,A7
                    1190   ; //worddata4 = Get4HexDigits(0) ;
                    1191   ; printf("Valid addresses for this program are: $0900 0000 - $097F FFFF");
08000806  4879 0800 1192          pea       @m68kus~1_24.L
0800080A  3472      
0800080C  4E92      1193          jsr       (A2)
0800080E  584F      1194          addq.w    #4,A7
                    1195   ; printf("\r\nFor this test, the start and end addresses must align to an even address");
08000810  4879 0800 1196          pea       @m68kus~1_25.L
08000814  34B0      
08000816  4E92      1197          jsr       (A2)
08000818  584F      1198          addq.w    #4,A7
                    1199   ; printf("\r\nEnter Start Address: ") ;
0800081A  4879 0800 1200          pea       @m68kus~1_8.L
0800081E  3224      
08000820  4E92      1201          jsr       (A2)
08000822  584F      1202          addq.w    #4,A7
                    1203   ; scanf("%x", &Start_hold) ;
08000824  486E FFEE 1204          pea       -18(A6)
08000828  4879 0800 1205          pea       @m68kus~1_3.L
0800082C  31A4      
0800082E  4E93      1206          jsr       (A3)
08000830  504F      1207          addq.w    #8,A7
                    1208   ; //Start_hold = Get8HexDigits(0) ;
                    1209   ; printf("Enter End Address: ") ;
08000832  4879 0800 1210          pea       @m68kus~1_9.L
08000836  323C      
08000838  4E92      1211          jsr       (A2)
0800083A  584F      1212          addq.w    #4,A7
                    1213   ; scanf("%x", &End_hold) ;
0800083C  2F0C      1214          move.l    A4,-(A7)
0800083E  4879 0800 1215          pea       @m68kus~1_3.L
08000842  31A4      
08000844  4E93      1216          jsr       (A3)
08000846  504F      1217          addq.w    #8,A7
                    1218   ; //End_hold = Get8HexDigits(0) ;
                    1219   ; while ((Start_hold < 0x09000000) || (Start_hold > 0x097FFFFF) || ((Start_hold % 2) != 0)){
                    1220   word_func_1:
08000848  202E FFEE 1221          move.l    -18(A6),D0
0800084C  0C80 0900 1222          cmp.l     #150994944,D0
08000850  0000      
08000852  6524      1223          blo.s     word_func_4
08000854  202E FFEE 1224          move.l    -18(A6),D0
08000858  0C80 097F 1225          cmp.l     #159383551,D0
0800085C  FFFF      
0800085E  6218      1226          bhi.s     word_func_4
08000860  2F2E FFEE 1227          move.l    -18(A6),-(A7)
08000864  4878 0002 1228          pea       2
08000868  4EB9 0800 1229          jsr       ULDIV
0800086C  1CF8      
0800086E  202F 0004 1230          move.l    4(A7),D0
08000872  504F      1231          addq.w    #8,A7
08000874  4A80      1232          tst.l     D0
08000876  671A      1233          beq.s     word_func_3
                    1234   word_func_4:
                    1235   ; printf("ERROR. Please Enter a valid Start Address: ");
08000878  4879 0800 1236          pea       @m68kus~1_10.L
0800087C  3250      
0800087E  4E92      1237          jsr       (A2)
08000880  584F      1238          addq.w    #4,A7
                    1239   ; scanf("%x", &Start_hold) ;
08000882  486E FFEE 1240          pea       -18(A6)
08000886  4879 0800 1241          pea       @m68kus~1_3.L
0800088A  31A4      
0800088C  4E93      1242          jsr       (A3)
0800088E  504F      1243          addq.w    #8,A7
08000890  60B6      1244          bra       word_func_1
                    1245   word_func_3:
                    1246   ; //Start_hold = Get8HexDigits(0) ;
                    1247   ; }
                    1248   ; while ((End_hold < 0x09000000) || (End_hold > 0x097FFFFF) || ((End_hold % 2) != 0)){
                    1249   word_func_5:
08000892  2014      1250          move.l    (A4),D0
08000894  0C80 0900 1251          cmp.l     #150994944,D0
08000898  0000      
0800089A  6520      1252          blo.s     word_func_8
0800089C  2014      1253          move.l    (A4),D0
0800089E  0C80 097F 1254          cmp.l     #159383551,D0
080008A2  FFFF      
080008A4  6216      1255          bhi.s     word_func_8
080008A6  2F14      1256          move.l    (A4),-(A7)
080008A8  4878 0002 1257          pea       2
080008AC  4EB9 0800 1258          jsr       ULDIV
080008B0  1CF8      
080008B2  202F 0004 1259          move.l    4(A7),D0
080008B6  504F      1260          addq.w    #8,A7
080008B8  4A80      1261          tst.l     D0
080008BA  6718      1262          beq.s     word_func_7
                    1263   word_func_8:
                    1264   ; printf("ERROR. Please Enter a valid End Address: ");
080008BC  4879 0800 1265          pea       @m68kus~1_26.L
080008C0  34FC      
080008C2  4E92      1266          jsr       (A2)
080008C4  584F      1267          addq.w    #4,A7
                    1268   ; scanf("%x", &End_hold) ;
080008C6  2F0C      1269          move.l    A4,-(A7)
080008C8  4879 0800 1270          pea       @m68kus~1_3.L
080008CC  31A4      
080008CE  4E93      1271          jsr       (A3)
080008D0  504F      1272          addq.w    #8,A7
080008D2  60BE      1273          bra       word_func_5
                    1274   word_func_7:
                    1275   ; //End_hold = Get8HexDigits(0) ;
                    1276   ; }
                    1277   ; while (End_hold <= Start_hold){
                    1278   word_func_9:
080008D4  2014      1279          move.l    (A4),D0
080008D6  B0AE FFEE 1280          cmp.l     -18(A6),D0
080008DA  6222      1281          bhi.s     word_func_11
                    1282   ; printf("ERROR. Please enter an End Address larger than the Start Address");
080008DC  4879 0800 1283          pea       @m68kus~1_27.L
080008E0  3526      
080008E2  4E92      1284          jsr       (A2)
080008E4  584F      1285          addq.w    #4,A7
                    1286   ; //printf("\r\nEnter Start Address: ") ;
                    1287   ; //Start_hold = Get8HexDigits(0) ;
                    1288   ; printf("\r\nEnter End Address: ") ;
080008E6  4879 0800 1289          pea       @m68kus~1_13.L
080008EA  32EC      
080008EC  4E92      1290          jsr       (A2)
080008EE  584F      1291          addq.w    #4,A7
                    1292   ; scanf("%x", &End_hold) ;
080008F0  2F0C      1293          move.l    A4,-(A7)
080008F2  4879 0800 1294          pea       @m68kus~1_3.L
080008F6  31A4      
080008F8  4E93      1295          jsr       (A3)
080008FA  504F      1296          addq.w    #8,A7
080008FC  60D6      1297          bra       word_func_9
                    1298   word_func_11:
                    1299   ; //End_hold = Get8HexDigits(0) ;
                    1300   ; }
                    1301   ; Start = Start_hold;
080008FE  242E FFEE 1302          move.l    -18(A6),D2
                    1303   ; End = End_hold;
08000902  2D54 FFF6 1304          move.l    (A4),-10(A6)
                    1305   ; Start_temp = Start_hold;
08000906  282E FFEE 1306          move.l    -18(A6),D4
                    1307   ; End_temp = End_hold;
0800090A  2D54 FFFA 1308          move.l    (A4),-6(A6)
                    1309   ; while (Start < End){
                    1310   word_func_12:
0800090E  B4AE FFF6 1311          cmp.l     -10(A6),D2
08000912  6400 01A8 1312          bhs       word_func_14
                    1313   ; if ((count1 == 0) || ((count1 % 4)) ==0 ){
08000916  4A83      1314          tst.l     D3
08000918  6718      1315          beq.s     word_func_17
0800091A  2F03      1316          move.l    D3,-(A7)
0800091C  4878 0004 1317          pea       4
08000920  4EB9 0800 1318          jsr       LDIV
08000924  1D0A      
08000926  202F 0004 1319          move.l    4(A7),D0
0800092A  504F      1320          addq.w    #8,A7
0800092C  4A80      1321          tst.l     D0
0800092E  6600 0042 1322          bne       word_func_15
                    1323   word_func_17:
                    1324   ; *Start = worddata1;
08000932  202E FFDA 1325          move.l    -38(A6),D0
08000936  2042      1326          move.l    D2,A0
08000938  3080      1327          move.w    D0,(A0)
                    1328   ; if ((count1 == 0) || ((count1 % 1000)==0)){
0800093A  4A83      1329          tst.l     D3
0800093C  6716      1330          beq.s     word_func_20
0800093E  2F03      1331          move.l    D3,-(A7)
08000940  4878 03E8 1332          pea       1000
08000944  4EB9 0800 1333          jsr       LDIV
08000948  1D0A      
0800094A  202F 0004 1334          move.l    4(A7),D0
0800094E  504F      1335          addq.w    #8,A7
08000950  4A80      1336          tst.l     D0
08000952  661C      1337          bne.s     word_func_18
                    1338   word_func_20:
                    1339   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata1);
08000954  2F2E FFDA 1340          move.l    -38(A6),-(A7)
08000958  2202      1341          move.l    D2,D1
0800095A  82BC 0000 1342          or.l      #1,D1
0800095E  0001      
08000960  2F01      1343          move.l    D1,-(A7)
08000962  2F02      1344          move.l    D2,-(A7)
08000964  4879 0800 1345          pea       @m68kus~1_28.L
08000968  3568      
0800096A  4E92      1346          jsr       (A2)
0800096C  DEFC 0010 1347          add.w     #16,A7
                    1348   word_func_18:
                    1349   ; }
                    1350   ; Start++;
08000970  5482      1351          addq.l    #2,D2
                    1352   word_func_15:
                    1353   ; }
                    1354   ; if ((count1 == 1) || (((count1 - 1) % 4)) ==0 ){
08000972  0C83 0000 1355          cmp.l     #1,D3
08000976  0001      
08000978  671C      1356          beq.s     word_func_23
0800097A  2003      1357          move.l    D3,D0
0800097C  5380      1358          subq.l    #1,D0
0800097E  2F00      1359          move.l    D0,-(A7)
08000980  4878 0004 1360          pea       4
08000984  4EB9 0800 1361          jsr       LDIV
08000988  1D0A      
0800098A  202F 0004 1362          move.l    4(A7),D0
0800098E  504F      1363          addq.w    #8,A7
08000990  4A80      1364          tst.l     D0
08000992  6600 004A 1365          bne       word_func_21
                    1366   word_func_23:
                    1367   ; *Start = worddata2;
08000996  202E FFDE 1368          move.l    -34(A6),D0
0800099A  2042      1369          move.l    D2,A0
0800099C  3080      1370          move.w    D0,(A0)
                    1371   ; if ((count1 == 1) || (((count1 -1) % 1000)==0)){
0800099E  0C83 0000 1372          cmp.l     #1,D3
080009A2  0001      
080009A4  671A      1373          beq.s     word_func_26
080009A6  2003      1374          move.l    D3,D0
080009A8  5380      1375          subq.l    #1,D0
080009AA  2F00      1376          move.l    D0,-(A7)
080009AC  4878 03E8 1377          pea       1000
080009B0  4EB9 0800 1378          jsr       LDIV
080009B4  1D0A      
080009B6  202F 0004 1379          move.l    4(A7),D0
080009BA  504F      1380          addq.w    #8,A7
080009BC  4A80      1381          tst.l     D0
080009BE  661C      1382          bne.s     word_func_24
                    1383   word_func_26:
                    1384   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata2);
080009C0  2F2E FFDE 1385          move.l    -34(A6),-(A7)
080009C4  2202      1386          move.l    D2,D1
080009C6  82BC 0000 1387          or.l      #1,D1
080009CA  0001      
080009CC  2F01      1388          move.l    D1,-(A7)
080009CE  2F02      1389          move.l    D2,-(A7)
080009D0  4879 0800 1390          pea       @m68kus~1_28.L
080009D4  3568      
080009D6  4E92      1391          jsr       (A2)
080009D8  DEFC 0010 1392          add.w     #16,A7
                    1393   word_func_24:
                    1394   ; }
                    1395   ; Start++;
080009DC  5482      1396          addq.l    #2,D2
                    1397   word_func_21:
                    1398   ; }
                    1399   ; if ((count1 == 2) || (((count1 - 2) % 4)) ==0 ){
080009DE  0C83 0000 1400          cmp.l     #2,D3
080009E2  0002      
080009E4  671C      1401          beq.s     word_func_29
080009E6  2003      1402          move.l    D3,D0
080009E8  5580      1403          subq.l    #2,D0
080009EA  2F00      1404          move.l    D0,-(A7)
080009EC  4878 0004 1405          pea       4
080009F0  4EB9 0800 1406          jsr       LDIV
080009F4  1D0A      
080009F6  202F 0004 1407          move.l    4(A7),D0
080009FA  504F      1408          addq.w    #8,A7
080009FC  4A80      1409          tst.l     D0
080009FE  6600 004A 1410          bne       word_func_27
                    1411   word_func_29:
                    1412   ; *Start = worddata3;
08000A02  202E FFE2 1413          move.l    -30(A6),D0
08000A06  2042      1414          move.l    D2,A0
08000A08  3080      1415          move.w    D0,(A0)
                    1416   ; if ((count1 == 2) || (((count1 -2) % 1000)==0)){
08000A0A  0C83 0000 1417          cmp.l     #2,D3
08000A0E  0002      
08000A10  671A      1418          beq.s     word_func_32
08000A12  2003      1419          move.l    D3,D0
08000A14  5580      1420          subq.l    #2,D0
08000A16  2F00      1421          move.l    D0,-(A7)
08000A18  4878 03E8 1422          pea       1000
08000A1C  4EB9 0800 1423          jsr       LDIV
08000A20  1D0A      
08000A22  202F 0004 1424          move.l    4(A7),D0
08000A26  504F      1425          addq.w    #8,A7
08000A28  4A80      1426          tst.l     D0
08000A2A  661C      1427          bne.s     word_func_30
                    1428   word_func_32:
                    1429   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata3);
08000A2C  2F2E FFE2 1430          move.l    -30(A6),-(A7)
08000A30  2202      1431          move.l    D2,D1
08000A32  82BC 0000 1432          or.l      #1,D1
08000A36  0001      
08000A38  2F01      1433          move.l    D1,-(A7)
08000A3A  2F02      1434          move.l    D2,-(A7)
08000A3C  4879 0800 1435          pea       @m68kus~1_28.L
08000A40  3568      
08000A42  4E92      1436          jsr       (A2)
08000A44  DEFC 0010 1437          add.w     #16,A7
                    1438   word_func_30:
                    1439   ; }
                    1440   ; Start++;
08000A48  5482      1441          addq.l    #2,D2
                    1442   word_func_27:
                    1443   ; }
                    1444   ; if ((count1 == 3) || (((count1 - 3) % 4)) ==0 ){
08000A4A  0C83 0000 1445          cmp.l     #3,D3
08000A4E  0003      
08000A50  671C      1446          beq.s     word_func_35
08000A52  2003      1447          move.l    D3,D0
08000A54  5780      1448          subq.l    #3,D0
08000A56  2F00      1449          move.l    D0,-(A7)
08000A58  4878 0004 1450          pea       4
08000A5C  4EB9 0800 1451          jsr       LDIV
08000A60  1D0A      
08000A62  202F 0004 1452          move.l    4(A7),D0
08000A66  504F      1453          addq.w    #8,A7
08000A68  4A80      1454          tst.l     D0
08000A6A  6600 004A 1455          bne       word_func_33
                    1456   word_func_35:
                    1457   ; *Start = worddata4;
08000A6E  202E FFE6 1458          move.l    -26(A6),D0
08000A72  2042      1459          move.l    D2,A0
08000A74  3080      1460          move.w    D0,(A0)
                    1461   ; if ((count1 == 3) || (((count1 - 3) % 1000)==0)){
08000A76  0C83 0000 1462          cmp.l     #3,D3
08000A7A  0003      
08000A7C  671A      1463          beq.s     word_func_38
08000A7E  2003      1464          move.l    D3,D0
08000A80  5780      1465          subq.l    #3,D0
08000A82  2F00      1466          move.l    D0,-(A7)
08000A84  4878 03E8 1467          pea       1000
08000A88  4EB9 0800 1468          jsr       LDIV
08000A8C  1D0A      
08000A8E  202F 0004 1469          move.l    4(A7),D0
08000A92  504F      1470          addq.w    #8,A7
08000A94  4A80      1471          tst.l     D0
08000A96  661C      1472          bne.s     word_func_36
                    1473   word_func_38:
                    1474   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata4);
08000A98  2F2E FFE6 1475          move.l    -26(A6),-(A7)
08000A9C  2202      1476          move.l    D2,D1
08000A9E  82BC 0000 1477          or.l      #1,D1
08000AA2  0001      
08000AA4  2F01      1478          move.l    D1,-(A7)
08000AA6  2F02      1479          move.l    D2,-(A7)
08000AA8  4879 0800 1480          pea       @m68kus~1_28.L
08000AAC  3568      
08000AAE  4E92      1481          jsr       (A2)
08000AB0  DEFC 0010 1482          add.w     #16,A7
                    1483   word_func_36:
                    1484   ; }
                    1485   ; Start++;
08000AB4  5482      1486          addq.l    #2,D2
                    1487   word_func_33:
                    1488   ; }
                    1489   ; count1++;
08000AB6  5283      1490          addq.l    #1,D3
08000AB8  6000 FE54 1491          bra       word_func_12
                    1492   word_func_14:
                    1493   ; }
                    1494   ; printf("\r\nWriting to memory Complete.\r\nEnter '1' to read back the memory. Enter '0' to exit program.");
08000ABC  4879 0800 1495          pea       @m68kus~1_16.L
08000AC0  335E      
08000AC2  4E92      1496          jsr       (A2)
08000AC4  584F      1497          addq.w    #4,A7
                    1498   ; choice = _getch();
08000AC6  4EB9 0800 1499          jsr       __getch
08000ACA  0124      
08000ACC  1D40 FFFF 1500          move.b    D0,-1(A6)
                    1501   ; if (choice == '1'){
08000AD0  102E FFFF 1502          move.b    -1(A6),D0
08000AD4  0C00 0031 1503          cmp.b     #49,D0
08000AD8  6600 0158 1504          bne       word_func_39
                    1505   ; //printf("\r\nwill continue");
                    1506   ; while (Start_temp < End_temp){
                    1507   word_func_41:
08000ADC  B8AE FFFA 1508          cmp.l     -6(A6),D4
08000AE0  6400 014E 1509          bhs       word_func_43
                    1510   ; data = (*Start_temp >> 8) & 0xFF;
08000AE4  2044      1511          move.l    D4,A0
08000AE6  3010      1512          move.w    (A0),D0
08000AE8  E040      1513          asr.w     #8,D0
08000AEA  C07C 00FF 1514          and.w     #255,D0
08000AEE  1E00      1515          move.b    D0,D7
                    1516   ; data2 = *Start_temp & 0xFF;
08000AF0  2044      1517          move.l    D4,A0
08000AF2  3010      1518          move.w    (A0),D0
08000AF4  C07C 00FF 1519          and.w     #255,D0
08000AF8  1C00      1520          move.b    D0,D6
                    1521   ; if ((count2 == 0) || (count2 % 1000)==0){
08000AFA  4A85      1522          tst.l     D5
08000AFC  6716      1523          beq.s     word_func_46
08000AFE  2F05      1524          move.l    D5,-(A7)
08000B00  4878 03E8 1525          pea       1000
08000B04  4EB9 0800 1526          jsr       LDIV
08000B08  1D0A      
08000B0A  202F 0004 1527          move.l    4(A7),D0
08000B0E  504F      1528          addq.w    #8,A7
08000B10  4A80      1529          tst.l     D0
08000B12  662C      1530          bne.s     word_func_44
                    1531   word_func_46:
                    1532   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000B14  2204      1533          move.l    D4,D1
08000B16  82BC 0000 1534          or.l      #1,D1
08000B1A  0001      
08000B1C  2F01      1535          move.l    D1,-(A7)
08000B1E  2F04      1536          move.l    D4,-(A7)
08000B20  CCBC 0000 1537          and.l     #255,D6
08000B24  00FF      
08000B26  2F06      1538          move.l    D6,-(A7)
08000B28  CEBC 0000 1539          and.l     #255,D7
08000B2C  00FF      
08000B2E  2F07      1540          move.l    D7,-(A7)
08000B30  4879 0800 1541          pea       @m68kus~1_29.L
08000B34  359A      
08000B36  4E92      1542          jsr       (A2)
08000B38  DEFC 0014 1543          add.w     #20,A7
08000B3C  6000 00E8 1544          bra       word_func_53
                    1545   word_func_44:
                    1546   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1547   ; }
                    1548   ; else if ((count2 == 1) || ((count2 - 1) % 1000)==0){
08000B40  0C85 0000 1549          cmp.l     #1,D5
08000B44  0001      
08000B46  671A      1550          beq.s     word_func_49
08000B48  2005      1551          move.l    D5,D0
08000B4A  5380      1552          subq.l    #1,D0
08000B4C  2F00      1553          move.l    D0,-(A7)
08000B4E  4878 03E8 1554          pea       1000
08000B52  4EB9 0800 1555          jsr       LDIV
08000B56  1D0A      
08000B58  202F 0004 1556          move.l    4(A7),D0
08000B5C  504F      1557          addq.w    #8,A7
08000B5E  4A80      1558          tst.l     D0
08000B60  662C      1559          bne.s     word_func_47
                    1560   word_func_49:
                    1561   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000B62  2204      1562          move.l    D4,D1
08000B64  82BC 0000 1563          or.l      #1,D1
08000B68  0001      
08000B6A  2F01      1564          move.l    D1,-(A7)
08000B6C  2F04      1565          move.l    D4,-(A7)
08000B6E  CCBC 0000 1566          and.l     #255,D6
08000B72  00FF      
08000B74  2F06      1567          move.l    D6,-(A7)
08000B76  CEBC 0000 1568          and.l     #255,D7
08000B7A  00FF      
08000B7C  2F07      1569          move.l    D7,-(A7)
08000B7E  4879 0800 1570          pea       @m68kus~1_29.L
08000B82  359A      
08000B84  4E92      1571          jsr       (A2)
08000B86  DEFC 0014 1572          add.w     #20,A7
08000B8A  6000 009A 1573          bra       word_func_53
                    1574   word_func_47:
                    1575   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1576   ; }
                    1577   ; else if ((count2 == 2) || ((count2 - 2) % 1000)==0){
08000B8E  0C85 0000 1578          cmp.l     #2,D5
08000B92  0002      
08000B94  671A      1579          beq.s     word_func_52
08000B96  2005      1580          move.l    D5,D0
08000B98  5580      1581          subq.l    #2,D0
08000B9A  2F00      1582          move.l    D0,-(A7)
08000B9C  4878 03E8 1583          pea       1000
08000BA0  4EB9 0800 1584          jsr       LDIV
08000BA4  1D0A      
08000BA6  202F 0004 1585          move.l    4(A7),D0
08000BAA  504F      1586          addq.w    #8,A7
08000BAC  4A80      1587          tst.l     D0
08000BAE  662C      1588          bne.s     word_func_50
                    1589   word_func_52:
                    1590   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000BB0  2204      1591          move.l    D4,D1
08000BB2  82BC 0000 1592          or.l      #1,D1
08000BB6  0001      
08000BB8  2F01      1593          move.l    D1,-(A7)
08000BBA  2F04      1594          move.l    D4,-(A7)
08000BBC  CCBC 0000 1595          and.l     #255,D6
08000BC0  00FF      
08000BC2  2F06      1596          move.l    D6,-(A7)
08000BC4  CEBC 0000 1597          and.l     #255,D7
08000BC8  00FF      
08000BCA  2F07      1598          move.l    D7,-(A7)
08000BCC  4879 0800 1599          pea       @m68kus~1_29.L
08000BD0  359A      
08000BD2  4E92      1600          jsr       (A2)
08000BD4  DEFC 0014 1601          add.w     #20,A7
08000BD8  6000 004C 1602          bra       word_func_53
                    1603   word_func_50:
                    1604   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1605   ; }
                    1606   ; else if ((count2 == 3) || ((count2 - 3) % 1000)==0){
08000BDC  0C85 0000 1607          cmp.l     #3,D5
08000BE0  0003      
08000BE2  671A      1608          beq.s     word_func_55
08000BE4  2005      1609          move.l    D5,D0
08000BE6  5780      1610          subq.l    #3,D0
08000BE8  2F00      1611          move.l    D0,-(A7)
08000BEA  4878 03E8 1612          pea       1000
08000BEE  4EB9 0800 1613          jsr       LDIV
08000BF2  1D0A      
08000BF4  202F 0004 1614          move.l    4(A7),D0
08000BF8  504F      1615          addq.w    #8,A7
08000BFA  4A80      1616          tst.l     D0
08000BFC  6628      1617          bne.s     word_func_53
                    1618   word_func_55:
                    1619   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000BFE  2204      1620          move.l    D4,D1
08000C00  82BC 0000 1621          or.l      #1,D1
08000C04  0001      
08000C06  2F01      1622          move.l    D1,-(A7)
08000C08  2F04      1623          move.l    D4,-(A7)
08000C0A  CCBC 0000 1624          and.l     #255,D6
08000C0E  00FF      
08000C10  2F06      1625          move.l    D6,-(A7)
08000C12  CEBC 0000 1626          and.l     #255,D7
08000C16  00FF      
08000C18  2F07      1627          move.l    D7,-(A7)
08000C1A  4879 0800 1628          pea       @m68kus~1_29.L
08000C1E  359A      
08000C20  4E92      1629          jsr       (A2)
08000C22  DEFC 0014 1630          add.w     #20,A7
                    1631   word_func_53:
                    1632   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1633   ; }
                    1634   ; count2++;
08000C26  5285      1635          addq.l    #1,D5
                    1636   ; *Start_temp++;
08000C28  2044      1637          move.l    D4,A0
08000C2A  5484      1638          addq.l    #2,D4
08000C2C  6000 FEAE 1639          bra       word_func_41
                    1640   word_func_43:
08000C30  6014      1641          bra.s     word_func_56
                    1642   word_func_39:
                    1643   ; }
                    1644   ; }
                    1645   ; else if (choice == '0'){
08000C32  102E FFFF 1646          move.b    -1(A6),D0
08000C36  0C00 0030 1647          cmp.b     #48,D0
08000C3A  660A      1648          bne.s     word_func_56
                    1649   ; printf("\r\nProgram Ended");
08000C3C  4879 0800 1650          pea       @m68kus~1_18.L
08000C40  33DC      
08000C42  4E92      1651          jsr       (A2)
08000C44  584F      1652          addq.w    #4,A7
                    1653   word_func_56:
08000C46  4CDF 1CFC 1654          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4
08000C4A  4E5E      1655          unlk      A6
08000C4C  4E75      1656          rts
                    1657   ; }
                    1658   ; /*
                    1659   ; *Start = 0xAAAA;
                    1660   ; printf("\r\n%04X", *Start);
                    1661   ; //  data = *Start;
                    1662   ; //data2 =*(Start + 0x00000001);
                    1663   ; data = (*Start >> 8) & 0xFF;
                    1664   ; data2 = *Start & 0xFF;
                    1665   ; printf("\r\nValue $%02X $%02X found at address $%08X - $%08X", data, data2, Start, (Start + (0x000F && Start)));
                    1666   ; printf("\r\nValue $%02X $%02X found at address $%08X - $%08X", data, data2, Start, (Start + 1));
                    1667   ; printf("\r\nValue $%02X $%02X found at address $%08X - $%08X", data, data2, Start, (Start | 0x0001));
                    1668   ; */
                    1669   ; }
                    1670   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1671   ; //LongWord_func//
                    1672   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1673   ; void longword_func(void){
                    1674   _longword_func:
08000C4E  4E56 FFCC 1675          link      A6,#-52
08000C52  48E7 3F38 1676          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4,-(A7)
08000C56  45F9 0800 1677          lea       _printf.L,A2
08000C5A  1E08      
08000C5C  47F9 0800 1678          lea       _scanf.L,A3
08000C60  1DD6      
08000C62  49EE FFE6 1679          lea       -26(A6),A4
                    1680   ; unsigned char data1a, data1b, data2a, data2b, data3a, data3b, data4a, data4b;
                    1681   ; int lworddata1, lworddata2, lworddata3, lworddata4;
                    1682   ; int *Start_hold, *End_hold;
                    1683   ; int *Start, *End;
                    1684   ; int *idk;
                    1685   ; short test, test1;
                    1686   ; int count3, count4;
                    1687   ; int count1 = 0;
08000C66  4284      1688          clr.l     D4
                    1689   ; int count2 = 0;
08000C68  4285      1690          clr.l     D5
                    1691   ; unsigned char add1, add2;
                    1692   ; short add3;
                    1693   ; char choice;
                    1694   ; printf("\r\nEnter 4 long words (4 bytes) of Hexidecimal test data.");
08000C6A  4879 0800 1695          pea       @m68kus~1_30.L
08000C6E  35D0      
08000C70  4E92      1696          jsr       (A2)
08000C72  584F      1697          addq.w    #4,A7
                    1698   ; printf("\r\nEnter First long word: ");
08000C74  4879 0800 1699          pea       @m68kus~1_31.L
08000C78  360A      
08000C7A  4E92      1700          jsr       (A2)
08000C7C  584F      1701          addq.w    #4,A7
                    1702   ; scanf("%x", &lworddata1) ;
08000C7E  486E FFD2 1703          pea       -46(A6)
08000C82  4879 0800 1704          pea       @m68kus~1_3.L
08000C86  31A4      
08000C88  4E93      1705          jsr       (A3)
08000C8A  504F      1706          addq.w    #8,A7
                    1707   ; //lworddata1 = Get8HexDigits(0) ;
                    1708   ; //data1a = lworddata1 & 0xFFFF;
                    1709   ; //data1b = (lworddata1 >> 16) & 0xFFFF;
                    1710   ; printf("Enter Second long word: ");
08000C8C  4879 0800 1711          pea       @m68kus~1_32.L
08000C90  3624      
08000C92  4E92      1712          jsr       (A2)
08000C94  584F      1713          addq.w    #4,A7
                    1714   ; scanf("%x", &lworddata2) ;
08000C96  486E FFD6 1715          pea       -42(A6)
08000C9A  4879 0800 1716          pea       @m68kus~1_3.L
08000C9E  31A4      
08000CA0  4E93      1717          jsr       (A3)
08000CA2  504F      1718          addq.w    #8,A7
                    1719   ; //lworddata2 = Get8HexDigits(0) ;
                    1720   ; printf("Enter Third long word: ");
08000CA4  4879 0800 1721          pea       @m68kus~1_33.L
08000CA8  363E      
08000CAA  4E92      1722          jsr       (A2)
08000CAC  584F      1723          addq.w    #4,A7
                    1724   ; scanf("%x", &lworddata3) ;
08000CAE  486E FFDA 1725          pea       -38(A6)
08000CB2  4879 0800 1726          pea       @m68kus~1_3.L
08000CB6  31A4      
08000CB8  4E93      1727          jsr       (A3)
08000CBA  504F      1728          addq.w    #8,A7
                    1729   ; //lworddata3 = Get8HexDigits(0) ;
                    1730   ; printf("Enter Fourth long word: ");
08000CBC  4879 0800 1731          pea       @m68kus~1_34.L
08000CC0  3656      
08000CC2  4E92      1732          jsr       (A2)
08000CC4  584F      1733          addq.w    #4,A7
                    1734   ; scanf("%x", &lworddata4) ;
08000CC6  486E FFDE 1735          pea       -34(A6)
08000CCA  4879 0800 1736          pea       @m68kus~1_3.L
08000CCE  31A4      
08000CD0  4E93      1737          jsr       (A3)
08000CD2  504F      1738          addq.w    #8,A7
                    1739   ; //lworddata4 = Get8HexDigits(0) ;
                    1740   ; // printf("\r\n%04x   %04x", data1a, data1b);
                    1741   ; printf("Valid addresses for this program are: $0900 0000 - $097F FFFF");
08000CD4  4879 0800 1742          pea       @m68kus~1_24.L
08000CD8  3472      
08000CDA  4E92      1743          jsr       (A2)
08000CDC  584F      1744          addq.w    #4,A7
                    1745   ; printf("\r\nFor this test, the start and end addresses must align to an even address");
08000CDE  4879 0800 1746          pea       @m68kus~1_25.L
08000CE2  34B0      
08000CE4  4E92      1747          jsr       (A2)
08000CE6  584F      1748          addq.w    #4,A7
                    1749   ; printf("\r\nEnter Start Address: ") ;
08000CE8  4879 0800 1750          pea       @m68kus~1_8.L
08000CEC  3224      
08000CEE  4E92      1751          jsr       (A2)
08000CF0  584F      1752          addq.w    #4,A7
                    1753   ; scanf("%x", &Start_hold) ;
08000CF2  486E FFE2 1754          pea       -30(A6)
08000CF6  4879 0800 1755          pea       @m68kus~1_3.L
08000CFA  31A4      
08000CFC  4E93      1756          jsr       (A3)
08000CFE  504F      1757          addq.w    #8,A7
                    1758   ; //Start_hold = Get8HexDigits(0) ;
                    1759   ; printf("Enter End Address: ") ;
08000D00  4879 0800 1760          pea       @m68kus~1_9.L
08000D04  323C      
08000D06  4E92      1761          jsr       (A2)
08000D08  584F      1762          addq.w    #4,A7
                    1763   ; scanf("%x", &End_hold) ;
08000D0A  2F0C      1764          move.l    A4,-(A7)
08000D0C  4879 0800 1765          pea       @m68kus~1_3.L
08000D10  31A4      
08000D12  4E93      1766          jsr       (A3)
08000D14  504F      1767          addq.w    #8,A7
                    1768   ; //End_hold = Get8HexDigits(0) ;
                    1769   ; while ((Start_hold < 0x09000000) || (Start_hold > 0x097FFFFF) || ((Start_hold % 2) != 0)){
                    1770   longword_func_1:
08000D16  202E FFE2 1771          move.l    -30(A6),D0
08000D1A  0C80 0900 1772          cmp.l     #150994944,D0
08000D1E  0000      
08000D20  6524      1773          blo.s     longword_func_4
08000D22  202E FFE2 1774          move.l    -30(A6),D0
08000D26  0C80 097F 1775          cmp.l     #159383551,D0
08000D2A  FFFF      
08000D2C  6218      1776          bhi.s     longword_func_4
08000D2E  2F2E FFE2 1777          move.l    -30(A6),-(A7)
08000D32  4878 0002 1778          pea       2
08000D36  4EB9 0800 1779          jsr       ULDIV
08000D3A  1CF8      
08000D3C  202F 0004 1780          move.l    4(A7),D0
08000D40  504F      1781          addq.w    #8,A7
08000D42  4A80      1782          tst.l     D0
08000D44  671A      1783          beq.s     longword_func_3
                    1784   longword_func_4:
                    1785   ; printf("ERROR. Please Enter a valid Start Address: ");
08000D46  4879 0800 1786          pea       @m68kus~1_10.L
08000D4A  3250      
08000D4C  4E92      1787          jsr       (A2)
08000D4E  584F      1788          addq.w    #4,A7
                    1789   ; scanf("%x", &Start_hold) ;
08000D50  486E FFE2 1790          pea       -30(A6)
08000D54  4879 0800 1791          pea       @m68kus~1_3.L
08000D58  31A4      
08000D5A  4E93      1792          jsr       (A3)
08000D5C  504F      1793          addq.w    #8,A7
08000D5E  60B6      1794          bra       longword_func_1
                    1795   longword_func_3:
                    1796   ; //Start_hold = Get8HexDigits(0) ;
                    1797   ; }
                    1798   ; while ((End_hold < 0x09000000) || (End_hold > 0x097FFFFF) || ((End_hold % 2) != 0)){
                    1799   longword_func_5:
08000D60  2014      1800          move.l    (A4),D0
08000D62  0C80 0900 1801          cmp.l     #150994944,D0
08000D66  0000      
08000D68  6520      1802          blo.s     longword_func_8
08000D6A  2014      1803          move.l    (A4),D0
08000D6C  0C80 097F 1804          cmp.l     #159383551,D0
08000D70  FFFF      
08000D72  6216      1805          bhi.s     longword_func_8
08000D74  2F14      1806          move.l    (A4),-(A7)
08000D76  4878 0002 1807          pea       2
08000D7A  4EB9 0800 1808          jsr       ULDIV
08000D7E  1CF8      
08000D80  202F 0004 1809          move.l    4(A7),D0
08000D84  504F      1810          addq.w    #8,A7
08000D86  4A80      1811          tst.l     D0
08000D88  6718      1812          beq.s     longword_func_7
                    1813   longword_func_8:
                    1814   ; printf("ERROR. Please Enter a valid End Address: ");
08000D8A  4879 0800 1815          pea       @m68kus~1_26.L
08000D8E  34FC      
08000D90  4E92      1816          jsr       (A2)
08000D92  584F      1817          addq.w    #4,A7
                    1818   ; scanf("%x", &End_hold) ;
08000D94  2F0C      1819          move.l    A4,-(A7)
08000D96  4879 0800 1820          pea       @m68kus~1_3.L
08000D9A  31A4      
08000D9C  4E93      1821          jsr       (A3)
08000D9E  504F      1822          addq.w    #8,A7
08000DA0  60BE      1823          bra       longword_func_5
                    1824   longword_func_7:
                    1825   ; //End_hold = Get8HexDigits(0) ;
                    1826   ; }
                    1827   ; while (End_hold <= Start_hold){
                    1828   longword_func_9:
08000DA2  2014      1829          move.l    (A4),D0
08000DA4  B0AE FFE2 1830          cmp.l     -30(A6),D0
08000DA8  6222      1831          bhi.s     longword_func_11
                    1832   ; printf("ERROR. Please enter an End Address larger than the Start Address");
08000DAA  4879 0800 1833          pea       @m68kus~1_27.L
08000DAE  3526      
08000DB0  4E92      1834          jsr       (A2)
08000DB2  584F      1835          addq.w    #4,A7
                    1836   ; //printf("\r\nEnter Start Address: ") ;
                    1837   ; //Start_hold = Get8HexDigits(0) ;
                    1838   ; printf("\r\nEnter End Address: ") ;
08000DB4  4879 0800 1839          pea       @m68kus~1_13.L
08000DB8  32EC      
08000DBA  4E92      1840          jsr       (A2)
08000DBC  584F      1841          addq.w    #4,A7
                    1842   ; scanf("%x", &End_hold) ;
08000DBE  2F0C      1843          move.l    A4,-(A7)
08000DC0  4879 0800 1844          pea       @m68kus~1_3.L
08000DC4  31A4      
08000DC6  4E93      1845          jsr       (A3)
08000DC8  504F      1846          addq.w    #8,A7
08000DCA  60D6      1847          bra       longword_func_9
                    1848   longword_func_11:
                    1849   ; //End_hold = Get8HexDigits(0) ;
                    1850   ; }
                    1851   ; Start = Start_hold;
08000DCC  262E FFE2 1852          move.l    -30(A6),D3
                    1853   ; End = End_hold;
08000DD0  2D54 FFEA 1854          move.l    (A4),-22(A6)
                    1855   ; while (Start < End){
                    1856   longword_func_12:
08000DD4  B6AE FFEA 1857          cmp.l     -22(A6),D3
08000DD8  6400 01A0 1858          bhs       longword_func_14
                    1859   ; if ((count1 == 0) || ((count1 % 4)) ==0 ){
08000DDC  4A84      1860          tst.l     D4
08000DDE  6718      1861          beq.s     longword_func_17
08000DE0  2F04      1862          move.l    D4,-(A7)
08000DE2  4878 0004 1863          pea       4
08000DE6  4EB9 0800 1864          jsr       LDIV
08000DEA  1D0A      
08000DEC  202F 0004 1865          move.l    4(A7),D0
08000DF0  504F      1866          addq.w    #8,A7
08000DF2  4A80      1867          tst.l     D0
08000DF4  6600 0040 1868          bne       longword_func_15
                    1869   longword_func_17:
                    1870   ; *Start = lworddata1;
08000DF8  2043      1871          move.l    D3,A0
08000DFA  20AE FFD2 1872          move.l    -46(A6),(A0)
                    1873   ; idk = Start;
08000DFE  2403      1874          move.l    D3,D2
                    1875   ; idk = (int *)((char *)idk + 3);
08000E00  2002      1876          move.l    D2,D0
08000E02  5680      1877          addq.l    #3,D0
08000E04  2400      1878          move.l    D0,D2
                    1879   ; if ((count1 == 0) || ((count1 % 1000)==0)){
08000E06  4A84      1880          tst.l     D4
08000E08  6716      1881          beq.s     longword_func_20
08000E0A  2F04      1882          move.l    D4,-(A7)
08000E0C  4878 03E8 1883          pea       1000
08000E10  4EB9 0800 1884          jsr       LDIV
08000E14  1D0A      
08000E16  202F 0004 1885          move.l    4(A7),D0
08000E1A  504F      1886          addq.w    #8,A7
08000E1C  4A80      1887          tst.l     D0
08000E1E  6614      1888          bne.s     longword_func_18
                    1889   longword_func_20:
                    1890   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata1);
08000E20  2F2E FFD2 1891          move.l    -46(A6),-(A7)
08000E24  2F02      1892          move.l    D2,-(A7)
08000E26  2F03      1893          move.l    D3,-(A7)
08000E28  4879 0800 1894          pea       @m68kus~1_35.L
08000E2C  3670      
08000E2E  4E92      1895          jsr       (A2)
08000E30  DEFC 0010 1896          add.w     #16,A7
                    1897   longword_func_18:
                    1898   ; }
                    1899   ; Start++;
08000E34  5883      1900          addq.l    #4,D3
                    1901   longword_func_15:
                    1902   ; }
                    1903   ; if ((count1 == 1) || (((count1 - 1) % 4)) ==0 ){
08000E36  0C84 0000 1904          cmp.l     #1,D4
08000E3A  0001      
08000E3C  671C      1905          beq.s     longword_func_23
08000E3E  2004      1906          move.l    D4,D0
08000E40  5380      1907          subq.l    #1,D0
08000E42  2F00      1908          move.l    D0,-(A7)
08000E44  4878 0004 1909          pea       4
08000E48  4EB9 0800 1910          jsr       LDIV
08000E4C  1D0A      
08000E4E  202F 0004 1911          move.l    4(A7),D0
08000E52  504F      1912          addq.w    #8,A7
08000E54  4A80      1913          tst.l     D0
08000E56  6600 0048 1914          bne       longword_func_21
                    1915   longword_func_23:
                    1916   ; *Start = lworddata2;
08000E5A  2043      1917          move.l    D3,A0
08000E5C  20AE FFD6 1918          move.l    -42(A6),(A0)
                    1919   ; idk = Start;
08000E60  2403      1920          move.l    D3,D2
                    1921   ; idk = (int *)((char *)idk + 3);
08000E62  2002      1922          move.l    D2,D0
08000E64  5680      1923          addq.l    #3,D0
08000E66  2400      1924          move.l    D0,D2
                    1925   ; if ((count1 == 1) || (((count1 -1) % 1000)==0)){
08000E68  0C84 0000 1926          cmp.l     #1,D4
08000E6C  0001      
08000E6E  671A      1927          beq.s     longword_func_26
08000E70  2004      1928          move.l    D4,D0
08000E72  5380      1929          subq.l    #1,D0
08000E74  2F00      1930          move.l    D0,-(A7)
08000E76  4878 03E8 1931          pea       1000
08000E7A  4EB9 0800 1932          jsr       LDIV
08000E7E  1D0A      
08000E80  202F 0004 1933          move.l    4(A7),D0
08000E84  504F      1934          addq.w    #8,A7
08000E86  4A80      1935          tst.l     D0
08000E88  6614      1936          bne.s     longword_func_24
                    1937   longword_func_26:
                    1938   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata2);
08000E8A  2F2E FFD6 1939          move.l    -42(A6),-(A7)
08000E8E  2F02      1940          move.l    D2,-(A7)
08000E90  2F03      1941          move.l    D3,-(A7)
08000E92  4879 0800 1942          pea       @m68kus~1_35.L
08000E96  3670      
08000E98  4E92      1943          jsr       (A2)
08000E9A  DEFC 0010 1944          add.w     #16,A7
                    1945   longword_func_24:
                    1946   ; }
                    1947   ; Start++;
08000E9E  5883      1948          addq.l    #4,D3
                    1949   longword_func_21:
                    1950   ; }
                    1951   ; if ((count1 == 2) || (((count1 - 2) % 4)) ==0 ){
08000EA0  0C84 0000 1952          cmp.l     #2,D4
08000EA4  0002      
08000EA6  671C      1953          beq.s     longword_func_29
08000EA8  2004      1954          move.l    D4,D0
08000EAA  5580      1955          subq.l    #2,D0
08000EAC  2F00      1956          move.l    D0,-(A7)
08000EAE  4878 0004 1957          pea       4
08000EB2  4EB9 0800 1958          jsr       LDIV
08000EB6  1D0A      
08000EB8  202F 0004 1959          move.l    4(A7),D0
08000EBC  504F      1960          addq.w    #8,A7
08000EBE  4A80      1961          tst.l     D0
08000EC0  6600 0048 1962          bne       longword_func_27
                    1963   longword_func_29:
                    1964   ; *Start = lworddata3;
08000EC4  2043      1965          move.l    D3,A0
08000EC6  20AE FFDA 1966          move.l    -38(A6),(A0)
                    1967   ; idk = Start;
08000ECA  2403      1968          move.l    D3,D2
                    1969   ; idk = (int *)((char *)idk + 3);
08000ECC  2002      1970          move.l    D2,D0
08000ECE  5680      1971          addq.l    #3,D0
08000ED0  2400      1972          move.l    D0,D2
                    1973   ; if ((count1 == 2) || (((count1 -2) % 1000)==0)){
08000ED2  0C84 0000 1974          cmp.l     #2,D4
08000ED6  0002      
08000ED8  671A      1975          beq.s     longword_func_32
08000EDA  2004      1976          move.l    D4,D0
08000EDC  5580      1977          subq.l    #2,D0
08000EDE  2F00      1978          move.l    D0,-(A7)
08000EE0  4878 03E8 1979          pea       1000
08000EE4  4EB9 0800 1980          jsr       LDIV
08000EE8  1D0A      
08000EEA  202F 0004 1981          move.l    4(A7),D0
08000EEE  504F      1982          addq.w    #8,A7
08000EF0  4A80      1983          tst.l     D0
08000EF2  6614      1984          bne.s     longword_func_30
                    1985   longword_func_32:
                    1986   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata3);
08000EF4  2F2E FFDA 1987          move.l    -38(A6),-(A7)
08000EF8  2F02      1988          move.l    D2,-(A7)
08000EFA  2F03      1989          move.l    D3,-(A7)
08000EFC  4879 0800 1990          pea       @m68kus~1_35.L
08000F00  3670      
08000F02  4E92      1991          jsr       (A2)
08000F04  DEFC 0010 1992          add.w     #16,A7
                    1993   longword_func_30:
                    1994   ; }
                    1995   ; Start++;
08000F08  5883      1996          addq.l    #4,D3
                    1997   longword_func_27:
                    1998   ; }
                    1999   ; if ((count1 == 3) || (((count1 - 3) % 4)) ==0 ){
08000F0A  0C84 0000 2000          cmp.l     #3,D4
08000F0E  0003      
08000F10  671C      2001          beq.s     longword_func_35
08000F12  2004      2002          move.l    D4,D0
08000F14  5780      2003          subq.l    #3,D0
08000F16  2F00      2004          move.l    D0,-(A7)
08000F18  4878 0004 2005          pea       4
08000F1C  4EB9 0800 2006          jsr       LDIV
08000F20  1D0A      
08000F22  202F 0004 2007          move.l    4(A7),D0
08000F26  504F      2008          addq.w    #8,A7
08000F28  4A80      2009          tst.l     D0
08000F2A  6600 0048 2010          bne       longword_func_33
                    2011   longword_func_35:
                    2012   ; *Start = lworddata4;
08000F2E  2043      2013          move.l    D3,A0
08000F30  20AE FFDE 2014          move.l    -34(A6),(A0)
                    2015   ; idk = Start;
08000F34  2403      2016          move.l    D3,D2
                    2017   ; idk = (int *)((char *)idk + 3);
08000F36  2002      2018          move.l    D2,D0
08000F38  5680      2019          addq.l    #3,D0
08000F3A  2400      2020          move.l    D0,D2
                    2021   ; if ((count1 == 3) || (((count1 - 3) % 1000)==0)){
08000F3C  0C84 0000 2022          cmp.l     #3,D4
08000F40  0003      
08000F42  671A      2023          beq.s     longword_func_38
08000F44  2004      2024          move.l    D4,D0
08000F46  5780      2025          subq.l    #3,D0
08000F48  2F00      2026          move.l    D0,-(A7)
08000F4A  4878 03E8 2027          pea       1000
08000F4E  4EB9 0800 2028          jsr       LDIV
08000F52  1D0A      
08000F54  202F 0004 2029          move.l    4(A7),D0
08000F58  504F      2030          addq.w    #8,A7
08000F5A  4A80      2031          tst.l     D0
08000F5C  6614      2032          bne.s     longword_func_36
                    2033   longword_func_38:
                    2034   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata4);
08000F5E  2F2E FFDE 2035          move.l    -34(A6),-(A7)
08000F62  2F02      2036          move.l    D2,-(A7)
08000F64  2F03      2037          move.l    D3,-(A7)
08000F66  4879 0800 2038          pea       @m68kus~1_35.L
08000F6A  3670      
08000F6C  4E92      2039          jsr       (A2)
08000F6E  DEFC 0010 2040          add.w     #16,A7
                    2041   longword_func_36:
                    2042   ; }
                    2043   ; Start++;
08000F72  5883      2044          addq.l    #4,D3
                    2045   longword_func_33:
                    2046   ; }
                    2047   ; count1++;
08000F74  5284      2048          addq.l    #1,D4
08000F76  6000 FE5C 2049          bra       longword_func_12
                    2050   longword_func_14:
                    2051   ; }
                    2052   ; printf("\r\nWriting to memory Complete.\r\nEnter '1' to read back the memory. Enter '0' to exit program.");
08000F7A  4879 0800 2053          pea       @m68kus~1_16.L
08000F7E  335E      
08000F80  4E92      2054          jsr       (A2)
08000F82  584F      2055          addq.w    #4,A7
                    2056   ; choice = _getch();
08000F84  4EB9 0800 2057          jsr       __getch
08000F88  0124      
08000F8A  1D40 FFFF 2058          move.b    D0,-1(A6)
                    2059   ; if (choice == '1'){
08000F8E  102E FFFF 2060          move.b    -1(A6),D0
08000F92  0C00 0031 2061          cmp.b     #49,D0
08000F96  6600 01E8 2062          bne       longword_func_39
                    2063   ; //printf("\r\nwill continue");
                    2064   ; while (Start_hold < End_hold){
                    2065   longword_func_41:
08000F9A  202E FFE2 2066          move.l    -30(A6),D0
08000F9E  B094      2067          cmp.l     (A4),D0
08000FA0  6400 01DC 2068          bhs       longword_func_43
                    2069   ; data1a = (*Start_hold >> 8) & 0xFF;
08000FA4  206E FFE2 2070          move.l    -30(A6),A0
08000FA8  2010      2071          move.l    (A0),D0
08000FAA  E080      2072          asr.l     #8,D0
08000FAC  C0BC 0000 2073          and.l     #255,D0
08000FB0  00FF      
08000FB2  1D40 FFCC 2074          move.b    D0,-52(A6)
                    2075   ; data1b = *Start_hold & 0xFF;
08000FB6  206E FFE2 2076          move.l    -30(A6),A0
08000FBA  2010      2077          move.l    (A0),D0
08000FBC  C0BC 0000 2078          and.l     #255,D0
08000FC0  00FF      
08000FC2  1D40 FFCD 2079          move.b    D0,-51(A6)
                    2080   ; data2a = (*Start_hold >> 24) & 0xFF;
08000FC6  206E FFE2 2081          move.l    -30(A6),A0
08000FCA  2010      2082          move.l    (A0),D0
08000FCC  E080      2083          asr.l     #8,D0
08000FCE  E080      2084          asr.l     #8,D0
08000FD0  E080      2085          asr.l     #8,D0
08000FD2  C0BC 0000 2086          and.l     #255,D0
08000FD6  00FF      
08000FD8  1E00      2087          move.b    D0,D7
                    2088   ; data2b = (*Start_hold >> 16) & 0xFF;
08000FDA  206E FFE2 2089          move.l    -30(A6),A0
08000FDE  2010      2090          move.l    (A0),D0
08000FE0  E080      2091          asr.l     #8,D0
08000FE2  E080      2092          asr.l     #8,D0
08000FE4  C0BC 0000 2093          and.l     #255,D0
08000FE8  00FF      
08000FEA  1C00      2094          move.b    D0,D6
                    2095   ; idk = Start_hold;
08000FEC  242E FFE2 2096          move.l    -30(A6),D2
                    2097   ; idk = (int *)((char *)idk + 3);
08000FF0  2002      2098          move.l    D2,D0
08000FF2  5680      2099          addq.l    #3,D0
08000FF4  2400      2100          move.l    D0,D2
                    2101   ; //data = (*Start_hold >> 8) & 0xFF;
                    2102   ; //data2 = *Start_hold & 0xFF;
                    2103   ; if ((count2 == 0) || (count2 % 1000)==0){
08000FF6  4A85      2104          tst.l     D5
08000FF8  6718      2105          beq.s     longword_func_46
08000FFA  2F05      2106          move.l    D5,-(A7)
08000FFC  4878 03E8 2107          pea       1000
08001000  4EB9 0800 2108          jsr       LDIV
08001004  1D0A      
08001006  202F 0004 2109          move.l    4(A7),D0
0800100A  504F      2110          addq.w    #8,A7
0800100C  4A80      2111          tst.l     D0
0800100E  6600 0040 2112          bne       longword_func_44
                    2113   longword_func_46:
                    2114   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
08001012  2F02      2115          move.l    D2,-(A7)
08001014  2F2E FFE2 2116          move.l    -30(A6),-(A7)
08001018  122E FFCD 2117          move.b    -51(A6),D1
0800101C  C2BC 0000 2118          and.l     #255,D1
08001020  00FF      
08001022  2F01      2119          move.l    D1,-(A7)
08001024  122E FFCC 2120          move.b    -52(A6),D1
08001028  C2BC 0000 2121          and.l     #255,D1
0800102C  00FF      
0800102E  2F01      2122          move.l    D1,-(A7)
08001030  CCBC 0000 2123          and.l     #255,D6
08001034  00FF      
08001036  2F06      2124          move.l    D6,-(A7)
08001038  CEBC 0000 2125          and.l     #255,D7
0800103C  00FF      
0800103E  2F07      2126          move.l    D7,-(A7)
08001040  4879 0800 2127          pea       @m68kus~1_36.L
08001044  36A2      
08001046  4E92      2128          jsr       (A2)
08001048  DEFC 001C 2129          add.w     #28,A7
0800104C  6000 0122 2130          bra       longword_func_53
                    2131   longword_func_44:
                    2132   ; //printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_hold, (Start_hold | 0x0001));
                    2133   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    2134   ; }
                    2135   ; else if ((count2 == 1) || ((count2 - 1) % 1000)==0){
08001050  0C85 0000 2136          cmp.l     #1,D5
08001054  0001      
08001056  671C      2137          beq.s     longword_func_49
08001058  2005      2138          move.l    D5,D0
0800105A  5380      2139          subq.l    #1,D0
0800105C  2F00      2140          move.l    D0,-(A7)
0800105E  4878 03E8 2141          pea       1000
08001062  4EB9 0800 2142          jsr       LDIV
08001066  1D0A      
08001068  202F 0004 2143          move.l    4(A7),D0
0800106C  504F      2144          addq.w    #8,A7
0800106E  4A80      2145          tst.l     D0
08001070  6600 0040 2146          bne       longword_func_47
                    2147   longword_func_49:
                    2148   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
08001074  2F02      2149          move.l    D2,-(A7)
08001076  2F2E FFE2 2150          move.l    -30(A6),-(A7)
0800107A  122E FFCD 2151          move.b    -51(A6),D1
0800107E  C2BC 0000 2152          and.l     #255,D1
08001082  00FF      
08001084  2F01      2153          move.l    D1,-(A7)
08001086  122E FFCC 2154          move.b    -52(A6),D1
0800108A  C2BC 0000 2155          and.l     #255,D1
0800108E  00FF      
08001090  2F01      2156          move.l    D1,-(A7)
08001092  CCBC 0000 2157          and.l     #255,D6
08001096  00FF      
08001098  2F06      2158          move.l    D6,-(A7)
0800109A  CEBC 0000 2159          and.l     #255,D7
0800109E  00FF      
080010A0  2F07      2160          move.l    D7,-(A7)
080010A2  4879 0800 2161          pea       @m68kus~1_36.L
080010A6  36A2      
080010A8  4E92      2162          jsr       (A2)
080010AA  DEFC 001C 2163          add.w     #28,A7
080010AE  6000 00C0 2164          bra       longword_func_53
                    2165   longword_func_47:
                    2166   ; //printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_hold, (Start_hold | 0x0001));
                    2167   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    2168   ; }
                    2169   ; else if ((count2 == 2) || ((count2 - 2) % 1000)==0){
080010B2  0C85 0000 2170          cmp.l     #2,D5
080010B6  0002      
080010B8  671C      2171          beq.s     longword_func_52
080010BA  2005      2172          move.l    D5,D0
080010BC  5580      2173          subq.l    #2,D0
080010BE  2F00      2174          move.l    D0,-(A7)
080010C0  4878 03E8 2175          pea       1000
080010C4  4EB9 0800 2176          jsr       LDIV
080010C8  1D0A      
080010CA  202F 0004 2177          move.l    4(A7),D0
080010CE  504F      2178          addq.w    #8,A7
080010D0  4A80      2179          tst.l     D0
080010D2  6600 0040 2180          bne       longword_func_50
                    2181   longword_func_52:
                    2182   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
080010D6  2F02      2183          move.l    D2,-(A7)
080010D8  2F2E FFE2 2184          move.l    -30(A6),-(A7)
080010DC  122E FFCD 2185          move.b    -51(A6),D1
080010E0  C2BC 0000 2186          and.l     #255,D1
080010E4  00FF      
080010E6  2F01      2187          move.l    D1,-(A7)
080010E8  122E FFCC 2188          move.b    -52(A6),D1
080010EC  C2BC 0000 2189          and.l     #255,D1
080010F0  00FF      
080010F2  2F01      2190          move.l    D1,-(A7)
080010F4  CCBC 0000 2191          and.l     #255,D6
080010F8  00FF      
080010FA  2F06      2192          move.l    D6,-(A7)
080010FC  CEBC 0000 2193          and.l     #255,D7
08001100  00FF      
08001102  2F07      2194          move.l    D7,-(A7)
08001104  4879 0800 2195          pea       @m68kus~1_36.L
08001108  36A2      
0800110A  4E92      2196          jsr       (A2)
0800110C  DEFC 001C 2197          add.w     #28,A7
08001110  6000 005E 2198          bra       longword_func_53
                    2199   longword_func_50:
                    2200   ; }
                    2201   ; else if ((count2 == 3) || ((count2 - 3) % 1000)==0){
08001114  0C85 0000 2202          cmp.l     #3,D5
08001118  0003      
0800111A  671A      2203          beq.s     longword_func_55
0800111C  2005      2204          move.l    D5,D0
0800111E  5780      2205          subq.l    #3,D0
08001120  2F00      2206          move.l    D0,-(A7)
08001122  4878 03E8 2207          pea       1000
08001126  4EB9 0800 2208          jsr       LDIV
0800112A  1D0A      
0800112C  202F 0004 2209          move.l    4(A7),D0
08001130  504F      2210          addq.w    #8,A7
08001132  4A80      2211          tst.l     D0
08001134  663A      2212          bne.s     longword_func_53
                    2213   longword_func_55:
                    2214   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
08001136  2F02      2215          move.l    D2,-(A7)
08001138  2F2E FFE2 2216          move.l    -30(A6),-(A7)
0800113C  122E FFCD 2217          move.b    -51(A6),D1
08001140  C2BC 0000 2218          and.l     #255,D1
08001144  00FF      
08001146  2F01      2219          move.l    D1,-(A7)
08001148  122E FFCC 2220          move.b    -52(A6),D1
0800114C  C2BC 0000 2221          and.l     #255,D1
08001150  00FF      
08001152  2F01      2222          move.l    D1,-(A7)
08001154  CCBC 0000 2223          and.l     #255,D6
08001158  00FF      
0800115A  2F06      2224          move.l    D6,-(A7)
0800115C  CEBC 0000 2225          and.l     #255,D7
08001160  00FF      
08001162  2F07      2226          move.l    D7,-(A7)
08001164  4879 0800 2227          pea       @m68kus~1_36.L
08001168  36A2      
0800116A  4E92      2228          jsr       (A2)
0800116C  DEFC 001C 2229          add.w     #28,A7
                    2230   longword_func_53:
                    2231   ; }
                    2232   ; count2++;
08001170  5285      2233          addq.l    #1,D5
                    2234   ; *Start_hold++;
08001172  206E FFE2 2235          move.l    -30(A6),A0
08001176  58AE FFE2 2236          addq.l    #4,-30(A6)
0800117A  6000 FE1E 2237          bra       longword_func_41
                    2238   longword_func_43:
0800117E  6014      2239          bra.s     longword_func_56
                    2240   longword_func_39:
                    2241   ; }
                    2242   ; }
                    2243   ; else if (choice == '0'){
08001180  102E FFFF 2244          move.b    -1(A6),D0
08001184  0C00 0030 2245          cmp.b     #48,D0
08001188  660A      2246          bne.s     longword_func_56
                    2247   ; printf("\r\nProgram Ended");
0800118A  4879 0800 2248          pea       @m68kus~1_18.L
0800118E  33DC      
08001190  4E92      2249          jsr       (A2)
08001192  584F      2250          addq.w    #4,A7
                    2251   longword_func_56:
08001194  4CDF 1CFC 2252          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4
08001198  4E5E      2253          unlk      A6
0800119A  4E75      2254          rts
                    2255   ; }
                    2256   ; }
                    2257   ; //////////////////////////////////////////////////////////
                    2258   ; //******IIC Program Functions Begin Here***************///
                    2259   ; //////////////////////////////////////////////////////////
                    2260   ; void IIC_Init(void)
                    2261   ; {
                    2262   _IIC_Init:
                    2263   ; IIC_Prescale_Low = 0x31; //31
0800119C  13FC 0031 2264          move.b    #49,4227072
080011A0  0040 8000 
                    2265   ; //IIC_Prescale_Low = 0x63;
                    2266   ; IIC_Prescale_High = 0x00; //0xFF for reset
080011A4  4239 0040 2267          clr.b     4227074
080011A8  8002      
                    2268   ; IIC_Control = 0x80; // core enabled, interupts disabled
080011AA  13FC 0080 2269          move.b    #128,4227076
080011AE  0040 8004 
                    2270   ; //IIC_Control = 0xC0;
                    2271   ; //IIC_Transmit_Receive = 0x00;
                    2272   ; //IIC_Command_Status = 0x00;
                    2273   ; printf("\r\n%x",IIC_Command_Status);
080011B2  1239 0040 2274          move.b    4227080,D1
080011B6  8008      
080011B8  C2BC 0000 2275          and.l     #255,D1
080011BC  00FF      
080011BE  2F01      2276          move.l    D1,-(A7)
080011C0  4879 0800 2277          pea       @m68kus~1_37.L
080011C4  36E4      
080011C6  4EB9 0800 2278          jsr       _printf
080011CA  1E08      
080011CC  504F      2279          addq.w    #8,A7
080011CE  4E75      2280          rts
                    2281   ; }
                    2282   ; void PollTIPFlag(void){
                    2283   _PollTIPFlag:
080011D0  4E56 FFFC 2284          link      A6,#-4
                    2285   ; char status;
                    2286   ; status = IIC_Command_Status;
080011D4  1D79 0040 2287          move.b    4227080,-1(A6)
080011D8  8008 FFFF 
                    2288   ; //Check that TIP flag is negated
                    2289   ; while ((status & 0x02) != 0){
                    2290   PollTIPFlag_1:
080011DC  102E FFFF 2291          move.b    -1(A6),D0
080011E0  C03C 0002 2292          and.b     #2,D0
080011E4  6702      2293          beq.s     PollTIPFlag_3
                    2294   ; 1;
080011E6  60F4      2295          bra       PollTIPFlag_1
                    2296   PollTIPFlag_3:
080011E8  4E5E      2297          unlk      A6
080011EA  4E75      2298          rts
                    2299   ; //printf("%x",status);
                    2300   ; //printf("TIP ");
                    2301   ; }
                    2302   ; }
                    2303   ; void IIC_StartCommand(int block_sel){
                    2304   _IIC_StartCommand:
080011EC  4E56 FFFC 2305          link      A6,#-4
080011F0  48E7 3020 2306          movem.l   D2/D3/A2,-(A7)
080011F4  45F9 0800 2307          lea       _printf.L,A2
080011F8  1E08      
                    2308   ; char dog;
                    2309   ; int cat*;
                    2310   ; int slave_addr = 0x00;
080011FA  4283      2311          clr.l     D3
                    2312   ; if (block_sel == 0){
080011FC  202E 0008 2313          move.l    8(A6),D0
08001200  6612      2314          bne.s     IIC_StartCommand_1
                    2315   ; printf("\r\nBlock is set to 0");
08001202  4879 0800 2316          pea       @m68kus~1_38.L
08001206  36EA      
08001208  4E92      2317          jsr       (A2)
0800120A  584F      2318          addq.w    #4,A7
                    2319   ; slave_addr = 0xA0;
0800120C  263C 0000 2320          move.l    #160,D3
08001210  00A0      
08001212  601C      2321          bra.s     IIC_StartCommand_3
                    2322   IIC_StartCommand_1:
                    2323   ; }
                    2324   ; else if (block_sel == 1){
08001214  202E 0008 2325          move.l    8(A6),D0
08001218  0C80 0000 2326          cmp.l     #1,D0
0800121C  0001      
0800121E  6610      2327          bne.s     IIC_StartCommand_3
                    2328   ; printf("\r\nBlock is set to 1");
08001220  4879 0800 2329          pea       @m68kus~1_39.L
08001224  36FE      
08001226  4E92      2330          jsr       (A2)
08001228  584F      2331          addq.w    #4,A7
                    2332   ; slave_addr = 0xA2;
0800122A  263C 0000 2333          move.l    #162,D3
0800122E  00A2      
                    2334   IIC_StartCommand_3:
                    2335   ; }
                    2336   ; printf("\r\nSending Start Command...");
08001230  4879 0800 2337          pea       @m68kus~1_40.L
08001234  3712      
08001236  4E92      2338          jsr       (A2)
08001238  584F      2339          addq.w    #4,A7
                    2340   ; printf("\r\nControl Register is %x", IIC_Control);
0800123A  1239 0040 2341          move.b    4227076,D1
0800123E  8004      
08001240  C2BC 0000 2342          and.l     #255,D1
08001244  00FF      
08001246  2F01      2343          move.l    D1,-(A7)
08001248  4879 0800 2344          pea       @m68kus~1_41.L
0800124C  372E      
0800124E  4E92      2345          jsr       (A2)
08001250  504F      2346          addq.w    #8,A7
                    2347   ; //Check that no transmit is in progress
                    2348   ; //IIC_Command_Status = 0x80;
                    2349   ; //PollTIPFlag();
                    2350   ; dog = IIC_Command_Status;
08001252  1439 0040 2351          move.b    4227080,D2
08001256  8008      
                    2352   ; printf("\r\n%x", dog);
08001258  4882      2353          ext.w     D2
0800125A  48C2      2354          ext.l     D2
0800125C  2F02      2355          move.l    D2,-(A7)
0800125E  4879 0800 2356          pea       @m68kus~1_37.L
08001262  36E4      
08001264  4E92      2357          jsr       (A2)
08001266  504F      2358          addq.w    #8,A7
                    2359   ; IIC_Transmit_Receive = slave_addr; //Slave Adress and write bit
08001268  13C3 0040 2360          move.b    D3,4227078
0800126C  8006      
                    2361   ; //IIC_Command_Status = 0x10; //Set STA and WR bit
                    2362   ; IIC_Command_Status = 0x90;
0800126E  13FC 0090 2363          move.b    #144,4227080
08001272  0040 8008 
                    2364   ; dog = IIC_Command_Status;
08001276  1439 0040 2365          move.b    4227080,D2
0800127A  8008      
                    2366   ; printf("\r\n%x", dog);
0800127C  4882      2367          ext.w     D2
0800127E  48C2      2368          ext.l     D2
08001280  2F02      2369          move.l    D2,-(A7)
08001282  4879 0800 2370          pea       @m68kus~1_37.L
08001286  36E4      
08001288  4E92      2371          jsr       (A2)
0800128A  504F      2372          addq.w    #8,A7
                    2373   ; //Wait for transmit to complete
                    2374   ; PollTIPFlag();
0800128C  4EB9 0800 2375          jsr       _PollTIPFlag
08001290  11D0      
                    2376   ; WaitForAck();
08001292  4EB9 0800 2377          jsr       _WaitForAck
08001296  156E      
                    2378   ; printf("\r\nStart Command Received");
08001298  4879 0800 2379          pea       @m68kus~1_42.L
0800129C  3748      
0800129E  4E92      2380          jsr       (A2)
080012A0  584F      2381          addq.w    #4,A7
080012A2  4CDF 040C 2382          movem.l   (A7)+,D2/D3/A2
080012A6  4E5E      2383          unlk      A6
080012A8  4E75      2384          rts
                    2385   ; }
                    2386   ; void IIC_RepeatedStartCommand(int block_sel){
                    2387   _IIC_RepeatedStartCommand:
080012AA  4E56 0000 2388          link      A6,#0
080012AE  48E7 2020 2389          movem.l   D2/A2,-(A7)
080012B2  45F9 0800 2390          lea       _printf.L,A2
080012B6  1E08      
                    2391   ; int slave_addr = 0x00;
080012B8  4282      2392          clr.l     D2
                    2393   ; if (block_sel == 0){
080012BA  202E 0008 2394          move.l    8(A6),D0
080012BE  6612      2395          bne.s     IIC_RepeatedStartCommand_1
                    2396   ; printf("\r\nBlock is set to 0");
080012C0  4879 0800 2397          pea       @m68kus~1_38.L
080012C4  36EA      
080012C6  4E92      2398          jsr       (A2)
080012C8  584F      2399          addq.w    #4,A7
                    2400   ; slave_addr = 0xA1;
080012CA  243C 0000 2401          move.l    #161,D2
080012CE  00A1      
080012D0  601C      2402          bra.s     IIC_RepeatedStartCommand_3
                    2403   IIC_RepeatedStartCommand_1:
                    2404   ; }
                    2405   ; else if (block_sel == 1){
080012D2  202E 0008 2406          move.l    8(A6),D0
080012D6  0C80 0000 2407          cmp.l     #1,D0
080012DA  0001      
080012DC  6610      2408          bne.s     IIC_RepeatedStartCommand_3
                    2409   ; printf("\r\nBlock is set to 1");
080012DE  4879 0800 2410          pea       @m68kus~1_39.L
080012E2  36FE      
080012E4  4E92      2411          jsr       (A2)
080012E6  584F      2412          addq.w    #4,A7
                    2413   ; slave_addr = 0xA3;
080012E8  243C 0000 2414          move.l    #163,D2
080012EC  00A3      
                    2415   IIC_RepeatedStartCommand_3:
                    2416   ; }
                    2417   ; printf("\r\nSending Start Command...");
080012EE  4879 0800 2418          pea       @m68kus~1_40.L
080012F2  3712      
080012F4  4E92      2419          jsr       (A2)
080012F6  584F      2420          addq.w    #4,A7
                    2421   ; printf("\r\nControl Register is %x", IIC_Control);
080012F8  1239 0040 2422          move.b    4227076,D1
080012FC  8004      
080012FE  C2BC 0000 2423          and.l     #255,D1
08001302  00FF      
08001304  2F01      2424          move.l    D1,-(A7)
08001306  4879 0800 2425          pea       @m68kus~1_41.L
0800130A  372E      
0800130C  4E92      2426          jsr       (A2)
0800130E  504F      2427          addq.w    #8,A7
                    2428   ; //Check that no transmit is in progress
                    2429   ; //IIC_Command_Status = 0x80;
                    2430   ; //PollTIPFlag();
                    2431   ; IIC_Transmit_Receive = slave_addr; //Slave Adress and write bit
08001310  13C2 0040 2432          move.b    D2,4227078
08001314  8006      
                    2433   ; //IIC_Command_Status = 0x10; //Set STA and WR bit
                    2434   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
08001316  1239 0040 2435          move.b    4227078,D1
0800131A  8006      
0800131C  C2BC 0000 2436          and.l     #255,D1
08001320  00FF      
08001322  2F01      2437          move.l    D1,-(A7)
08001324  4879 0800 2438          pea       @m68kus~1_43.L
08001328  3762      
0800132A  4E92      2439          jsr       (A2)
0800132C  504F      2440          addq.w    #8,A7
                    2441   ; IIC_Command_Status = 0x90; //
0800132E  13FC 0090 2442          move.b    #144,4227080
08001332  0040 8008 
                    2443   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
08001336  1239 0040 2444          move.b    4227078,D1
0800133A  8006      
0800133C  C2BC 0000 2445          and.l     #255,D1
08001340  00FF      
08001342  2F01      2446          move.l    D1,-(A7)
08001344  4879 0800 2447          pea       @m68kus~1_44.L
08001348  3780      
0800134A  4E92      2448          jsr       (A2)
0800134C  504F      2449          addq.w    #8,A7
                    2450   ; //Wait for transmit to complete
                    2451   ; PollTIPFlag();
0800134E  4EB9 0800 2452          jsr       _PollTIPFlag
08001352  11D0      
                    2453   ; WaitForAck();
08001354  4EB9 0800 2454          jsr       _WaitForAck
08001358  156E      
                    2455   ; printf("\r\nStart Command Received");
0800135A  4879 0800 2456          pea       @m68kus~1_42.L
0800135E  3748      
08001360  4E92      2457          jsr       (A2)
08001362  584F      2458          addq.w    #4,A7
08001364  4CDF 0404 2459          movem.l   (A7)+,D2/A2
08001368  4E5E      2460          unlk      A6
0800136A  4E75      2461          rts
                    2462   ; }
                    2463   ; void IIC_SendAddress(int address_high, int address_low){
                    2464   _IIC_SendAddress:
0800136C  4E56 0000 2465          link      A6,#0
08001370  2F0A      2466          move.l    A2,-(A7)
08001372  45F9 0800 2467          lea       _printf.L,A2
08001376  1E08      
                    2468   ; printf("\r\nSending address");
08001378  4879 0800 2469          pea       @m68kus~1_45.L
0800137C  379E      
0800137E  4E92      2470          jsr       (A2)
08001380  584F      2471          addq.w    #4,A7
                    2472   ; //IIC_Command_Status = 0x10;
                    2473   ; IIC_Transmit_Receive = address_high; //High byte internal address
08001382  202E 0008 2474          move.l    8(A6),D0
08001386  13C0 0040 2475          move.b    D0,4227078
0800138A  8006      
                    2476   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
0800138C  1239 0040 2477          move.b    4227078,D1
08001390  8006      
08001392  C2BC 0000 2478          and.l     #255,D1
08001396  00FF      
08001398  2F01      2479          move.l    D1,-(A7)
0800139A  4879 0800 2480          pea       @m68kus~1_43.L
0800139E  3762      
080013A0  4E92      2481          jsr       (A2)
080013A2  504F      2482          addq.w    #8,A7
                    2483   ; IIC_Command_Status = 0x10; //set WR bit
080013A4  13FC 0010 2484          move.b    #16,4227080
080013A8  0040 8008 
                    2485   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
080013AC  1239 0040 2486          move.b    4227078,D1
080013B0  8006      
080013B2  C2BC 0000 2487          and.l     #255,D1
080013B6  00FF      
080013B8  2F01      2488          move.l    D1,-(A7)
080013BA  4879 0800 2489          pea       @m68kus~1_44.L
080013BE  3780      
080013C0  4E92      2490          jsr       (A2)
080013C2  504F      2491          addq.w    #8,A7
                    2492   ; //Wait for transmit to complete
                    2493   ; PollTIPFlag();
080013C4  4EB9 0800 2494          jsr       _PollTIPFlag
080013C8  11D0      
                    2495   ; WaitForAck();
080013CA  4EB9 0800 2496          jsr       _WaitForAck
080013CE  156E      
                    2497   ; printf("\r\nHigh byte address sent");
080013D0  4879 0800 2498          pea       @m68kus~1_46.L
080013D4  37B0      
080013D6  4E92      2499          jsr       (A2)
080013D8  584F      2500          addq.w    #4,A7
                    2501   ; //IIC_Command_Status = 0x10;
                    2502   ; IIC_Transmit_Receive = address_low; //Low byte internal address
080013DA  202E 000C 2503          move.l    12(A6),D0
080013DE  13C0 0040 2504          move.b    D0,4227078
080013E2  8006      
                    2505   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
080013E4  1239 0040 2506          move.b    4227078,D1
080013E8  8006      
080013EA  C2BC 0000 2507          and.l     #255,D1
080013EE  00FF      
080013F0  2F01      2508          move.l    D1,-(A7)
080013F2  4879 0800 2509          pea       @m68kus~1_43.L
080013F6  3762      
080013F8  4E92      2510          jsr       (A2)
080013FA  504F      2511          addq.w    #8,A7
                    2512   ; IIC_Command_Status = 0x10; //set WR bit
080013FC  13FC 0010 2513          move.b    #16,4227080
08001400  0040 8008 
                    2514   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
08001404  1239 0040 2515          move.b    4227078,D1
08001408  8006      
0800140A  C2BC 0000 2516          and.l     #255,D1
0800140E  00FF      
08001410  2F01      2517          move.l    D1,-(A7)
08001412  4879 0800 2518          pea       @m68kus~1_44.L
08001416  3780      
08001418  4E92      2519          jsr       (A2)
0800141A  504F      2520          addq.w    #8,A7
                    2521   ; //Wait for transmit to complete
                    2522   ; PollTIPFlag();
0800141C  4EB9 0800 2523          jsr       _PollTIPFlag
08001420  11D0      
                    2524   ; WaitForAck();
08001422  4EB9 0800 2525          jsr       _WaitForAck
08001426  156E      
                    2526   ; printf("\r\nLow byte address sent");
08001428  4879 0800 2527          pea       @m68kus~1_47.L
0800142C  37CA      
0800142E  4E92      2528          jsr       (A2)
08001430  584F      2529          addq.w    #4,A7
08001432  245F      2530          move.l    (A7)+,A2
08001434  4E5E      2531          unlk      A6
08001436  4E75      2532          rts
                    2533   ; }
                    2534   ; void IIC_WriteData(int data){
                    2535   _IIC_WriteData:
08001438  4E56 0000 2536          link      A6,#0
0800143C  2F0A      2537          move.l    A2,-(A7)
0800143E  45F9 0800 2538          lea       _printf.L,A2
08001442  1E08      
                    2539   ; //IIC_Command_Status = 0x10;
                    2540   ; IIC_Transmit_Receive = data; //High byte internal address
08001444  202E 0008 2541          move.l    8(A6),D0
08001448  13C0 0040 2542          move.b    D0,4227078
0800144C  8006      
                    2543   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
0800144E  1239 0040 2544          move.b    4227078,D1
08001452  8006      
08001454  C2BC 0000 2545          and.l     #255,D1
08001458  00FF      
0800145A  2F01      2546          move.l    D1,-(A7)
0800145C  4879 0800 2547          pea       @m68kus~1_43.L
08001460  3762      
08001462  4E92      2548          jsr       (A2)
08001464  504F      2549          addq.w    #8,A7
                    2550   ; IIC_Command_Status = 0x10; //set WR bit
08001466  13FC 0010 2551          move.b    #16,4227080
0800146A  0040 8008 
                    2552   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
0800146E  1239 0040 2553          move.b    4227078,D1
08001472  8006      
08001474  C2BC 0000 2554          and.l     #255,D1
08001478  00FF      
0800147A  2F01      2555          move.l    D1,-(A7)
0800147C  4879 0800 2556          pea       @m68kus~1_44.L
08001480  3780      
08001482  4E92      2557          jsr       (A2)
08001484  504F      2558          addq.w    #8,A7
                    2559   ; //Wait for transmit to complete
                    2560   ; PollTIPFlag();
08001486  4EB9 0800 2561          jsr       _PollTIPFlag
0800148A  11D0      
                    2562   ; WaitForAck();
0800148C  4EB9 0800 2563          jsr       _WaitForAck
08001490  156E      
                    2564   ; IIC_Command_Status = 0x40; //Set STO bit
08001492  13FC 0040 2565          move.b    #64,4227080
08001496  0040 8008 
                    2566   ; PollTIPFlag();
0800149A  4EB9 0800 2567          jsr       _PollTIPFlag
0800149E  11D0      
                    2568   ; printf("\r\nData Writen");
080014A0  4879 0800 2569          pea       @m68kus~1_48.L
080014A4  37E2      
080014A6  4E92      2570          jsr       (A2)
080014A8  584F      2571          addq.w    #4,A7
080014AA  245F      2572          move.l    (A7)+,A2
080014AC  4E5E      2573          unlk      A6
080014AE  4E75      2574          rts
                    2575   ; }
                    2576   ; void IIC_ReadData(void){
                    2577   _IIC_ReadData:
080014B0  48E7 2020 2578          movem.l   D2/A2,-(A7)
080014B4  45F9 0800 2579          lea       _printf.L,A2
080014B8  1E08      
                    2580   ; int recieved;
                    2581   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
080014BA  1239 0040 2582          move.b    4227078,D1
080014BE  8006      
080014C0  C2BC 0000 2583          and.l     #255,D1
080014C4  00FF      
080014C6  2F01      2584          move.l    D1,-(A7)
080014C8  4879 0800 2585          pea       @m68kus~1_43.L
080014CC  3762      
080014CE  4E92      2586          jsr       (A2)
080014D0  504F      2587          addq.w    #8,A7
                    2588   ; IIC_Command_Status = 0x20; //set WR bit
080014D2  13FC 0020 2589          move.b    #32,4227080
080014D6  0040 8008 
                    2590   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
080014DA  1239 0040 2591          move.b    4227078,D1
080014DE  8006      
080014E0  C2BC 0000 2592          and.l     #255,D1
080014E4  00FF      
080014E6  2F01      2593          move.l    D1,-(A7)
080014E8  4879 0800 2594          pea       @m68kus~1_44.L
080014EC  3780      
080014EE  4E92      2595          jsr       (A2)
080014F0  504F      2596          addq.w    #8,A7
                    2597   ; PollTIPFlag();
080014F2  4EB9 0800 2598          jsr       _PollTIPFlag
080014F6  11D0      
                    2599   ; while ((IIC_Command_Status & 0x01) != 1){
                    2600   IIC_ReadData_1:
080014F8  1039 0040 2601          move.b    4227080,D0
080014FC  8008      
080014FE  C03C 0001 2602          and.b     #1,D0
08001502  0C00 0001 2603          cmp.b     #1,D0
08001506  6702      2604          beq.s     IIC_ReadData_3
                    2605   ; 1;
08001508  60EE      2606          bra       IIC_ReadData_1
                    2607   IIC_ReadData_3:
                    2608   ; }
                    2609   ; //IIC_Command_Status &= 0xFE;
                    2610   ; recieved = IIC_Transmit_Receive;
0800150A  1039 0040 2611          move.b    4227078,D0
0800150E  8006      
08001510  C0BC 0000 2612          and.l     #255,D0
08001514  00FF      
08001516  2400      2613          move.l    D0,D2
                    2614   ; printf("\r\nDATA READ IS: %02X", recieved);
08001518  2F02      2615          move.l    D2,-(A7)
0800151A  4879 0800 2616          pea       @m68kus~1_49.L
0800151E  37F0      
08001520  4E92      2617          jsr       (A2)
08001522  504F      2618          addq.w    #8,A7
                    2619   ; //IIC_Command_Status |= 0x48; //set STO bit, ACK bit
                    2620   ; IIC_Command_Status = 0x48;
08001524  13FC 0048 2621          move.b    #72,4227080
08001528  0040 8008 
                    2622   ; recieved = IIC_Transmit_Receive;
0800152C  1039 0040 2623          move.b    4227078,D0
08001530  8006      
08001532  C0BC 0000 2624          and.l     #255,D0
08001536  00FF      
08001538  2400      2625          move.l    D0,D2
0800153A  4CDF 0404 2626          movem.l   (A7)+,D2/A2
0800153E  4E75      2627          rts
                    2628   ; }
                    2629   ; int CheckAck(void){
                    2630   _CheckAck:
08001540  4E56 FFF8 2631          link      A6,#-8
                    2632   ; int val;
                    2633   ; char test;
                    2634   ; test = IIC_Command_Status;
08001544  1D79 0040 2635          move.b    4227080,-1(A6)
08001548  8008 FFFF 
                    2636   ; val = (test & 0x80);
0800154C  102E FFFF 2637          move.b    -1(A6),D0
08001550  4880      2638          ext.w     D0
08001552  48C0      2639          ext.l     D0
08001554  C0BC 0000 2640          and.l     #128,D0
08001558  0080      
0800155A  2D40 FFFA 2641          move.l    D0,-6(A6)
                    2642   ; if (val == 0){
0800155E  202E FFFA 2643          move.l    -6(A6),D0
08001562  6604      2644          bne.s     CheckAck_1
                    2645   ; return 0;
08001564  4280      2646          clr.l     D0
08001566  6002      2647          bra.s     CheckAck_3
                    2648   CheckAck_1:
                    2649   ; }
                    2650   ; else{
                    2651   ; return 1;
08001568  7001      2652          moveq     #1,D0
                    2653   CheckAck_3:
0800156A  4E5E      2654          unlk      A6
0800156C  4E75      2655          rts
                    2656   ; }
                    2657   ; }
                    2658   ; void WaitForAck(void){
                    2659   _WaitForAck:
                    2660   ; while (CheckAck() == 1){
                    2661   WaitForAck_1:
0800156E  4EB9 0800 2662          jsr       _CheckAck
08001572  1540      
08001574  0C80 0000 2663          cmp.l     #1,D0
08001578  0001      
0800157A  6602      2664          bne.s     WaitForAck_3
                    2665   ; 1;
0800157C  60F0      2666          bra       WaitForAck_1
                    2667   WaitForAck_3:
0800157E  4E75      2668          rts
                    2669   ; }
                    2670   ; }
                    2671   ; void IIC_WriteDataByte(int data, int address){
                    2672   _IIC_WriteDataByte:
08001580  4E56 FFF4 2673          link      A6,#-12
08001584  2F02      2674          move.l    D2,-(A7)
08001586  242E 000C 2675          move.l    12(A6),D2
                    2676   ; int block_sel = (address >> 16) & 0xF;  // extract most significant byte
0800158A  2002      2677          move.l    D2,D0
0800158C  E080      2678          asr.l     #8,D0
0800158E  E080      2679          asr.l     #8,D0
08001590  C0BC 0000 2680          and.l     #15,D0
08001594  000F      
08001596  2D40 FFF4 2681          move.l    D0,-12(A6)
                    2682   ; int address_high = (address >> 8) & 0xFF;  // extract high byte
0800159A  2002      2683          move.l    D2,D0
0800159C  E080      2684          asr.l     #8,D0
0800159E  C0BC 0000 2685          and.l     #255,D0
080015A2  00FF      
080015A4  2D40 FFF8 2686          move.l    D0,-8(A6)
                    2687   ; int address_low = address & 0xFF;  // extract low byte
080015A8  2002      2688          move.l    D2,D0
080015AA  C0BC 0000 2689          and.l     #255,D0
080015AE  00FF      
080015B0  2D40 FFFC 2690          move.l    D0,-4(A6)
                    2691   ; //Send start command
                    2692   ; IIC_StartCommand(block_sel);
080015B4  2F2E FFF4 2693          move.l    -12(A6),-(A7)
080015B8  4EB9 0800 2694          jsr       _IIC_StartCommand
080015BC  11EC      
080015BE  584F      2695          addq.w    #4,A7
                    2696   ; IIC_SendAddress(address_high, address_low);
080015C0  2F2E FFFC 2697          move.l    -4(A6),-(A7)
080015C4  2F2E FFF8 2698          move.l    -8(A6),-(A7)
080015C8  4EB9 0800 2699          jsr       _IIC_SendAddress
080015CC  136C      
080015CE  504F      2700          addq.w    #8,A7
                    2701   ; IIC_WriteData(data);
080015D0  2F2E 0008 2702          move.l    8(A6),-(A7)
080015D4  4EB9 0800 2703          jsr       _IIC_WriteData
080015D8  1438      
080015DA  584F      2704          addq.w    #4,A7
080015DC  241F      2705          move.l    (A7)+,D2
080015DE  4E5E      2706          unlk      A6
080015E0  4E75      2707          rts
                    2708   ; }
                    2709   ; void IIC_ReadDataByte(int address){
                    2710   _IIC_ReadDataByte:
080015E2  4E56 FFF8 2711          link      A6,#-8
080015E6  48E7 3000 2712          movem.l   D2/D3,-(A7)
080015EA  242E 0008 2713          move.l    8(A6),D2
                    2714   ; int block_sel = (address >> 16) & 0xF;  // extract most significant byte
080015EE  2002      2715          move.l    D2,D0
080015F0  E080      2716          asr.l     #8,D0
080015F2  E080      2717          asr.l     #8,D0
080015F4  C0BC 0000 2718          and.l     #15,D0
080015F8  000F      
080015FA  2600      2719          move.l    D0,D3
                    2720   ; int address_high = (address >> 8) & 0xFF;  // extract high byte
080015FC  2002      2721          move.l    D2,D0
080015FE  E080      2722          asr.l     #8,D0
08001600  C0BC 0000 2723          and.l     #255,D0
08001604  00FF      
08001606  2D40 FFF8 2724          move.l    D0,-8(A6)
                    2725   ; int address_low = address & 0xFF;  // extract low byte
0800160A  2002      2726          move.l    D2,D0
0800160C  C0BC 0000 2727          and.l     #255,D0
08001610  00FF      
08001612  2D40 FFFC 2728          move.l    D0,-4(A6)
                    2729   ; //Send start command
                    2730   ; IIC_StartCommand(block_sel);
08001616  2F03      2731          move.l    D3,-(A7)
08001618  4EB9 0800 2732          jsr       _IIC_StartCommand
0800161C  11EC      
0800161E  584F      2733          addq.w    #4,A7
                    2734   ; IIC_SendAddress(address_high, address_low);
08001620  2F2E FFFC 2735          move.l    -4(A6),-(A7)
08001624  2F2E FFF8 2736          move.l    -8(A6),-(A7)
08001628  4EB9 0800 2737          jsr       _IIC_SendAddress
0800162C  136C      
0800162E  504F      2738          addq.w    #8,A7
                    2739   ; IIC_RepeatedStartCommand(block_sel);
08001630  2F03      2740          move.l    D3,-(A7)
08001632  4EB9 0800 2741          jsr       _IIC_RepeatedStartCommand
08001636  12AA      
08001638  584F      2742          addq.w    #4,A7
                    2743   ; IIC_ReadData();
0800163A  4EB9 0800 2744          jsr       _IIC_ReadData
0800163E  14B0      
08001640  4CDF 000C 2745          movem.l   (A7)+,D2/D3
08001644  4E5E      2746          unlk      A6
08001646  4E75      2747          rts
                    2748   ; }
                    2749   ; void IIC_WriteDataBlock(int address, int blocksize, int blockstart){
                    2750   _IIC_WriteDataBlock:
08001648  4E56 0000 2751          link      A6,#0
0800164C  48E7 3C20 2752          movem.l   D2/D3/D4/D5/A2,-(A7)
08001650  45F9 0800 2753          lea       _printf.L,A2
08001654  1E08      
08001656  282E 0008 2754          move.l    8(A6),D4
                    2755   ; int block_sel = (address >> 16) & 0xF;  // extract most significant byte
0800165A  2004      2756          move.l    D4,D0
0800165C  E080      2757          asr.l     #8,D0
0800165E  E080      2758          asr.l     #8,D0
08001660  C0BC 0000 2759          and.l     #15,D0
08001664  000F      
08001666  2A00      2760          move.l    D0,D5
                    2761   ; int address_high = (address >> 8) & 0xFF;  // extract high byte
08001668  2004      2762          move.l    D4,D0
0800166A  E080      2763          asr.l     #8,D0
0800166C  C0BC 0000 2764          and.l     #255,D0
08001670  00FF      
08001672  2600      2765          move.l    D0,D3
                    2766   ; int address_low = address & 0xFF;  // extract low byte
08001674  2004      2767          move.l    D4,D0
08001676  C0BC 0000 2768          and.l     #255,D0
0800167A  00FF      
0800167C  2400      2769          move.l    D0,D2
                    2770   ; // print the results
                    2771   ; printf("\r\nBlock Sel: %X", block_sel);
0800167E  2F05      2772          move.l    D5,-(A7)
08001680  4879 0800 2773          pea       @m68kus~1_50.L
08001684  3806      
08001686  4E92      2774          jsr       (A2)
08001688  504F      2775          addq.w    #8,A7
                    2776   ; printf("\r\nAddress High: %X", address_high);
0800168A  2F03      2777          move.l    D3,-(A7)
0800168C  4879 0800 2778          pea       @m68kus~1_51.L
08001690  3816      
08001692  4E92      2779          jsr       (A2)
08001694  504F      2780          addq.w    #8,A7
                    2781   ; printf("\r\nAddress Low: %X", address_low);
08001696  2F02      2782          move.l    D2,-(A7)
08001698  4879 0800 2783          pea       @m68kus~1_52.L
0800169C  382A      
0800169E  4E92      2784          jsr       (A2)
080016A0  504F      2785          addq.w    #8,A7
                    2786   ; //Send start command
                    2787   ; IIC_StartCommand(block_sel);
080016A2  2F05      2788          move.l    D5,-(A7)
080016A4  4EB9 0800 2789          jsr       _IIC_StartCommand
080016A8  11EC      
080016AA  584F      2790          addq.w    #4,A7
                    2791   ; IIC_SendAddress(address_high, address_low);
080016AC  2F02      2792          move.l    D2,-(A7)
080016AE  2F03      2793          move.l    D3,-(A7)
080016B0  4EB9 0800 2794          jsr       _IIC_SendAddress
080016B4  136C      
080016B6  504F      2795          addq.w    #8,A7
080016B8  4CDF 043C 2796          movem.l   (A7)+,D2/D3/D4/D5/A2
080016BC  4E5E      2797          unlk      A6
080016BE  4E75      2798          rts
                    2799   ; }
                    2800   ; void Wait500ms(void)
                    2801   ; {
                    2802   _Wait500ms:
080016C0  2F02      2803          move.l    D2,-(A7)
                    2804   ; int i;
                    2805   ; for (i = 0; i < 500; i++)
080016C2  4282      2806          clr.l     D2
                    2807   Wait500ms_1:
080016C4  0C82 0000 2808          cmp.l     #500,D2
080016C8  01F4      
080016CA  6C0A      2809          bge.s     Wait500ms_3
                    2810   ; Wait1ms();
080016CC  4EB9 0800 2811          jsr       _Wait1ms
080016D0  0098      
080016D2  5282      2812          addq.l    #1,D2
080016D4  60EE      2813          bra       Wait500ms_1
                    2814   Wait500ms_3:
080016D6  241F      2815          move.l    (A7)+,D2
080016D8  4E75      2816          rts
                    2817   ; }
                    2818   ; void Wait1s(void)
                    2819   ; {
                    2820   _Wait1s:
080016DA  2F02      2821          move.l    D2,-(A7)
                    2822   ; int i;
                    2823   ; for (i = 0; i < 1000; i++)
080016DC  4282      2824          clr.l     D2
                    2825   Wait1s_1:
080016DE  0C82 0000 2826          cmp.l     #1000,D2
080016E2  03E8      
080016E4  6C0A      2827          bge.s     Wait1s_3
                    2828   ; Wait1ms();
080016E6  4EB9 0800 2829          jsr       _Wait1ms
080016EA  0098      
080016EC  5282      2830          addq.l    #1,D2
080016EE  60EE      2831          bra       Wait1s_1
                    2832   Wait1s_3:
080016F0  241F      2833          move.l    (A7)+,D2
080016F2  4E75      2834          rts
                    2835   ; }
                    2836   ; void SendI2C(char byte, char cmd) {
                    2837   _SendI2C:
080016F4  4E56 0000 2838          link      A6,#0
                    2839   ; IIC_Transmit_Receive = byte;
080016F8  13EE 000B 2840          move.b    11(A6),4227078
080016FC  0040 8006 
                    2841   ; IIC_Command_Status = cmd;
08001700  13EE 000F 2842          move.b    15(A6),4227080
08001704  0040 8008 
08001708  4E5E      2843          unlk      A6
0800170A  4E75      2844          rts
                    2845   ; }
                    2846   ; void DAC_Blinky() {
                    2847   _DAC_Blinky:
0800170C  48E7 0030 2848          movem.l   A2/A3,-(A7)
08001710  45F9 0800 2849          lea       _SendI2C.L,A2
08001714  16F4      
08001716  47F9 0800 2850          lea       _printf.L,A3
0800171A  1E08      
                    2851   ; // Write Address
                    2852   ; printf("\r\nSending Slave Address");
0800171C  4879 0800 2853          pea       @m68kus~1_53.L
08001720  383C      
08001722  4E93      2854          jsr       (A3)
08001724  584F      2855          addq.w    #4,A7
                    2856   ; PollTIPFlag();
08001726  4EB9 0800 2857          jsr       _PollTIPFlag
0800172A  11D0      
                    2858   ; SendI2C(0x90, START);    // ADC/DAC Slave Address at 0x92, Start writing 0x91
0800172C  4878 0091 2859          pea       145
08001730  4878 0090 2860          pea       144
08001734  4E92      2861          jsr       (A2)
08001736  504F      2862          addq.w    #8,A7
                    2863   ; WaitForAck();
08001738  4EB9 0800 2864          jsr       _WaitForAck
0800173C  156E      
                    2865   ; // Set Control
                    2866   ; printf("\r\nSending Control Byte");
0800173E  4879 0800 2867          pea       @m68kus~1_54.L
08001742  3854      
08001744  4E93      2868          jsr       (A3)
08001746  584F      2869          addq.w    #4,A7
                    2870   ; SendI2C(0x40, WRITE);     // DAC Output, Write cmd 0x10
08001748  4878 0010 2871          pea       16
0800174C  4878 0040 2872          pea       64
08001750  4E92      2873          jsr       (A2)
08001752  504F      2874          addq.w    #8,A7
                    2875   ; WaitForAck();
08001754  4EB9 0800 2876          jsr       _WaitForAck
08001758  156E      
                    2877   ; printf("\r\nLED will pulse ON and OFF at a frequency of 500ms, with a duty cycle of 50%");
0800175A  4879 0800 2878          pea       @m68kus~1_55.L
0800175E  386C      
08001760  4E93      2879          jsr       (A3)
08001762  584F      2880          addq.w    #4,A7
                    2881   ; // Continuous data stream w/ Blinky until reset
                    2882   ; while (1) {
                    2883   DAC_Blinky_1:
                    2884   ; SendI2C(0xFF, WRITE);   // ON
08001764  4878 0010 2885          pea       16
08001768  4878 00FF 2886          pea       255
0800176C  4E92      2887          jsr       (A2)
0800176E  504F      2888          addq.w    #8,A7
                    2889   ; Wait500ms();
08001770  4EB9 0800 2890          jsr       _Wait500ms
08001774  16C0      
                    2891   ; SendI2C(0x00, WRITE);   // OFF
08001776  4878 0010 2892          pea       16
0800177A  42A7      2893          clr.l     -(A7)
0800177C  4E92      2894          jsr       (A2)
0800177E  504F      2895          addq.w    #8,A7
                    2896   ; Wait500ms();
08001780  4EB9 0800 2897          jsr       _Wait500ms
08001784  16C0      
08001786  60DC      2898          bra       DAC_Blinky_1
                    2899   ; }
                    2900   ; }
                    2901   ; void ReadADC() {
                    2902   _ReadADC:
08001788  4E56 FFFC 2903          link      A6,#-4
0800178C  48E7 003C 2904          movem.l   A2/A3/A4/A5,-(A7)
08001790  45F9 0800 2905          lea       _printf.L,A2
08001794  1E08      
08001796  47F9 0800 2906          lea       _PollTIPFlag.L,A3
0800179A  11D0      
0800179C  49F9 0800 2907          lea       _WaitForAck.L,A4
080017A0  156E      
080017A2  4BF9 0800 2908          lea       _SendI2C.L,A5
080017A6  16F4      
                    2909   ; char ch0, ch1, ch2, ch3;
                    2910   ; while (1) {
                    2911   ReadADC_1:
                    2912   ; // Write Address
                    2913   ; printf("\r\nSending Slave Address");
080017A8  4879 0800 2914          pea       @m68kus~1_53.L
080017AC  383C      
080017AE  4E92      2915          jsr       (A2)
080017B0  584F      2916          addq.w    #4,A7
                    2917   ; PollTIPFlag();
080017B2  4E93      2918          jsr       (A3)
                    2919   ; SendI2C(0x90, START);    // ADC/DAC Slave Address at 0x92, Start writing 0x91
080017B4  4878 0091 2920          pea       145
080017B8  4878 0090 2921          pea       144
080017BC  4E95      2922          jsr       (A5)
080017BE  504F      2923          addq.w    #8,A7
                    2924   ; WaitForAck();
080017C0  4E94      2925          jsr       (A4)
                    2926   ; // Auto Increment A0
                    2927   ; printf("\r\nAuto Increment A0");
080017C2  4879 0800 2928          pea       @m68kus~1_56.L
080017C6  38BA      
080017C8  4E92      2929          jsr       (A2)
080017CA  584F      2930          addq.w    #4,A7
                    2931   ; SendI2C(0x04, WRITE);     // DAC Output, Write cmd 0x10
080017CC  4878 0010 2932          pea       16
080017D0  4878 0004 2933          pea       4
080017D4  4E95      2934          jsr       (A5)
080017D6  504F      2935          addq.w    #8,A7
                    2936   ; WaitForAck();
080017D8  4E94      2937          jsr       (A4)
                    2938   ; // Set Slave Reading Mode
                    2939   ; printf("\r\nSet Slave Reading Mode");
080017DA  4879 0800 2940          pea       @m68kus~1_57.L
080017DE  38CE      
080017E0  4E92      2941          jsr       (A2)
080017E2  584F      2942          addq.w    #4,A7
                    2943   ; PollTIPFlag();
080017E4  4E93      2944          jsr       (A3)
                    2945   ; SendI2C(0x91, START);     // DAC Output, Write cmd 0x10
080017E6  4878 0091 2946          pea       145
080017EA  4878 0091 2947          pea       145
080017EE  4E95      2948          jsr       (A5)
080017F0  504F      2949          addq.w    #8,A7
                    2950   ; WaitForAck();
080017F2  4E94      2951          jsr       (A4)
                    2952   ; // Read data and set ACK
                    2953   ; IIC_Command_Status = ACK;
080017F4  13FC 0021 2954          move.b    #33,4227080
080017F8  0040 8008 
                    2955   ; printf("\r\nWait for Data");
080017FC  4879 0800 2956          pea       @m68kus~1_58.L
08001800  38E8      
08001802  4E92      2957          jsr       (A2)
08001804  584F      2958          addq.w    #4,A7
                    2959   ; // wait for data 0
                    2960   ; // disconnected, no jumper
                    2961   ; PollTIPFlag();
08001806  4E93      2962          jsr       (A3)
                    2963   ; ch0 = IIC_Transmit_Receive;
08001808  1D79 0040 2964          move.b    4227078,-4(A6)
0800180C  8006 FFFC 
                    2965   ; IIC_Command_Status = ACK;
08001810  13FC 0021 2966          move.b    #33,4227080
08001814  0040 8008 
                    2967   ; printf("\r\nCH0 Data Received");
08001818  4879 0800 2968          pea       @m68kus~1_59.L
0800181C  38F8      
0800181E  4E92      2969          jsr       (A2)
08001820  584F      2970          addq.w    #4,A7
                    2971   ; // wait for data 1
                    2972   ; PollTIPFlag();
08001822  4E93      2973          jsr       (A3)
                    2974   ; ch1 = IIC_Transmit_Receive;
08001824  1D79 0040 2975          move.b    4227078,-3(A6)
08001828  8006 FFFD 
                    2976   ; IIC_Command_Status = ACK;
0800182C  13FC 0021 2977          move.b    #33,4227080
08001830  0040 8008 
                    2978   ; printf("\r\nCH1 Data Received");
08001834  4879 0800 2979          pea       @m68kus~1_60.L
08001838  390C      
0800183A  4E92      2980          jsr       (A2)
0800183C  584F      2981          addq.w    #4,A7
                    2982   ; // wait for data 2
                    2983   ; PollTIPFlag();
0800183E  4E93      2984          jsr       (A3)
                    2985   ; ch2 = IIC_Transmit_Receive;
08001840  1D79 0040 2986          move.b    4227078,-2(A6)
08001844  8006 FFFE 
                    2987   ; IIC_Command_Status = ACK;
08001848  13FC 0021 2988          move.b    #33,4227080
0800184C  0040 8008 
                    2989   ; printf("\r\nCH2 Data Received");
08001850  4879 0800 2990          pea       @m68kus~1_61.L
08001854  3920      
08001856  4E92      2991          jsr       (A2)
08001858  584F      2992          addq.w    #4,A7
                    2993   ; // wait for data 3
                    2994   ; PollTIPFlag();
0800185A  4E93      2995          jsr       (A3)
                    2996   ; ch3 = IIC_Transmit_Receive;
0800185C  1D79 0040 2997          move.b    4227078,-1(A6)
08001860  8006 FFFF 
                    2998   ; printf("\r\nCH3 Data Received");
08001864  4879 0800 2999          pea       @m68kus~1_62.L
08001868  3934      
0800186A  4E92      3000          jsr       (A2)
0800186C  584F      3001          addq.w    #4,A7
                    3002   ; IIC_Command_Status = 0x41;
0800186E  13FC 0041 3003          move.b    #65,4227080
08001872  0040 8008 
                    3004   ; printf("\r\nExt. Analog Source: Disconnected");
08001876  4879 0800 3005          pea       @m68kus~1_63.L
0800187A  3948      
0800187C  4E92      3006          jsr       (A2)
0800187E  584F      3007          addq.w    #4,A7
                    3008   ; printf("\r\nPotentiometer: %d", ch1);
08001880  122E FFFD 3009          move.b    -3(A6),D1
08001884  4881      3010          ext.w     D1
08001886  48C1      3011          ext.l     D1
08001888  2F01      3012          move.l    D1,-(A7)
0800188A  4879 0800 3013          pea       @m68kus~1_64.L
0800188E  396C      
08001890  4E92      3014          jsr       (A2)
08001892  504F      3015          addq.w    #8,A7
                    3016   ; printf("\r\nThermistor: %d", ch2);
08001894  122E FFFE 3017          move.b    -2(A6),D1
08001898  4881      3018          ext.w     D1
0800189A  48C1      3019          ext.l     D1
0800189C  2F01      3020          move.l    D1,-(A7)
0800189E  4879 0800 3021          pea       @m68kus~1_65.L
080018A2  3980      
080018A4  4E92      3022          jsr       (A2)
080018A6  504F      3023          addq.w    #8,A7
                    3024   ; printf("\r\nPhotoresistor: %d", ch3);
080018A8  122E FFFF 3025          move.b    -1(A6),D1
080018AC  4881      3026          ext.w     D1
080018AE  48C1      3027          ext.l     D1
080018B0  2F01      3028          move.l    D1,-(A7)
080018B2  4879 0800 3029          pea       @m68kus~1_66.L
080018B6  3992      
080018B8  4E92      3030          jsr       (A2)
080018BA  504F      3031          addq.w    #8,A7
                    3032   ; Wait1s();
080018BC  4EB9 0800 3033          jsr       _Wait1s
080018C0  16DA      
080018C2  6000 FEE4 3034          bra       ReadADC_1
                    3035   ; }
                    3036   ; }
                    3037   ; /******************************************************************************************************************************
                    3038   ; * Start of user program
                    3039   ; ******************************************************************************************************************************/
                    3040   ; void main()
                    3041   ; {
                    3042   _main:
080018C6  4E56 FF2C 3043          link      A6,#-212
080018CA  48E7 3038 3044          movem.l   D2/D3/A2/A3/A4,-(A7)
080018CE  45F9 0800 3045          lea       _printf.L,A2
080018D2  1E08      
080018D4  47F9 0800 3046          lea       _scanf.L,A3
080018D8  1DD6      
080018DA  49F9 0800 3047          lea       _InstallExceptionHandler.L,A4
080018DE  0220      
                    3048   ; unsigned int row, i=0, count=0, counter1=1;
080018E0  42AE FF32 3049          clr.l     -206(A6)
080018E4  42AE FF36 3050          clr.l     -202(A6)
080018E8  2D7C 0000 3051          move.l    #1,-198(A6)
080018EC  0001 FF3A 
                    3052   ; char c, text[150] ;
                    3053   ; int PassFailFlag = 1 ;
080018F0  2D7C 0000 3054          move.l    #1,-42(A6)
080018F4  0001 FFD6 
                    3055   ; //IIC variables
                    3056   ; char choice = '0';
080018F8  1D7C 0030 3057          move.b    #48,-37(A6)
080018FC  FFDB      
                    3058   ; int WriteData;
                    3059   ; int WriteAddress;
                    3060   ; int ReadAddress;
                    3061   ; int WriteBlockAddress;
                    3062   ; int WriteBlockSize;
                    3063   ; int WriteBlockMaxSize;
                    3064   ; int WriteBlockDataStart;
                    3065   ; int ReadBlockAddress;
                    3066   ; int ReadBlockMaxSize;
                    3067   ; int ReadBlockSize;
                    3068   ; int num;
                    3069   ; /////Mem Test Variables
                    3070   ; // unsigned int *RamPtr;
                    3071   ; // unsigned int Start, End ;
                    3072   ; // unsigned int data_byte1, data_byte2, data_byte3, data_byte4; //Test data recieved from user (bytes)
                    3073   ; // unsigned int data_word1, data_word2, data_word3, data_word4;
                    3074   ; // unsigned int data_Lword1, data_Lword2, data_Lword3, data_Lword4;
                    3075   ; // char type;
                    3076   ; // int testnum = 1;
                    3077   ; /////Mem Test Variables
                    3078   ; i = x = y = z = PortA_Count =0;
080018FE  42B9 0800 3079          clr.l     _PortA_Count.L
08001902  3E6E      
08001904  42B9 0800 3080          clr.l     _z.L
08001908  3E6A      
0800190A  42B9 0800 3081          clr.l     _y.L
0800190E  3E66      
08001910  42B9 0800 3082          clr.l     _x.L
08001914  3E62      
08001916  42AE FF32 3083          clr.l     -206(A6)
                    3084   ; Timer1Count = Timer2Count = Timer3Count = Timer4Count = 0;
0800191A  4239 0800 3085          clr.b     _Timer4Count.L
0800191E  3E78      
08001920  4239 0800 3086          clr.b     _Timer3Count.L
08001924  3E76      
08001926  4239 0800 3087          clr.b     _Timer2Count.L
0800192A  3E74      
0800192C  4239 0800 3088          clr.b     _Timer1Count.L
08001930  3E72      
                    3089   ; InstallExceptionHandler(PIA_ISR, 25) ;          // install interrupt handler for PIAs 1 and 2 on level 1 IRQ
08001932  4878 0019 3090          pea       25
08001936  4879 0800 3091          pea       _PIA_ISR.L
0800193A  0092      
0800193C  4E94      3092          jsr       (A4)
0800193E  504F      3093          addq.w    #8,A7
                    3094   ; InstallExceptionHandler(ACIA_ISR, 26) ;		    // install interrupt handler for ACIA on level 2 IRQ
08001940  4878 001A 3095          pea       26
08001944  4879 0800 3096          pea       _ACIA_ISR.L
08001948  0090      
0800194A  4E94      3097          jsr       (A4)
0800194C  504F      3098          addq.w    #8,A7
                    3099   ; InstallExceptionHandler(Timer_ISR, 27) ;		// install interrupt handler for Timers 1-4 on level 3 IRQ
0800194E  4878 001B 3100          pea       27
08001952  4879 0800 3101          pea       _Timer_ISR.L
08001956  003E      
08001958  4E94      3102          jsr       (A4)
0800195A  504F      3103          addq.w    #8,A7
                    3104   ; InstallExceptionHandler(Key2PressISR, 28) ;	    // install interrupt handler for Key Press 2 on DE1 board for level 4 IRQ
0800195C  4878 001C 3105          pea       28
08001960  4879 0800 3106          pea       _Key2PressISR.L
08001964  0094      
08001966  4E94      3107          jsr       (A4)
08001968  504F      3108          addq.w    #8,A7
                    3109   ; InstallExceptionHandler(Key1PressISR, 29) ;	    // install interrupt handler for Key Press 1 on DE1 board for level 5 IRQ
0800196A  4878 001D 3110          pea       29
0800196E  4879 0800 3111          pea       _Key1PressISR.L
08001972  0096      
08001974  4E94      3112          jsr       (A4)
08001976  504F      3113          addq.w    #8,A7
                    3114   ; Timer1Data = 0x10;		// program time delay into timers 1-4
08001978  13FC 0010 3115          move.b    #16,4194352
0800197C  0040 0030 
                    3116   ; Timer2Data = 0x20;
08001980  13FC 0020 3117          move.b    #32,4194356
08001984  0040 0034 
                    3118   ; Timer3Data = 0x15;
08001988  13FC 0015 3119          move.b    #21,4194360
0800198C  0040 0038 
                    3120   ; Timer4Data = 0x25;
08001990  13FC 0025 3121          move.b    #37,4194364
08001994  0040 003C 
                    3122   ; Timer1Control = 3;		// write 3 to control register to Bit0 = 1 (enable interrupt from timers) 1 - 4 and allow them to count Bit 1 = 1
08001998  13FC 0003 3123          move.b    #3,4194354
0800199C  0040 0032 
                    3124   ; Timer2Control = 3;
080019A0  13FC 0003 3125          move.b    #3,4194358
080019A4  0040 0036 
                    3126   ; Timer3Control = 3;
080019A8  13FC 0003 3127          move.b    #3,4194362
080019AC  0040 003A 
                    3128   ; Timer4Control = 3;
080019B0  13FC 0003 3129          move.b    #3,4194366
080019B4  0040 003E 
                    3130   ; Init_LCD();             // initialise the LCD display to use a parallel data interface and 2 lines of display
080019B8  4EB9 0800 3131          jsr       _Init_LCD
080019BC  00C6      
                    3132   ; Init_RS232() ;          // initialise the RS232 port for use with hyper terminal
080019BE  4EB9 0800 3133          jsr       _Init_RS232
080019C2  00E4      
                    3134   ; /*************************************************************************************************
                    3135   ; **  User Program
                    3136   ; *************************************************************************************************/
                    3137   ; printf("\r\nIIC program will begin");
080019C4  4879 0800 3138          pea       @m68kus~1_67.L
080019C8  39A6      
080019CA  4E92      3139          jsr       (A2)
080019CC  584F      3140          addq.w    #4,A7
                    3141   ; printf("\r\nEnter 0 ... Write Single Byte");
080019CE  4879 0800 3142          pea       @m68kus~1_68.L
080019D2  39C0      
080019D4  4E92      3143          jsr       (A2)
080019D6  584F      3144          addq.w    #4,A7
                    3145   ; printf("\r\nEnter 1 ... Read Single Byte");
080019D8  4879 0800 3146          pea       @m68kus~1_69.L
080019DC  39E0      
080019DE  4E92      3147          jsr       (A2)
080019E0  584F      3148          addq.w    #4,A7
                    3149   ; printf("\r\nEnter 2 ... Write Data Block");
080019E2  4879 0800 3150          pea       @m68kus~1_70.L
080019E6  3A00      
080019E8  4E92      3151          jsr       (A2)
080019EA  584F      3152          addq.w    #4,A7
                    3153   ; printf("\r\nEnter 3 ... Read Data Block");
080019EC  4879 0800 3154          pea       @m68kus~1_71.L
080019F0  3A20      
080019F2  4E92      3155          jsr       (A2)
080019F4  584F      3156          addq.w    #4,A7
                    3157   ; printf("\r\nEnter 4 ... Waveform DAC and LED Blinky");
080019F6  4879 0800 3158          pea       @m68kus~1_72.L
080019FA  3A3E      
080019FC  4E92      3159          jsr       (A2)
080019FE  584F      3160          addq.w    #4,A7
                    3161   ; printf("\r\nEnter 5 ... Read Analog input from ADC Channel\r\n");
08001A00  4879 0800 3162          pea       @m68kus~1_73.L
08001A04  3A68      
08001A06  4E92      3163          jsr       (A2)
08001A08  584F      3164          addq.w    #4,A7
                    3165   ; scanf("%c", &choice);
08001A0A  486E FFDB 3166          pea       -37(A6)
08001A0E  4879 0800 3167          pea       @m68kus~1_74.L
08001A12  3A9C      
08001A14  4E93      3168          jsr       (A3)
08001A16  504F      3169          addq.w    #8,A7
                    3170   ; IIC_Init();
08001A18  4EB9 0800 3171          jsr       _IIC_Init
08001A1C  119C      
                    3172   ; while (1) {
                    3173   main_1:
                    3174   ; if (choice == '0') {
08001A1E  102E FFDB 3175          move.b    -37(A6),D0
08001A22  0C00 0030 3176          cmp.b     #48,D0
08001A26  6600 009C 3177          bne       main_4
                    3178   ; printf("Single Byte Write Initiated\r\nEnter Data Byte: ");
08001A2A  4879 0800 3179          pea       @m68kus~1_75.L
08001A2E  3AA0      
08001A30  4E92      3180          jsr       (A2)
08001A32  584F      3181          addq.w    #4,A7
                    3182   ; scanf("%x", &WriteData);
08001A34  486E FFDC 3183          pea       -36(A6)
08001A38  4879 0800 3184          pea       @m68kus~1_3.L
08001A3C  31A4      
08001A3E  4E93      3185          jsr       (A3)
08001A40  504F      3186          addq.w    #8,A7
                    3187   ; while (WriteData > 0xFF) {
                    3188   main_6:
08001A42  202E FFDC 3189          move.l    -36(A6),D0
08001A46  0C80 0000 3190          cmp.l     #255,D0
08001A4A  00FF      
08001A4C  6F1A      3191          ble.s     main_8
                    3192   ; printf("Enter Valid Data Byte: ");
08001A4E  4879 0800 3193          pea       @m68kus~1_76.L
08001A52  3AD0      
08001A54  4E92      3194          jsr       (A2)
08001A56  584F      3195          addq.w    #4,A7
                    3196   ; scanf("%x", &WriteData);
08001A58  486E FFDC 3197          pea       -36(A6)
08001A5C  4879 0800 3198          pea       @m68kus~1_3.L
08001A60  31A4      
08001A62  4E93      3199          jsr       (A3)
08001A64  504F      3200          addq.w    #8,A7
08001A66  60DA      3201          bra       main_6
                    3202   main_8:
                    3203   ; }
                    3204   ; printf("Enter Address (00000 - 1FFFF): ");
08001A68  4879 0800 3205          pea       @m68kus~1_77.L
08001A6C  3AE8      
08001A6E  4E92      3206          jsr       (A2)
08001A70  584F      3207          addq.w    #4,A7
                    3208   ; scanf("%x", &WriteAddress);
08001A72  486E FFE0 3209          pea       -32(A6)
08001A76  4879 0800 3210          pea       @m68kus~1_3.L
08001A7A  31A4      
08001A7C  4E93      3211          jsr       (A3)
08001A7E  504F      3212          addq.w    #8,A7
                    3213   ; while (WriteAddress > 0x1FFFF) {
                    3214   main_9:
08001A80  202E FFE0 3215          move.l    -32(A6),D0
08001A84  0C80 0001 3216          cmp.l     #131071,D0
08001A88  FFFF      
08001A8A  6F1A      3217          ble.s     main_11
                    3218   ; printf("Enter Valid Address: ");
08001A8C  4879 0800 3219          pea       @m68kus~1_78.L
08001A90  3B08      
08001A92  4E92      3220          jsr       (A2)
08001A94  584F      3221          addq.w    #4,A7
                    3222   ; scanf("%x", WriteAddress);
08001A96  2F2E FFE0 3223          move.l    -32(A6),-(A7)
08001A9A  4879 0800 3224          pea       @m68kus~1_3.L
08001A9E  31A4      
08001AA0  4E93      3225          jsr       (A3)
08001AA2  504F      3226          addq.w    #8,A7
08001AA4  60DA      3227          bra       main_9
                    3228   main_11:
                    3229   ; }
                    3230   ; printf("\r\nWriting Data Byte ...");
08001AA6  4879 0800 3231          pea       @m68kus~1_79.L
08001AAA  3B1E      
08001AAC  4E92      3232          jsr       (A2)
08001AAE  584F      3233          addq.w    #4,A7
                    3234   ; IIC_WriteDataByte(WriteData, WriteAddress);
08001AB0  2F2E FFE0 3235          move.l    -32(A6),-(A7)
08001AB4  2F2E FFDC 3236          move.l    -36(A6),-(A7)
08001AB8  4EB9 0800 3237          jsr       _IIC_WriteDataByte
08001ABC  1580      
08001ABE  504F      3238          addq.w    #8,A7
08001AC0  6000 0228 3239          bra       main_39
                    3240   main_4:
                    3241   ; }
                    3242   ; else if (choice == '1') {
08001AC4  102E FFDB 3243          move.b    -37(A6),D0
08001AC8  0C00 0031 3244          cmp.b     #49,D0
08001ACC  6600 005A 3245          bne       main_12
                    3246   ; printf("\r\nSingle Byte Read Initiated\r\nEnter Address (00000 - 1FFFF): ");
08001AD0  4879 0800 3247          pea       @m68kus~1_80.L
08001AD4  3B36      
08001AD6  4E92      3248          jsr       (A2)
08001AD8  584F      3249          addq.w    #4,A7
                    3250   ; scanf("%x", &ReadAddress);
08001ADA  486E FFE4 3251          pea       -28(A6)
08001ADE  4879 0800 3252          pea       @m68kus~1_3.L
08001AE2  31A4      
08001AE4  4E93      3253          jsr       (A3)
08001AE6  504F      3254          addq.w    #8,A7
                    3255   ; while (ReadAddress > 0x1FFFF) {
                    3256   main_14:
08001AE8  202E FFE4 3257          move.l    -28(A6),D0
08001AEC  0C80 0001 3258          cmp.l     #131071,D0
08001AF0  FFFF      
08001AF2  6F1A      3259          ble.s     main_16
                    3260   ; printf("Enter Valid Address: ");
08001AF4  4879 0800 3261          pea       @m68kus~1_78.L
08001AF8  3B08      
08001AFA  4E92      3262          jsr       (A2)
08001AFC  584F      3263          addq.w    #4,A7
                    3264   ; scanf("%x", &ReadAddress);
08001AFE  486E FFE4 3265          pea       -28(A6)
08001B02  4879 0800 3266          pea       @m68kus~1_3.L
08001B06  31A4      
08001B08  4E93      3267          jsr       (A3)
08001B0A  504F      3268          addq.w    #8,A7
08001B0C  60DA      3269          bra       main_14
                    3270   main_16:
                    3271   ; }
                    3272   ; printf("\r\nReading Data Byte ...");
08001B0E  4879 0800 3273          pea       @m68kus~1_81.L
08001B12  3B74      
08001B14  4E92      3274          jsr       (A2)
08001B16  584F      3275          addq.w    #4,A7
                    3276   ; IIC_ReadDataByte(ReadAddress);
08001B18  2F2E FFE4 3277          move.l    -28(A6),-(A7)
08001B1C  4EB9 0800 3278          jsr       _IIC_ReadDataByte
08001B20  15E2      
08001B22  584F      3279          addq.w    #4,A7
08001B24  6000 01C4 3280          bra       main_39
                    3281   main_12:
                    3282   ; }
                    3283   ; else if (choice == '2') {
08001B28  102E FFDB 3284          move.b    -37(A6),D0
08001B2C  0C00 0032 3285          cmp.b     #50,D0
08001B30  6600 00E0 3286          bne       main_17
                    3287   ; printf("\r\nData Block Write Initiated\r\nEnter Starting Address (00000 - 1FFFF): ");
08001B34  4879 0800 3288          pea       @m68kus~1_82.L
08001B38  3B8C      
08001B3A  4E92      3289          jsr       (A2)
08001B3C  584F      3290          addq.w    #4,A7
                    3291   ; scanf("%x", &WriteBlockAddress);
08001B3E  486E FFE8 3292          pea       -24(A6)
08001B42  4879 0800 3293          pea       @m68kus~1_3.L
08001B46  31A4      
08001B48  4E93      3294          jsr       (A3)
08001B4A  504F      3295          addq.w    #8,A7
                    3296   ; while (WriteBlockAddress > 0x1FFFF) {
                    3297   main_19:
08001B4C  202E FFE8 3298          move.l    -24(A6),D0
08001B50  0C80 0001 3299          cmp.l     #131071,D0
08001B54  FFFF      
08001B56  6F1A      3300          ble.s     main_21
                    3301   ; printf("Enter Valid Address: ");
08001B58  4879 0800 3302          pea       @m68kus~1_78.L
08001B5C  3B08      
08001B5E  4E92      3303          jsr       (A2)
08001B60  584F      3304          addq.w    #4,A7
                    3305   ; scanf("%x", &WriteBlockAddress);
08001B62  486E FFE8 3306          pea       -24(A6)
08001B66  4879 0800 3307          pea       @m68kus~1_3.L
08001B6A  31A4      
08001B6C  4E93      3308          jsr       (A3)
08001B6E  504F      3309          addq.w    #8,A7
08001B70  60DA      3310          bra       main_19
                    3311   main_21:
                    3312   ; }
                    3313   ; WriteBlockMaxSize = (0x1FFFF - WriteBlockAddress);
08001B72  203C 0001 3314          move.l    #131071,D0
08001B76  FFFF      
08001B78  90AE FFE8 3315          sub.l     -24(A6),D0
08001B7C  2600      3316          move.l    D0,D3
                    3317   ; printf("Enter Data Block Size (00000 - %05X): ", WriteBlockMaxSize);
08001B7E  2F03      3318          move.l    D3,-(A7)
08001B80  4879 0800 3319          pea       @m68kus~1_83.L
08001B84  3BD4      
08001B86  4E92      3320          jsr       (A2)
08001B88  504F      3321          addq.w    #8,A7
                    3322   ; scanf("%x", &WriteBlockSize);
08001B8A  486E FFEC 3323          pea       -20(A6)
08001B8E  4879 0800 3324          pea       @m68kus~1_3.L
08001B92  31A4      
08001B94  4E93      3325          jsr       (A3)
08001B96  504F      3326          addq.w    #8,A7
                    3327   ; while (WriteBlockSize > WriteBlockMaxSize) {
                    3328   main_22:
08001B98  B6AE FFEC 3329          cmp.l     -20(A6),D3
08001B9C  6C1C      3330          bge.s     main_24
                    3331   ; printf("Enter Valid Block Size (00000 - %05X): ", WriteBlockMaxSize);
08001B9E  2F03      3332          move.l    D3,-(A7)
08001BA0  4879 0800 3333          pea       @m68kus~1_84.L
08001BA4  3BFC      
08001BA6  4E92      3334          jsr       (A2)
08001BA8  504F      3335          addq.w    #8,A7
                    3336   ; scanf("%x", &WriteBlockSize);
08001BAA  486E FFEC 3337          pea       -20(A6)
08001BAE  4879 0800 3338          pea       @m68kus~1_3.L
08001BB2  31A4      
08001BB4  4E93      3339          jsr       (A3)
08001BB6  504F      3340          addq.w    #8,A7
08001BB8  60DE      3341          bra       main_22
                    3342   main_24:
                    3343   ; }
                    3344   ; printf("Enter Starting Data Byte: ");
08001BBA  4879 0800 3345          pea       @m68kus~1_85.L
08001BBE  3C24      
08001BC0  4E92      3346          jsr       (A2)
08001BC2  584F      3347          addq.w    #4,A7
                    3348   ; scanf("%x", &WriteBlockDataStart);
08001BC4  486E FFF0 3349          pea       -16(A6)
08001BC8  4879 0800 3350          pea       @m68kus~1_3.L
08001BCC  31A4      
08001BCE  4E93      3351          jsr       (A3)
08001BD0  504F      3352          addq.w    #8,A7
                    3353   ; while (WriteBlockDataStart > 0xFF) {
                    3354   main_25:
08001BD2  202E FFF0 3355          move.l    -16(A6),D0
08001BD6  0C80 0000 3356          cmp.l     #255,D0
08001BDA  00FF      
08001BDC  6F1A      3357          ble.s     main_27
                    3358   ; printf("Enter Valid Data Byte: ");
08001BDE  4879 0800 3359          pea       @m68kus~1_76.L
08001BE2  3AD0      
08001BE4  4E92      3360          jsr       (A2)
08001BE6  584F      3361          addq.w    #4,A7
                    3362   ; scanf("%x", &WriteBlockDataStart);
08001BE8  486E FFF0 3363          pea       -16(A6)
08001BEC  4879 0800 3364          pea       @m68kus~1_3.L
08001BF0  31A4      
08001BF2  4E93      3365          jsr       (A3)
08001BF4  504F      3366          addq.w    #8,A7
08001BF6  60DA      3367          bra       main_25
                    3368   main_27:
                    3369   ; }
                    3370   ; IIC_WriteDataBlock(WriteBlockAddress, WriteBlockSize, WriteBlockDataStart);
08001BF8  2F2E FFF0 3371          move.l    -16(A6),-(A7)
08001BFC  2F2E FFEC 3372          move.l    -20(A6),-(A7)
08001C00  2F2E FFE8 3373          move.l    -24(A6),-(A7)
08001C04  4EB9 0800 3374          jsr       _IIC_WriteDataBlock
08001C08  1648      
08001C0A  DEFC 000C 3375          add.w     #12,A7
08001C0E  6000 00DA 3376          bra       main_39
                    3377   main_17:
                    3378   ; }
                    3379   ; else if (choice == '3') {
08001C12  102E FFDB 3380          move.b    -37(A6),D0
08001C16  0C00 0033 3381          cmp.b     #51,D0
08001C1A  6600 008C 3382          bne       main_28
                    3383   ; printf("\r\nData Block Read Initiated\r\nEnter Starting Address (00000 - 1FFFF): ");
08001C1E  4879 0800 3384          pea       @m68kus~1_86.L
08001C22  3C40      
08001C24  4E92      3385          jsr       (A2)
08001C26  584F      3386          addq.w    #4,A7
                    3387   ; scanf("%x", &ReadBlockAddress);
08001C28  486E FFF4 3388          pea       -12(A6)
08001C2C  4879 0800 3389          pea       @m68kus~1_3.L
08001C30  31A4      
08001C32  4E93      3390          jsr       (A3)
08001C34  504F      3391          addq.w    #8,A7
                    3392   ; while (ReadBlockAddress > 0x1FFFF) {
                    3393   main_30:
08001C36  202E FFF4 3394          move.l    -12(A6),D0
08001C3A  0C80 0001 3395          cmp.l     #131071,D0
08001C3E  FFFF      
08001C40  6F1A      3396          ble.s     main_32
                    3397   ; printf("Enter Valid Address");
08001C42  4879 0800 3398          pea       @m68kus~1_87.L
08001C46  3C86      
08001C48  4E92      3399          jsr       (A2)
08001C4A  584F      3400          addq.w    #4,A7
                    3401   ; scanf("%x", &ReadBlockAddress);
08001C4C  486E FFF4 3402          pea       -12(A6)
08001C50  4879 0800 3403          pea       @m68kus~1_3.L
08001C54  31A4      
08001C56  4E93      3404          jsr       (A3)
08001C58  504F      3405          addq.w    #8,A7
08001C5A  60DA      3406          bra       main_30
                    3407   main_32:
                    3408   ; }
                    3409   ; ReadBlockMaxSize = (0x1FFFF - ReadBlockAddress);
08001C5C  203C 0001 3410          move.l    #131071,D0
08001C60  FFFF      
08001C62  90AE FFF4 3411          sub.l     -12(A6),D0
08001C66  2400      3412          move.l    D0,D2
                    3413   ; printf("Enter Data Block Size (00000 - %05X): ", ReadBlockMaxSize);
08001C68  2F02      3414          move.l    D2,-(A7)
08001C6A  4879 0800 3415          pea       @m68kus~1_83.L
08001C6E  3BD4      
08001C70  4E92      3416          jsr       (A2)
08001C72  504F      3417          addq.w    #8,A7
                    3418   ; scanf("%x", &ReadBlockSize);
08001C74  486E FFF8 3419          pea       -8(A6)
08001C78  4879 0800 3420          pea       @m68kus~1_3.L
08001C7C  31A4      
08001C7E  4E93      3421          jsr       (A3)
08001C80  504F      3422          addq.w    #8,A7
                    3423   ; while (ReadBlockSize > ReadBlockMaxSize) {
                    3424   main_33:
08001C82  B4AE FFF8 3425          cmp.l     -8(A6),D2
08001C86  6C1C      3426          bge.s     main_35
                    3427   ; printf("Enter Valid Block Size (00000 - %05X): ", ReadBlockMaxSize);
08001C88  2F02      3428          move.l    D2,-(A7)
08001C8A  4879 0800 3429          pea       @m68kus~1_84.L
08001C8E  3BFC      
08001C90  4E92      3430          jsr       (A2)
08001C92  504F      3431          addq.w    #8,A7
                    3432   ; scanf("%x", &ReadBlockSize);
08001C94  486E FFF8 3433          pea       -8(A6)
08001C98  4879 0800 3434          pea       @m68kus~1_3.L
08001C9C  31A4      
08001C9E  4E93      3435          jsr       (A3)
08001CA0  504F      3436          addq.w    #8,A7
08001CA2  60DE      3437          bra       main_33
                    3438   main_35:
08001CA4  6000 0044 3439          bra       main_39
                    3440   main_28:
                    3441   ; }
                    3442   ; }
                    3443   ; else if (choice == '4') {
08001CA8  102E FFDB 3444          move.b    -37(A6),D0
08001CAC  0C00 0034 3445          cmp.b     #52,D0
08001CB0  6612      3446          bne.s     main_36
                    3447   ; printf("\r\nWaveform DAC and LED Blinky Initiated\r\n");
08001CB2  4879 0800 3448          pea       @m68kus~1_88.L
08001CB6  3C9A      
08001CB8  4E92      3449          jsr       (A2)
08001CBA  584F      3450          addq.w    #4,A7
                    3451   ; DAC_Blinky();
08001CBC  4EB9 0800 3452          jsr       _DAC_Blinky
08001CC0  170C      
08001CC2  6026      3453          bra.s     main_39
                    3454   main_36:
                    3455   ; }
                    3456   ; else if (choice == '5') {
08001CC4  102E FFDB 3457          move.b    -37(A6),D0
08001CC8  0C00 0035 3458          cmp.b     #53,D0
08001CCC  6612      3459          bne.s     main_38
                    3460   ; printf("\r\nRead Analog input from ADC Channel Initiated");
08001CCE  4879 0800 3461          pea       @m68kus~1_89.L
08001CD2  3CC4      
08001CD4  4E92      3462          jsr       (A2)
08001CD6  584F      3463          addq.w    #4,A7
                    3464   ; ReadADC();
08001CD8  4EB9 0800 3465          jsr       _ReadADC
08001CDC  1788      
08001CDE  600A      3466          bra.s     main_39
                    3467   main_38:
                    3468   ; }
                    3469   ; else {
                    3470   ; printf("\r\nInvalid Selection, Please Select an Option Between 0-5.");
08001CE0  4879 0800 3471          pea       @m68kus~1_90.L
08001CE4  3CF4      
08001CE6  4E92      3472          jsr       (A2)
08001CE8  584F      3473          addq.w    #4,A7
                    3474   main_39:
                    3475   ; }
                    3476   ; printf("\r\nProgram ended");
08001CEA  4879 0800 3477          pea       @m68kus~1_91.L
08001CEE  3D2E      
08001CF0  4E92      3478          jsr       (A2)
08001CF2  584F      3479          addq.w    #4,A7
08001CF4  6000 FD28 3480          bra       main_1
                    3481   ; }
                    3482   ; }
                    3483   ULDIV:
08001CF8  4E56 0000 3484          link    A6,#0
08001CFC  48E7 C000 3485          movem.l D0/D1,-(A7)
08001D00  222E 0008 3486          move.l  8(A6),D1
08001D04  202E 000C 3487          move.l  12(A6),D0
08001D08  6036      3488          bra.s   ldiv_3
                    3489   LDIV:
08001D0A  4E56 0000 3490          link    A6,#0
08001D0E  48E7 C000 3491          movem.l D0/D1,-(A7)
08001D12  222E 0008 3492          move.l  8(A6),D1
08001D16  202E 000C 3493          move.l  12(A6),D0
08001D1A  4A80      3494          tst.l   D0
08001D1C  6A0E      3495          bpl.s   ldiv_1
08001D1E  4480      3496          neg.l   D0
08001D20  4A81      3497          tst.l   D1
08001D22  6A14      3498          bpl.s   ldiv_2
08001D24  4481      3499          neg.l   D1
08001D26  612A      3500          bsr.s   dodiv
08001D28  4481      3501          neg.l   D1
08001D2A  6016      3502          bra.s   ldiv_4
                    3503   ldiv_1:
08001D2C  4A81      3504          tst.l   D1
08001D2E  6A10      3505          bpl.s   ldiv_3
08001D30  4481      3506          neg.l   D1
08001D32  611E      3507          bsr.s   dodiv
08001D34  4480      3508          neg.l   D0
08001D36  600A      3509          bra.s   ldiv_4
                    3510   ldiv_2:
08001D38  6118      3511          bsr.s   dodiv
08001D3A  4480      3512          neg.l   D0
08001D3C  4481      3513          neg.l   D1
08001D3E  6002      3514          bra.s   ldiv_4
                    3515   ldiv_3:
08001D40  6110      3516          bsr.s   dodiv
                    3517   ldiv_4:
08001D42  2D40 0008 3518          move.l  D0,8(A6)
08001D46  2D41 000C 3519          move.l  D1,12(A6)
08001D4A  4CDF 0003 3520          movem.l (A7)+,D0/D1
08001D4E  4E5E      3521          unlk    A6
08001D50  4E75      3522          rts
                    3523   dodiv:
08001D52  0C81 0000 3524          cmpi.l  #$FFFF,D1
08001D56  FFFF      
08001D58  6236      3525          bhi.s   dodiv_2
08001D5A  0C80 0000 3526          cmpi.l  #$FFFF,D0
08001D5E  FFFF      
08001D60  6210      3527          bhi.s   dodiv_1
08001D62  80C1      3528          divu    D1,D0
08001D64  2200      3529          move.l  D0,D1
08001D66  4241      3530          clr.w   D1
08001D68  4841      3531          swap    D1
08001D6A  0280 0000 3532          andi.l  #$FFFF,D0
08001D6E  FFFF      
08001D70  4E75      3533          rts
                    3534   dodiv_1:
08001D72  48A7 A000 3535          movem.w D0/D2,-(A7)
08001D76  4240      3536          clr.w   D0
08001D78  4840      3537          swap    D0
08001D7A  80C1      3538          divu    D1,D0
08001D7C  3400      3539          move.w  D0,D2
08001D7E  301F      3540          move.w  (A7)+,D0
08001D80  80C1      3541          divu    D1,D0
08001D82  4840      3542          swap    D0
08001D84  4281      3543          clr.l   D1
08001D86  3200      3544          move.w  D0,D1
08001D88  3002      3545          move.w  D2,D0
08001D8A  4840      3546          swap    D0
08001D8C  341F      3547          move.w  (A7)+,D2
08001D8E  4E75      3548          rts
                    3549   dodiv_2:
08001D90  48E7 3800 3550          movem.l D2/D3/D4,-(A7)
08001D94  2401      3551          move.l  D1,D2
08001D96  4242      3552          clr.w   D2
08001D98  4842      3553          swap    D2
08001D9A  5282      3554          addq.l  #1,D2
08001D9C  2600      3555          move.l  D0,D3
08001D9E  2801      3556          move.l  D1,D4
08001DA0  2202      3557          move.l  D2,D1
08001DA2  61CE      3558          bsr.s   dodiv_1
08001DA4  2204      3559          move.l  D4,D1
08001DA6  82C2      3560          divu    D2,D1
08001DA8  80C1      3561          divu    D1,D0
08001DAA  0280 0000 3562          andi.l  #$FFFF,D0
08001DAE  FFFF      
                    3563   dodiv_3:
08001DB0  2204      3564          move.l  D4,D1
08001DB2  2404      3565          move.l  D4,D2
08001DB4  4842      3566          swap    D2
08001DB6  C2C0      3567          mulu    D0,D1
08001DB8  C4C0      3568          mulu    D0,D2
08001DBA  4842      3569          swap    D2
08001DBC  D282      3570          add.l   D2,D1
08001DBE  9283      3571          sub.l   D3,D1
08001DC0  620A      3572          bhi.s   dodiv_4
08001DC2  4481      3573          neg.l   D1
08001DC4  B881      3574          cmp.l   D1,D4
08001DC6  6208      3575          bhi.s   dodiv_5
08001DC8  5280      3576          addq.l  #1,D0
08001DCA  60E4      3577          bra.s   dodiv_3
                    3578   dodiv_4:
08001DCC  5380      3579          subq.l  #1,D0
08001DCE  60E0      3580          bra.s   dodiv_3
                    3581   dodiv_5:
08001DD0  4CDF 001C 3582          movem.l (A7)+,D2/D3/D4
08001DD4  4E75      3583          rts
                    3584   _scanf:
08001DD6  4E56 FFFC 3585          link      A6,#-4
08001DDA  48E7 2000 3586          movem.l   D2,-(A7)
08001DDE  41EE 0008 3587          lea       8(A6),A0
08001DE2  5848      3588          addq.w    #4,A0
08001DE4  2408      3589          move.l    A0,D2
08001DE6  2F02      3590          move.l    D2,-(A7)
08001DE8  2F2E 0008 3591          move.l    8(A6),-(A7)
08001DEC  42A7      3592          clr.l     -(A7)
08001DEE  6100 02F4 3593          bsr       _vsscanf
08001DF2  DEFC 000C 3594          add.w     #12,A7
08001DF6  2D40 FFFC 3595          move.l    D0,-4(A6)
08001DFA  4282      3596          clr.l     D2
08001DFC  202E FFFC 3597          move.l    -4(A6),D0
08001E00  4CDF 0004 3598          movem.l   (A7)+,D2
08001E04  4E5E      3599          unlk      A6
08001E06  4E75      3600          rts
                    3601   _printf:
08001E08  4E56 FFFC 3602          link      A6,#-4
08001E0C  48E7 2000 3603          movem.l   D2,-(A7)
08001E10  41EE 0008 3604          lea       8(A6),A0
08001E14  5848      3605          addq.w    #4,A0
08001E16  2408      3606          move.l    A0,D2
08001E18  2F02      3607          move.l    D2,-(A7)
08001E1A  2F2E 0008 3608          move.l    8(A6),-(A7)
08001E1E  42A7      3609          clr.l     -(A7)
08001E20  6100 0962 3610          bsr       _vsprintf
08001E24  DEFC 000C 3611          add.w     #12,A7
08001E28  2D40 FFFC 3612          move.l    D0,-4(A6)
08001E2C  4282      3613          clr.l     D2
08001E2E  202E FFFC 3614          move.l    -4(A6),D0
08001E32  4CDF 0004 3615          movem.l   (A7)+,D2
08001E36  4E5E      3616          unlk      A6
08001E38  4E75      3617          rts
                    3618   @vsscanf_scanread:
08001E3A  4E56 FFFC 3619          link      A6,#-4
08001E3E  48E7 0020 3620          movem.l   A2,-(A7)
08001E42  45F9 0800 3621          lea       @vsscanf_bufx,A2
08001E46  3D4A      
08001E48  4AAE 0008 3622          tst.l     8(A6)
08001E4C  6722      3623          beq.s     @vsscanf_scanread_1
08001E4E  206E 0008 3624          move.l    8(A6),A0
08001E52  58AE 0008 3625          addq.l    #4,8(A6)
08001E56  2050      3626          move.l    (A0),A0
08001E58  1010      3627          move.b    (A0),D0
08001E5A  4880      3628          ext.w     D0
08001E5C  48C0      3629          ext.l     D0
08001E5E  2D40 FFFC 3630          move.l    D0,-4(A6)
08001E62  6706      3631          beq.s     @vsscanf_scanread_3
08001E64  202E FFFC 3632          move.l    -4(A6),D0
08001E68  6002      3633          bra.s     @vsscanf_scanread_4
                    3634   @vsscanf_scanread_3:
08001E6A  70FF      3635          moveq     #-1,D0
                    3636   @vsscanf_scanread_4:
08001E6C  6000 0032 3637          bra       @vsscanf_scanread_5
                    3638   @vsscanf_scanread_1:
08001E70  2052      3639          move.l    (A2),A0
08001E72  1010      3640          move.b    (A0),D0
08001E74  6620      3641          bne.s     @vsscanf_scanread_6
08001E76  4879 0800 3642          pea       @vsscanf_buf
08001E7A  3E7A      
08001E7C  6100 100A 3643          bsr       _gets
08001E80  584F      3644          addq.w    #4,A7
08001E82  2480      3645          move.l    D0,(A2)
08001E84  4879 0800 3646          pea       @vsscanf_1
08001E88  3D4E      
08001E8A  4879 0800 3647          pea       @vsscanf_buf
08001E8E  3E7A      
08001E90  6100 1096 3648          bsr       _strcat
08001E94  504F      3649          addq.w    #8,A7
                    3650   @vsscanf_scanread_6:
08001E96  2052      3651          move.l    (A2),A0
08001E98  5292      3652          addq.l    #1,(A2)
08001E9A  1010      3653          move.b    (A0),D0
08001E9C  4880      3654          ext.w     D0
08001E9E  48C0      3655          ext.l     D0
                    3656   @vsscanf_scanread_5:
08001EA0  4CDF 0400 3657          movem.l   (A7)+,A2
08001EA4  4E5E      3658          unlk      A6
08001EA6  4E75      3659          rts
                    3660   @vsscanf_scanputback:
08001EA8  4E56 0000 3661          link      A6,#0
08001EAC  48E7 3000 3662          movem.l   D2/D3,-(A7)
08001EB0  242E 000C 3663          move.l    12(A6),D2
08001EB4  262E 0008 3664          move.l    8(A6),D3
08001EB8  6718      3665          beq.s     @vsscanf_scanputback_1
08001EBA  0C82 FFFF 3666          cmp.l     #-1,D2
08001EBE  FFFF      
08001EC0  670A      3667          beq.s     @vsscanf_scanputback_3
08001EC2  5983      3668          subq.l    #4,D3
08001EC4  2043      3669          move.l    D3,A0
08001EC6  2050      3670          move.l    (A0),A0
08001EC8  1082      3671          move.b    D2,(A0)
08001ECA  6004      3672          bra.s     @vsscanf_scanputback_4
                    3673   @vsscanf_scanputback_3:
08001ECC  2043      3674          move.l    D3,A0
08001ECE  5390      3675          subq.l    #1,(A0)
                    3676   @vsscanf_scanputback_4:
08001ED0  602E      3677          bra.s     @vsscanf_scanputback_6
                    3678   @vsscanf_scanputback_1:
08001ED2  41F9 0800 3679          lea       @vsscanf_buf,A0
08001ED6  3E7A      
08001ED8  2008      3680          move.l    A0,D0
08001EDA  B0B9 0800 3681          cmp.l     @vsscanf_bufx,D0
08001EDE  3D4A      
08001EE0  6610      3682          bne.s     @vsscanf_scanputback_5
08001EE2  4239 0800 3683          clr.b     @vsscanf_buf
08001EE6  3E7A      
08001EE8  2F02      3684          move.l    D2,-(A7)
08001EEA  6100 107E 3685          bsr       _ungetch
08001EEE  584F      3686          addq.w    #4,A7
08001EF0  600E      3687          bra.s     @vsscanf_scanputback_6
                    3688   @vsscanf_scanputback_5:
08001EF2  53B9 0800 3689          subq.l    #1,@vsscanf_bufx
08001EF6  3D4A      
08001EF8  2079 0800 3690          move.l    @vsscanf_bufx,A0
08001EFC  3D4A      
08001EFE  1082      3691          move.b    D2,(A0)
                    3692   @vsscanf_scanputback_6:
08001F00  2002      3693          move.l    D2,D0
08001F02  4CDF 000C 3694          movem.l   (A7)+,D2/D3
08001F06  4E5E      3695          unlk      A6
08001F08  4E75      3696          rts
                    3697   @vsscanf_scanspace:
08001F0A  4E56 0000 3698          link      A6,#0
08001F0E  48E7 2000 3699          movem.l   D2,-(A7)
                    3700   @vsscanf_scanspace_1:
08001F12  2F2E 0008 3701          move.l    8(A6),-(A7)
08001F16  6100 FF22 3702          bsr       @vsscanf_scanread
08001F1A  584F      3703          addq.w    #4,A7
08001F1C  2400      3704          move.l    D0,D2
08001F1E  206E 000C 3705          move.l    12(A6),A0
08001F22  5290      3706          addq.l    #1,(A0)
08001F24  2042      3707          move.l    D2,A0
08001F26  43F9 0800 3708          lea       __ctype,A1
08001F2A  3D50      
08001F2C  1030 9801 3709          move.b    1(A0,A1.L),D0
08001F30  C03C 0010 3710          and.b     #16,D0
08001F34  66DC      3711          bne       @vsscanf_scanspace_1
08001F36  2002      3712          move.l    D2,D0
08001F38  4CDF 0004 3713          movem.l   (A7)+,D2
08001F3C  4E5E      3714          unlk      A6
08001F3E  4E75      3715          rts
                    3716   @vsscanf_scanselect:
08001F40  4E56 0000 3717          link      A6,#0
08001F44  48E7 3F20 3718          movem.l   D2/D3/D4/D5/D6/D7/A2,-(A7)
08001F48  262E 000C 3719          move.l    12(A6),D3
08001F4C  2C2E 0018 3720          move.l    24(A6),D6
08001F50  2E2E 0014 3721          move.l    20(A6),D7
08001F54  2043      3722          move.l    D3,A0
08001F56  1010      3723          move.b    (A0),D0
08001F58  4880      3724          ext.w     D0
08001F5A  48C0      3725          ext.l     D0
08001F5C  0C80 0000 3726          cmp.l     #94,D0
08001F60  005E      
08001F62  6608      3727          bne.s     @vsscanf_scanselect_1
08001F64  347C 0001 3728          move.w    #1,A2
08001F68  5283      3729          addq.l    #1,D3
08001F6A  6004      3730          bra.s     @vsscanf_scanselect_2
                    3731   @vsscanf_scanselect_1:
08001F6C  347C 0000 3732          move.w    #0,A2
                    3733   @vsscanf_scanselect_2:
08001F70  202E 0010 3734          move.l    16(A6),D0
08001F74  53AE 0010 3735          subq.l    #1,16(A6)
08001F78  4A80      3736          tst.l     D0
08001F7A  6700 0108 3737          beq       @vsscanf_scanselect_5
08001F7E  2F2E 0008 3738          move.l    8(A6),-(A7)
08001F82  6100 FEB6 3739          bsr       @vsscanf_scanread
08001F86  584F      3740          addq.w    #4,A7
08001F88  2800      3741          move.l    D0,D4
08001F8A  0C84 FFFF 3742          cmp.l     #-1,D4
08001F8E  FFFF      
08001F90  6604      3743          bne.s     @vsscanf_scanselect_6
08001F92  6000 00F0 3744          bra       @vsscanf_scanselect_5
                    3745   @vsscanf_scanselect_6:
08001F96  206E 001C 3746          move.l    28(A6),A0
08001F9A  5290      3747          addq.l    #1,(A0)
08001F9C  4285      3748          clr.l     D5
08001F9E  4282      3749          clr.l     D2
                    3750   @vsscanf_scanselect_8:
08001FA0  2043      3751          move.l    D3,A0
08001FA2  1030 2800 3752          move.b    0(A0,D2.L),D0
08001FA6  4880      3753          ext.w     D0
08001FA8  48C0      3754          ext.l     D0
08001FAA  0C80 0000 3755          cmp.l     #93,D0
08001FAE  005D      
08001FB0  6700 008E 3756          beq       @vsscanf_scanselect_10
08001FB4  4A82      3757          tst.l     D2
08001FB6  6716      3758          beq.s     @vsscanf_scanselect_11
08001FB8  2043      3759          move.l    D3,A0
08001FBA  1030 2800 3760          move.b    0(A0,D2.L),D0
08001FBE  4880      3761          ext.w     D0
08001FC0  48C0      3762          ext.l     D0
08001FC2  0C80 0000 3763          cmp.l     #93,D0
08001FC6  005D      
08001FC8  6604      3764          bne.s     @vsscanf_scanselect_11
08001FCA  6000 0074 3765          bra       @vsscanf_scanselect_10
                    3766   @vsscanf_scanselect_11:
08001FCE  4A82      3767          tst.l     D2
08001FD0  6700 0058 3768          beq       @vsscanf_scanselect_15
08001FD4  2043      3769          move.l    D3,A0
08001FD6  1030 2800 3770          move.b    0(A0,D2.L),D0
08001FDA  4880      3771          ext.w     D0
08001FDC  48C0      3772          ext.l     D0
08001FDE  0C80 0000 3773          cmp.l     #45,D0
08001FE2  002D      
08001FE4  6600 0044 3774          bne       @vsscanf_scanselect_15
08001FE8  2043      3775          move.l    D3,A0
08001FEA  2002      3776          move.l    D2,D0
08001FEC  5380      3777          subq.l    #1,D0
08001FEE  2243      3778          move.l    D3,A1
08001FF0  2F08      3779          move.l    A0,-(A7)
08001FF2  2042      3780          move.l    D2,A0
08001FF4  1230 0800 3781          move.b    0(A0,D0.L),D1
08001FF8  B230 9801 3782          cmp.b     1(A0,A1.L),D1
08001FFC  6C00 002C 3783          bge       @vsscanf_scanselect_15
08002000  205F      3784          move.l    (A7)+,A0
08002002  2043      3785          move.l    D3,A0
08002004  2002      3786          move.l    D2,D0
08002006  5380      3787          subq.l    #1,D0
08002008  1030 0800 3788          move.b    0(A0,D0.L),D0
0800200C  4880      3789          ext.w     D0
0800200E  48C0      3790          ext.l     D0
08002010  B880      3791          cmp.l     D0,D4
08002012  6D12      3792          blt.s     @vsscanf_scanselect_17
08002014  2043      3793          move.l    D3,A0
08002016  2242      3794          move.l    D2,A1
08002018  1031 8801 3795          move.b    1(A1,A0.L),D0
0800201C  4880      3796          ext.w     D0
0800201E  48C0      3797          ext.l     D0
08002020  B880      3798          cmp.l     D0,D4
08002022  6E02      3799          bgt.s     @vsscanf_scanselect_17
08002024  601A      3800          bra.s     @vsscanf_scanselect_10
                    3801   @vsscanf_scanselect_17:
08002026  5282      3802          addq.l    #1,D2
08002028  6010      3803          bra.s     @vsscanf_scanselect_19
                    3804   @vsscanf_scanselect_15:
0800202A  2043      3805          move.l    D3,A0
0800202C  1030 2800 3806          move.b    0(A0,D2.L),D0
08002030  4880      3807          ext.w     D0
08002032  48C0      3808          ext.l     D0
08002034  B880      3809          cmp.l     D0,D4
08002036  6602      3810          bne.s     @vsscanf_scanselect_19
08002038  6006      3811          bra.s     @vsscanf_scanselect_10
                    3812   @vsscanf_scanselect_19:
0800203A  5282      3813          addq.l    #1,D2
0800203C  6000 FF62 3814          bra       @vsscanf_scanselect_8
                    3815   @vsscanf_scanselect_10:
08002040  4A82      3816          tst.l     D2
08002042  6712      3817          beq.s     @vsscanf_scanselect_23
08002044  2043      3818          move.l    D3,A0
08002046  1030 2800 3819          move.b    0(A0,D2.L),D0
0800204A  4880      3820          ext.w     D0
0800204C  48C0      3821          ext.l     D0
0800204E  0C80 0000 3822          cmp.l     #93,D0
08002052  005D      
08002054  6702      3823          beq.s     @vsscanf_scanselect_21
                    3824   @vsscanf_scanselect_23:
08002056  7A01      3825          moveq     #1,D5
                    3826   @vsscanf_scanselect_21:
08002058  200A      3827          move.l    A2,D0
0800205A  6712      3828          beq.s     @vsscanf_scanselect_24
0800205C  4A85      3829          tst.l     D5
0800205E  660C      3830          bne.s     @vsscanf_scanselect_26
08002060  4A87      3831          tst.l     D7
08002062  6606      3832          bne.s     @vsscanf_scanselect_28
08002064  2046      3833          move.l    D6,A0
08002066  5286      3834          addq.l    #1,D6
08002068  1084      3835          move.b    D4,(A0)
                    3836   @vsscanf_scanselect_28:
0800206A  6014      3837          bra.s     @vsscanf_scanselect_4
                    3838   @vsscanf_scanselect_26:
0800206C  6016      3839          bra.s     @vsscanf_scanselect_5
                    3840   @vsscanf_scanselect_24:
0800206E  4A85      3841          tst.l     D5
08002070  670C      3842          beq.s     @vsscanf_scanselect_30
08002072  4A87      3843          tst.l     D7
08002074  6606      3844          bne.s     @vsscanf_scanselect_32
08002076  2046      3845          move.l    D6,A0
08002078  5286      3846          addq.l    #1,D6
0800207A  1084      3847          move.b    D4,(A0)
                    3848   @vsscanf_scanselect_32:
0800207C  6002      3849          bra.s     @vsscanf_scanselect_4
                    3850   @vsscanf_scanselect_30:
0800207E  6004      3851          bra.s     @vsscanf_scanselect_5
                    3852   @vsscanf_scanselect_4:
08002080  6000 FEEE 3853          bra       @vsscanf_scanselect_2
                    3854   @vsscanf_scanselect_5:
08002084  0C84 FFFF 3855          cmp.l     #-1,D4
08002088  FFFF      
0800208A  6712      3856          beq.s     @vsscanf_scanselect_34
0800208C  2F04      3857          move.l    D4,-(A7)
0800208E  2F2E 0008 3858          move.l    8(A6),-(A7)
08002092  6100 FE14 3859          bsr       @vsscanf_scanputback
08002096  504F      3860          addq.w    #8,A7
08002098  206E 001C 3861          move.l    28(A6),A0
0800209C  5390      3862          subq.l    #1,(A0)
                    3863   @vsscanf_scanselect_34:
0800209E  4A87      3864          tst.l     D7
080020A0  6604      3865          bne.s     @vsscanf_scanselect_36
080020A2  2046      3866          move.l    D6,A0
080020A4  4210      3867          clr.b     (A0)
                    3868   @vsscanf_scanselect_36:
080020A6  5283      3869          addq.l    #1,D3
080020A8  2043      3870          move.l    D3,A0
080020AA  1010      3871          move.b    (A0),D0
080020AC  4880      3872          ext.w     D0
080020AE  48C0      3873          ext.l     D0
080020B0  0C80 0000 3874          cmp.l     #93,D0
080020B4  005D      
080020B6  6702      3875          beq.s     @vsscanf_scanselect_40
080020B8  60EC      3876          bra       @vsscanf_scanselect_36
                    3877   @vsscanf_scanselect_40:
080020BA  5283      3878          addq.l    #1,D3
080020BC  2003      3879          move.l    D3,D0
080020BE  4CDF 04FC 3880          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2
080020C2  4E5E      3881          unlk      A6
080020C4  4E75      3882          rts
                    3883   _scanflush:
080020C6  41F9 0800 3884          lea       @vsscanf_buf,A0
080020CA  3E7A      
080020CC  23C8 0800 3885          move.l    A0,@vsscanf_bufx
080020D0  3D4A      
080020D2  4239 0800 3886          clr.b     @vsscanf_buf
080020D6  3E7A      
080020D8  4878 FFFF 3887          pea       -1
080020DC  6100 0E8C 3888          bsr       _ungetch
080020E0  584F      3889          addq.w    #4,A7
080020E2  4E75      3890          rts
                    3891   _vsscanf:
080020E4  4E56 FF88 3892          link      A6,#-120
080020E8  48E7 3F3C 3893          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
080020EC  47F9 0800 3894          lea       @vsscanf_scanread,A3
080020F0  1E3A      
080020F2  4AAE 0008 3895          tst.l     8(A6)
080020F6  6706      3896          beq.s     vsscanf_1
080020F8  41EE 0008 3897          lea       8(A6),A0
080020FC  6004      3898          bra.s     vsscanf_2
                    3899   vsscanf_1:
080020FE  4280      3900          clr.l     D0
08002100  2040      3901          move.l    D0,A0
                    3902   vsscanf_2:
08002102  2A08      3903          move.l    A0,D5
08002104  42AE FFE4 3904          clr.l     -28(A6)
08002108  4284      3905          clr.l     D4
                    3906   vsscanf_3:
0800210A  206E 000C 3907          move.l    12(A6),A0
0800210E  52AE 000C 3908          addq.l    #1,12(A6)
08002112  1010      3909          move.b    (A0),D0
08002114  4880      3910          ext.w     D0
08002116  48C0      3911          ext.l     D0
08002118  2600      3912          move.l    D0,D3
0800211A  6700 05AC 3913          beq       vsscanf_5
0800211E  4286      3914          clr.l     D6
08002120  387C 0000 3915          move.w    #0,A4
08002124  0C83 0000 3916          cmp.l     #32,D3
08002128  0020      
0800212A  6712      3917          beq.s     vsscanf_8
0800212C  0C83 0000 3918          cmp.l     #9,D3
08002130  0009      
08002132  670A      3919          beq.s     vsscanf_8
08002134  0C83 0000 3920          cmp.l     #10,D3
08002138  000A      
0800213A  6600 0048 3921          bne       vsscanf_6
                    3922   vsscanf_8:
0800213E  2F05      3923          move.l    D5,-(A7)
08002140  4E93      3924          jsr       (A3)
08002142  584F      3925          addq.w    #4,A7
08002144  2400      3926          move.l    D0,D2
08002146  52AE FFE4 3927          addq.l    #1,-28(A6)
0800214A  0C82 FFFF 3928          cmp.l     #-1,D2
0800214E  FFFF      
08002150  660E      3929          bne.s     vsscanf_11
08002152  4A84      3930          tst.l     D4
08002154  6704      3931          beq.s     vsscanf_13
08002156  2004      3932          move.l    D4,D0
08002158  6002      3933          bra.s     vsscanf_14
                    3934   vsscanf_13:
0800215A  70FF      3935          moveq     #-1,D0
                    3936   vsscanf_14:
0800215C  6000 056C 3937          bra       vsscanf_15
                    3938   vsscanf_11:
08002160  2042      3939          move.l    D2,A0
08002162  43F9 0800 3940          lea       __ctype,A1
08002166  3D50      
08002168  1030 9801 3941          move.b    1(A0,A1.L),D0
0800216C  C03C 0010 3942          and.b     #16,D0
08002170  66CC      3943          bne       vsscanf_8
08002172  53AE FFE4 3944          subq.l    #1,-28(A6)
08002176  2F02      3945          move.l    D2,-(A7)
08002178  2F05      3946          move.l    D5,-(A7)
0800217A  6100 FD2C 3947          bsr       @vsscanf_scanputback
0800217E  504F      3948          addq.w    #8,A7
08002180  6000 0542 3949          bra       vsscanf_139
                    3950   vsscanf_6:
08002184  0C83 0000 3951          cmp.l     #37,D3
08002188  0025      
0800218A  6600 0502 3952          bne       vsscanf_127
0800218E  206E 000C 3953          move.l    12(A6),A0
08002192  52AE 000C 3954          addq.l    #1,12(A6)
08002196  1010      3955          move.b    (A0),D0
08002198  4880      3956          ext.w     D0
0800219A  48C0      3957          ext.l     D0
0800219C  2600      3958          move.l    D0,D3
0800219E  42AE FFEC 3959          clr.l     -20(A6)
080021A2  4286      3960          clr.l     D6
080021A4  42AE FFE8 3961          clr.l     -24(A6)
080021A8  347C 7FFF 3962          move.w    #32767,A2
080021AC  0C83 0000 3963          cmp.l     #42,D3
080021B0  002A      
080021B2  6612      3964          bne.s     vsscanf_18
080021B4  7C01      3965          moveq     #1,D6
080021B6  206E 000C 3966          move.l    12(A6),A0
080021BA  52AE 000C 3967          addq.l    #1,12(A6)
080021BE  1010      3968          move.b    (A0),D0
080021C0  4880      3969          ext.w     D0
080021C2  48C0      3970          ext.l     D0
080021C4  2600      3971          move.l    D0,D3
                    3972   vsscanf_18:
080021C6  2043      3973          move.l    D3,A0
080021C8  43F9 0800 3974          lea       __ctype,A1
080021CC  3D50      
080021CE  1030 9801 3975          move.b    1(A0,A1.L),D0
080021D2  C03C 0004 3976          and.b     #4,D0
080021D6  6700 004E 3977          beq       vsscanf_24
080021DA  2003      3978          move.l    D3,D0
080021DC  0480 0000 3979          sub.l     #48,D0
080021E0  0030      
080021E2  2440      3980          move.l    D0,A2
                    3981   vsscanf_22:
080021E4  206E 000C 3982          move.l    12(A6),A0
080021E8  52AE 000C 3983          addq.l    #1,12(A6)
080021EC  1010      3984          move.b    (A0),D0
080021EE  4880      3985          ext.w     D0
080021F0  48C0      3986          ext.l     D0
080021F2  2600      3987          move.l    D0,D3
080021F4  2040      3988          move.l    D0,A0
080021F6  43F9 0800 3989          lea       __ctype,A1
080021FA  3D50      
080021FC  1030 9801 3990          move.b    1(A0,A1.L),D0
08002200  C0BC 0000 3991          and.l     #255,D0
08002204  00FF      
08002206  C0BC 0000 3992          and.l     #4,D0
0800220A  0004      
0800220C  6718      3993          beq.s     vsscanf_24
0800220E  70D0      3994          moveq     #-48,D0
08002210  2F0A      3995          move.l    A2,-(A7)
08002212  4878 000A 3996          pea       10
08002216  6100 0BE2 3997          bsr       LMUL
0800221A  2217      3998          move.l    (A7),D1
0800221C  504F      3999          addq.w    #8,A7
0800221E  D283      4000          add.l     D3,D1
08002220  D081      4001          add.l     D1,D0
08002222  2440      4002          move.l    D0,A2
08002224  60BE      4003          bra       vsscanf_22
                    4004   vsscanf_24:
08002226  0C83 0000 4005          cmp.l     #108,D3
0800222A  006C      
0800222C  6708      4006          beq.s     vsscanf_27
0800222E  0C83 0000 4007          cmp.l     #76,D3
08002232  004C      
08002234  661A      4008          bne.s     vsscanf_25
                    4009   vsscanf_27:
08002236  2D7C 0000 4010          move.l    #1,-24(A6)
0800223A  0001 FFE8 
0800223E  206E 000C 4011          move.l    12(A6),A0
08002242  52AE 000C 4012          addq.l    #1,12(A6)
08002246  1010      4013          move.b    (A0),D0
08002248  4880      4014          ext.w     D0
0800224A  48C0      4015          ext.l     D0
0800224C  2600      4016          move.l    D0,D3
0800224E  6020      4017          bra.s     vsscanf_28
                    4018   vsscanf_25:
08002250  0C83 0000 4019          cmp.l     #104,D3
08002254  0068      
08002256  6618      4020          bne.s     vsscanf_28
08002258  2D7C 0000 4021          move.l    #1,-20(A6)
0800225C  0001 FFEC 
08002260  206E 000C 4022          move.l    12(A6),A0
08002264  52AE 000C 4023          addq.l    #1,12(A6)
08002268  1010      4024          move.b    (A0),D0
0800226A  4880      4025          ext.w     D0
0800226C  48C0      4026          ext.l     D0
0800226E  2600      4027          move.l    D0,D3
                    4028   vsscanf_28:
08002270  0C83 0000 4029          cmp.l     #91,D3
08002274  005B      
08002276  6600 0036 4030          bne       vsscanf_30
0800227A  4A86      4031          tst.l     D6
0800227C  660A      4032          bne.s     vsscanf_32
0800227E  206E 0010 4033          move.l    16(A6),A0
08002282  58AE 0010 4034          addq.l    #4,16(A6)
08002286  2E10      4035          move.l    (A0),D7
                    4036   vsscanf_32:
08002288  486E FFE4 4037          pea       -28(A6)
0800228C  2F07      4038          move.l    D7,-(A7)
0800228E  2F06      4039          move.l    D6,-(A7)
08002290  2F0A      4040          move.l    A2,-(A7)
08002292  2F2E 000C 4041          move.l    12(A6),-(A7)
08002296  2F05      4042          move.l    D5,-(A7)
08002298  6100 FCA6 4043          bsr       @vsscanf_scanselect
0800229C  DEFC 0018 4044          add.w     #24,A7
080022A0  2D40 000C 4045          move.l    D0,12(A6)
080022A4  4A86      4046          tst.l     D6
080022A6  6602      4047          bne.s     vsscanf_34
080022A8  5284      4048          addq.l    #1,D4
                    4049   vsscanf_34:
080022AA  6000 0418 4050          bra       vsscanf_139
                    4051   vsscanf_30:
080022AE  0C83 0000 4052          cmp.l     #110,D3
080022B2  006E      
080022B4  661A      4053          bne.s     vsscanf_36
080022B6  4A86      4054          tst.l     D6
080022B8  6612      4055          bne.s     vsscanf_38
080022BA  206E 0010 4056          move.l    16(A6),A0
080022BE  58AE 0010 4057          addq.l    #4,16(A6)
080022C2  2E10      4058          move.l    (A0),D7
080022C4  2047      4059          move.l    D7,A0
080022C6  20AE FFE4 4060          move.l    -28(A6),(A0)
080022CA  5284      4061          addq.l    #1,D4
                    4062   vsscanf_38:
080022CC  6000 03F6 4063          bra       vsscanf_139
                    4064   vsscanf_36:
080022D0  0C83 0000 4065          cmp.l     #115,D3
080022D4  0073      
080022D6  6600 00AC 4066          bne       vsscanf_40
080022DA  486E FFE4 4067          pea       -28(A6)
080022DE  2F05      4068          move.l    D5,-(A7)
080022E0  6100 FC28 4069          bsr       @vsscanf_scanspace
080022E4  504F      4070          addq.w    #8,A7
080022E6  2400      4071          move.l    D0,D2
080022E8  4A86      4072          tst.l     D6
080022EA  660A      4073          bne.s     vsscanf_42
080022EC  206E 0010 4074          move.l    16(A6),A0
080022F0  58AE 0010 4075          addq.l    #4,16(A6)
080022F4  2E10      4076          move.l    (A0),D7
                    4077   vsscanf_42:
080022F6  52AE FFE4 4078          addq.l    #1,-28(A6)
                    4079   vsscanf_44:
080022FA  200A      4080          move.l    A2,D0
080022FC  534A      4081          subq.w    #1,A2
080022FE  4A80      4082          tst.l     D0
08002300  6700 0038 4083          beq       vsscanf_46
08002304  2042      4084          move.l    D2,A0
08002306  43F9 0800 4085          lea       __ctype,A1
0800230A  3D50      
0800230C  1030 9801 4086          move.b    1(A0,A1.L),D0
08002310  C03C 0010 4087          and.b     #16,D0
08002314  6624      4088          bne.s     vsscanf_46
08002316  0C82 FFFF 4089          cmp.l     #-1,D2
0800231A  FFFF      
0800231C  671C      4090          beq.s     vsscanf_46
0800231E  387C 0001 4091          move.w    #1,A4
08002322  4A86      4092          tst.l     D6
08002324  6606      4093          bne.s     vsscanf_47
08002326  2047      4094          move.l    D7,A0
08002328  5287      4095          addq.l    #1,D7
0800232A  1082      4096          move.b    D2,(A0)
                    4097   vsscanf_47:
0800232C  2F05      4098          move.l    D5,-(A7)
0800232E  4E93      4099          jsr       (A3)
08002330  584F      4100          addq.w    #4,A7
08002332  2400      4101          move.l    D0,D2
08002334  52AE FFE4 4102          addq.l    #1,-28(A6)
08002338  60C0      4103          bra       vsscanf_44
                    4104   vsscanf_46:
0800233A  4A86      4105          tst.l     D6
0800233C  660A      4106          bne.s     vsscanf_51
0800233E  2047      4107          move.l    D7,A0
08002340  4210      4108          clr.b     (A0)
08002342  200C      4109          move.l    A4,D0
08002344  6702      4110          beq.s     vsscanf_51
08002346  5284      4111          addq.l    #1,D4
                    4112   vsscanf_51:
08002348  0C82 FFFF 4113          cmp.l     #-1,D2
0800234C  FFFF      
0800234E  6708      4114          beq.s     vsscanf_55
08002350  4A86      4115          tst.l     D6
08002352  661E      4116          bne.s     vsscanf_53
08002354  200C      4117          move.l    A4,D0
08002356  661A      4118          bne.s     vsscanf_53
                    4119   vsscanf_55:
08002358  4A84      4120          tst.l     D4
0800235A  6704      4121          beq.s     vsscanf_56
0800235C  2004      4122          move.l    D4,D0
0800235E  600E      4123          bra.s     vsscanf_59
                    4124   vsscanf_56:
08002360  0C82 FFFF 4125          cmp.l     #-1,D2
08002364  FFFF      
08002366  6604      4126          bne.s     vsscanf_58
08002368  70FF      4127          moveq     #-1,D0
0800236A  6002      4128          bra.s     vsscanf_59
                    4129   vsscanf_58:
0800236C  2004      4130          move.l    D4,D0
                    4131   vsscanf_59:
0800236E  6000 035A 4132          bra       vsscanf_15
                    4133   vsscanf_53:
08002372  53AE FFE4 4134          subq.l    #1,-28(A6)
08002376  2F02      4135          move.l    D2,-(A7)
08002378  2F05      4136          move.l    D5,-(A7)
0800237A  6100 FB2C 4137          bsr       @vsscanf_scanputback
0800237E  504F      4138          addq.w    #8,A7
08002380  6000 0342 4139          bra       vsscanf_139
                    4140   vsscanf_40:
08002384  0C83 0000 4141          cmp.l     #99,D3
08002388  0063      
0800238A  6600 008E 4142          bne       vsscanf_60
0800238E  4A86      4143          tst.l     D6
08002390  660A      4144          bne.s     vsscanf_62
08002392  206E 0010 4145          move.l    16(A6),A0
08002396  58AE 0010 4146          addq.l    #4,16(A6)
0800239A  2E10      4147          move.l    (A0),D7
                    4148   vsscanf_62:
0800239C  2F05      4149          move.l    D5,-(A7)
0800239E  4E93      4150          jsr       (A3)
080023A0  584F      4151          addq.w    #4,A7
080023A2  2400      4152          move.l    D0,D2
080023A4  52AE FFE4 4153          addq.l    #1,-28(A6)
080023A8  200A      4154          move.l    A2,D0
080023AA  0C80 0000 4155          cmp.l     #32767,D0
080023AE  7FFF      
080023B0  6604      4156          bne.s     vsscanf_64
080023B2  347C 0001 4157          move.w    #1,A2
                    4158   vsscanf_64:
080023B6  0C82 FFFF 4159          cmp.l     #-1,D2
080023BA  FFFF      
080023BC  6606      4160          bne.s     vsscanf_66
080023BE  4A86      4161          tst.l     D6
080023C0  6602      4162          bne.s     vsscanf_66
080023C2  5384      4163          subq.l    #1,D4
                    4164   vsscanf_66:
080023C4  200A      4165          move.l    A2,D0
080023C6  534A      4166          subq.w    #1,A2
080023C8  4A80      4167          tst.l     D0
080023CA  6720      4168          beq.s     vsscanf_70
080023CC  0C82 FFFF 4169          cmp.l     #-1,D2
080023D0  FFFF      
080023D2  6718      4170          beq.s     vsscanf_70
080023D4  4A86      4171          tst.l     D6
080023D6  6606      4172          bne.s     vsscanf_71
080023D8  2047      4173          move.l    D7,A0
080023DA  5287      4174          addq.l    #1,D7
080023DC  1082      4175          move.b    D2,(A0)
                    4176   vsscanf_71:
080023DE  2F05      4177          move.l    D5,-(A7)
080023E0  4E93      4178          jsr       (A3)
080023E2  584F      4179          addq.w    #4,A7
080023E4  2400      4180          move.l    D0,D2
080023E6  52AE FFE4 4181          addq.l    #1,-28(A6)
080023EA  60D8      4182          bra       vsscanf_66
                    4183   vsscanf_70:
080023EC  0C82 FFFF 4184          cmp.l     #-1,D2
080023F0  FFFF      
080023F2  660E      4185          bne.s     vsscanf_73
080023F4  4A84      4186          tst.l     D4
080023F6  6704      4187          beq.s     vsscanf_75
080023F8  2004      4188          move.l    D4,D0
080023FA  6002      4189          bra.s     vsscanf_76
                    4190   vsscanf_75:
080023FC  70FF      4191          moveq     #-1,D0
                    4192   vsscanf_76:
080023FE  6000 02CA 4193          bra       vsscanf_15
                    4194   vsscanf_73:
08002402  4A86      4195          tst.l     D6
08002404  6602      4196          bne.s     vsscanf_77
08002406  5284      4197          addq.l    #1,D4
                    4198   vsscanf_77:
08002408  53AE FFE4 4199          subq.l    #1,-28(A6)
0800240C  2F02      4200          move.l    D2,-(A7)
0800240E  2F05      4201          move.l    D5,-(A7)
08002410  6100 FA96 4202          bsr       @vsscanf_scanputback
08002414  504F      4203          addq.w    #8,A7
08002416  6000 02AC 4204          bra       vsscanf_139
                    4205   vsscanf_60:
0800241A  0C83 0000 4206          cmp.l     #105,D3
0800241E  0069      
08002420  6600 0060 4207          bne       vsscanf_82
08002424  486E FFE4 4208          pea       -28(A6)
08002428  2F05      4209          move.l    D5,-(A7)
0800242A  6100 FADE 4210          bsr       @vsscanf_scanspace
0800242E  504F      4211          addq.w    #8,A7
08002430  2400      4212          move.l    D0,D2
08002432  0C82 0000 4213          cmp.l     #48,D2
08002436  0030      
08002438  6600 0038 4214          bne       vsscanf_81
0800243C  387C 0001 4215          move.w    #1,A4
08002440  2F05      4216          move.l    D5,-(A7)
08002442  4E93      4217          jsr       (A3)
08002444  584F      4218          addq.w    #4,A7
08002446  2400      4219          move.l    D0,D2
08002448  2F02      4220          move.l    D2,-(A7)
0800244A  6100 0AB0 4221          bsr       _tolower
0800244E  584F      4222          addq.w    #4,A7
08002450  0C80 0000 4223          cmp.l     #120,D0
08002454  0078      
08002456  6604      4224          bne.s     vsscanf_83
08002458  7678      4225          moveq     #120,D3
0800245A  6010      4226          bra.s     vsscanf_84
                    4227   vsscanf_83:
0800245C  53AE FFE4 4228          subq.l    #1,-28(A6)
08002460  2F02      4229          move.l    D2,-(A7)
08002462  2F05      4230          move.l    D5,-(A7)
08002464  6100 FA42 4231          bsr       @vsscanf_scanputback
08002468  504F      4232          addq.w    #8,A7
0800246A  766F      4233          moveq     #111,D3
                    4234   vsscanf_84:
0800246C  52AE FFE4 4235          addq.l    #1,-28(A6)
08002470  6010      4236          bra.s     vsscanf_82
                    4237   vsscanf_81:
08002472  53AE FFE4 4238          subq.l    #1,-28(A6)
08002476  2F02      4239          move.l    D2,-(A7)
08002478  2F05      4240          move.l    D5,-(A7)
0800247A  6100 FA2C 4241          bsr       @vsscanf_scanputback
0800247E  504F      4242          addq.w    #8,A7
08002480  7664      4243          moveq     #100,D3
                    4244   vsscanf_82:
08002482  0C83 0000 4245          cmp.l     #100,D3
08002486  0064      
08002488  671A      4246          beq.s     vsscanf_87
0800248A  0C83 0000 4247          cmp.l     #117,D3
0800248E  0075      
08002490  6712      4248          beq.s     vsscanf_87
08002492  0C83 0000 4249          cmp.l     #120,D3
08002496  0078      
08002498  670A      4250          beq.s     vsscanf_87
0800249A  0C83 0000 4251          cmp.l     #111,D3
0800249E  006F      
080024A0  6600 01A4 4252          bne       vsscanf_85
                    4253   vsscanf_87:
080024A4  486E FFE4 4254          pea       -28(A6)
080024A8  2F05      4255          move.l    D5,-(A7)
080024AA  6100 FA5E 4256          bsr       @vsscanf_scanspace
080024AE  504F      4257          addq.w    #8,A7
080024B0  2400      4258          move.l    D0,D2
080024B2  2D7C 0000 4259          move.l    #10,-4(A6)
080024B6  000A FFFC 
080024BA  0C83 0000 4260          cmp.l     #120,D3
080024BE  0078      
080024C0  6608      4261          bne.s     vsscanf_88
080024C2  2D7C 0000 4262          move.l    #16,-4(A6)
080024C6  0010 FFFC 
                    4263   vsscanf_88:
080024CA  0C83 0000 4264          cmp.l     #111,D3
080024CE  006F      
080024D0  6608      4265          bne.s     vsscanf_90
080024D2  2D7C 0000 4266          move.l    #8,-4(A6)
080024D6  0008 FFFC 
                    4267   vsscanf_90:
080024DA  4A86      4268          tst.l     D6
080024DC  660A      4269          bne.s     vsscanf_92
080024DE  206E 0010 4270          move.l    16(A6),A0
080024E2  58AE 0010 4271          addq.l    #4,16(A6)
080024E6  2E10      4272          move.l    (A0),D7
                    4273   vsscanf_92:
080024E8  42AE FFE0 4274          clr.l     -32(A6)
080024EC  52AE FFE4 4275          addq.l    #1,-28(A6)
080024F0  0C83 0000 4276          cmp.l     #117,D3
080024F4  0075      
080024F6  6720      4277          beq.s     vsscanf_94
080024F8  0C82 0000 4278          cmp.l     #45,D2
080024FC  002D      
080024FE  6618      4279          bne.s     vsscanf_94
08002500  2F05      4280          move.l    D5,-(A7)
08002502  4E93      4281          jsr       (A3)
08002504  584F      4282          addq.w    #4,A7
08002506  2400      4283          move.l    D0,D2
08002508  52AE FFE4 4284          addq.l    #1,-28(A6)
0800250C  2D7C 0000 4285          move.l    #1,-32(A6)
08002510  0001 FFE0 
08002514  387C 0001 4286          move.w    #1,A4
                    4287   vsscanf_94:
08002518  3A7C 0000 4288          move.w    #0,A5
0800251C  0C82 FFFF 4289          cmp.l     #-1,D2
08002520  FFFF      
08002522  660E      4290          bne.s     vsscanf_96
08002524  4A84      4291          tst.l     D4
08002526  6704      4292          beq.s     vsscanf_98
08002528  2004      4293          move.l    D4,D0
0800252A  6002      4294          bra.s     vsscanf_99
                    4295   vsscanf_98:
0800252C  70FF      4296          moveq     #-1,D0
                    4297   vsscanf_99:
0800252E  6000 019A 4298          bra       vsscanf_15
                    4299   vsscanf_96:
08002532  200A      4300          move.l    A2,D0
08002534  534A      4301          subq.w    #1,A2
08002536  4A80      4302          tst.l     D0
08002538  6700 0090 4303          beq       vsscanf_102
0800253C  0C83 0000 4304          cmp.l     #120,D3
08002540  0078      
08002542  6620      4305          bne.s     vsscanf_104
08002544  2F02      4306          move.l    D2,-(A7)
08002546  6100 09F6 4307          bsr       _toupper
0800254A  584F      4308          addq.w    #4,A7
0800254C  0C80 0000 4309          cmp.l     #65,D0
08002550  0041      
08002552  6D10      4310          blt.s     vsscanf_104
08002554  2F02      4311          move.l    D2,-(A7)
08002556  6100 09E6 4312          bsr       _toupper
0800255A  584F      4313          addq.w    #4,A7
0800255C  0C80 0000 4314          cmp.l     #70,D0
08002560  0046      
08002562  6F14      4315          ble.s     vsscanf_103
                    4316   vsscanf_104:
08002564  2042      4317          move.l    D2,A0
08002566  43F9 0800 4318          lea       __ctype,A1
0800256A  3D50      
0800256C  1030 9801 4319          move.b    1(A0,A1.L),D0
08002570  C03C 0004 4320          and.b     #4,D0
08002574  6700 0054 4321          beq       vsscanf_102
                    4322   vsscanf_103:
08002578  2042      4323          move.l    D2,A0
0800257A  43F9 0800 4324          lea       __ctype,A1
0800257E  3D50      
08002580  1030 9801 4325          move.b    1(A0,A1.L),D0
08002584  C03C 0004 4326          and.b     #4,D0
08002588  6614      4327          bne.s     vsscanf_105
0800258A  70F9      4328          moveq     #-7,D0
0800258C  2F00      4329          move.l    D0,-(A7)
0800258E  2F02      4330          move.l    D2,-(A7)
08002590  6100 09AC 4331          bsr       _toupper
08002594  584F      4332          addq.w    #4,A7
08002596  2200      4333          move.l    D0,D1
08002598  201F      4334          move.l    (A7)+,D0
0800259A  D081      4335          add.l     D1,D0
0800259C  2400      4336          move.l    D0,D2
                    4337   vsscanf_105:
0800259E  2F0D      4338          move.l    A5,-(A7)
080025A0  2F2E FFFC 4339          move.l    -4(A6),-(A7)
080025A4  6100 0854 4340          bsr       LMUL
080025A8  2017      4341          move.l    (A7),D0
080025AA  504F      4342          addq.w    #8,A7
080025AC  D082      4343          add.l     D2,D0
080025AE  0480 0000 4344          sub.l     #48,D0
080025B2  0030      
080025B4  2A40      4345          move.l    D0,A5
080025B6  2F05      4346          move.l    D5,-(A7)
080025B8  4E93      4347          jsr       (A3)
080025BA  584F      4348          addq.w    #4,A7
080025BC  2400      4349          move.l    D0,D2
080025BE  52AE FFE4 4350          addq.l    #1,-28(A6)
080025C2  387C 0001 4351          move.w    #1,A4
080025C6  6000 FF6A 4352          bra       vsscanf_96
                    4353   vsscanf_102:
080025CA  0C82 FFFF 4354          cmp.l     #-1,D2
080025CE  FFFF      
080025D0  671A      4355          beq.s     vsscanf_107
080025D2  2F02      4356          move.l    D2,-(A7)
080025D4  2F05      4357          move.l    D5,-(A7)
080025D6  6100 F8D0 4358          bsr       @vsscanf_scanputback
080025DA  504F      4359          addq.w    #8,A7
080025DC  53AE FFE4 4360          subq.l    #1,-28(A6)
080025E0  200C      4361          move.l    A4,D0
080025E2  6606      4362          bne.s     vsscanf_109
080025E4  2004      4363          move.l    D4,D0
080025E6  6000 00E2 4364          bra       vsscanf_15
                    4365   vsscanf_109:
080025EA  6012      4366          bra.s     vsscanf_111
                    4367   vsscanf_107:
080025EC  200C      4368          move.l    A4,D0
080025EE  660E      4369          bne.s     vsscanf_111
080025F0  4A84      4370          tst.l     D4
080025F2  6704      4371          beq.s     vsscanf_113
080025F4  2004      4372          move.l    D4,D0
080025F6  6002      4373          bra.s     vsscanf_114
                    4374   vsscanf_113:
080025F8  70FF      4375          moveq     #-1,D0
                    4376   vsscanf_114:
080025FA  6000 00CE 4377          bra       vsscanf_15
                    4378   vsscanf_111:
080025FE  4AAE FFE0 4379          tst.l     -32(A6)
08002602  6706      4380          beq.s     vsscanf_115
08002604  200D      4381          move.l    A5,D0
08002606  4480      4382          neg.l     D0
08002608  2A40      4383          move.l    D0,A5
                    4384   vsscanf_115:
0800260A  4A86      4385          tst.l     D6
0800260C  661E      4386          bne.s     vsscanf_117
0800260E  4AAE FFE8 4387          tst.l     -24(A6)
08002612  6706      4388          beq.s     vsscanf_119
08002614  2047      4389          move.l    D7,A0
08002616  208D      4390          move.l    A5,(A0)
08002618  6010      4391          bra.s     vsscanf_122
                    4392   vsscanf_119:
0800261A  4AAE FFEC 4393          tst.l     -20(A6)
0800261E  6706      4394          beq.s     vsscanf_121
08002620  2047      4395          move.l    D7,A0
08002622  308D      4396          move.w    A5,(A0)
08002624  6004      4397          bra.s     vsscanf_122
                    4398   vsscanf_121:
08002626  2047      4399          move.l    D7,A0
08002628  208D      4400          move.l    A5,(A0)
                    4401   vsscanf_122:
0800262A  5284      4402          addq.l    #1,D4
                    4403   vsscanf_117:
0800262C  0C82 FFFF 4404          cmp.l     #-1,D2
08002630  FFFF      
08002632  660E      4405          bne.s     vsscanf_123
08002634  4A84      4406          tst.l     D4
08002636  6704      4407          beq.s     vsscanf_125
08002638  2004      4408          move.l    D4,D0
0800263A  6002      4409          bra.s     vsscanf_126
                    4410   vsscanf_125:
0800263C  70FF      4411          moveq     #-1,D0
                    4412   vsscanf_126:
0800263E  6000 008A 4413          bra       vsscanf_15
                    4414   vsscanf_123:
08002642  6000 0080 4415          bra       vsscanf_139
                    4416   vsscanf_85:
08002646  0C83 0000 4417          cmp.l     #37,D3
0800264A  0025      
0800264C  6600 0040 4418          bne       vsscanf_127
08002650  2F05      4419          move.l    D5,-(A7)
08002652  4E93      4420          jsr       (A3)
08002654  584F      4421          addq.w    #4,A7
08002656  2400      4422          move.l    D0,D2
08002658  0C82 FFFF 4423          cmp.l     #-1,D2
0800265C  FFFF      
0800265E  660E      4424          bne.s     vsscanf_129
08002660  4A84      4425          tst.l     D4
08002662  6704      4426          beq.s     vsscanf_131
08002664  2004      4427          move.l    D4,D0
08002666  6002      4428          bra.s     vsscanf_132
                    4429   vsscanf_131:
08002668  70FF      4430          moveq     #-1,D0
                    4431   vsscanf_132:
0800266A  6000 005E 4432          bra       vsscanf_15
                    4433   vsscanf_129:
0800266E  52AE FFE4 4434          addq.l    #1,-28(A6)
08002672  B483      4435          cmp.l     D3,D2
08002674  6714      4436          beq.s     vsscanf_133
08002676  2F02      4437          move.l    D2,-(A7)
08002678  2F05      4438          move.l    D5,-(A7)
0800267A  6100 F82C 4439          bsr       @vsscanf_scanputback
0800267E  504F      4440          addq.w    #8,A7
08002680  53AE FFE4 4441          subq.l    #1,-28(A6)
08002684  2004      4442          move.l    D4,D0
08002686  6000 0042 4443          bra       vsscanf_15
                    4444   vsscanf_133:
0800268A  6000 0038 4445          bra       vsscanf_139
                    4446   vsscanf_127:
0800268E  2F05      4447          move.l    D5,-(A7)
08002690  4E93      4448          jsr       (A3)
08002692  584F      4449          addq.w    #4,A7
08002694  2400      4450          move.l    D0,D2
08002696  52AE FFE4 4451          addq.l    #1,-28(A6)
0800269A  0C82 FFFF 4452          cmp.l     #-1,D2
0800269E  FFFF      
080026A0  660C      4453          bne.s     vsscanf_135
080026A2  4A84      4454          tst.l     D4
080026A4  6704      4455          beq.s     vsscanf_137
080026A6  2004      4456          move.l    D4,D0
080026A8  6002      4457          bra.s     vsscanf_138
                    4458   vsscanf_137:
080026AA  70FF      4459          moveq     #-1,D0
                    4460   vsscanf_138:
080026AC  601C      4461          bra.s     vsscanf_15
                    4462   vsscanf_135:
080026AE  B483      4463          cmp.l     D3,D2
080026B0  6712      4464          beq.s     vsscanf_139
080026B2  2F02      4465          move.l    D2,-(A7)
080026B4  2F05      4466          move.l    D5,-(A7)
080026B6  6100 F7F0 4467          bsr       @vsscanf_scanputback
080026BA  504F      4468          addq.w    #8,A7
080026BC  53AE FFE4 4469          subq.l    #1,-28(A6)
080026C0  2004      4470          move.l    D4,D0
080026C2  6006      4471          bra.s     vsscanf_15
                    4472   vsscanf_139:
080026C4  6000 FA44 4473          bra       vsscanf_3
                    4474   vsscanf_5:
080026C8  2004      4475          move.l    D4,D0
                    4476   vsscanf_15:
080026CA  4CDF 3CFC 4477          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
080026CE  4E5E      4478          unlk      A6
080026D0  4E75      4479          rts
                    4480   @vsprintf_copy:
080026D2  4E56 0000 4481          link      A6,#0
080026D6  206E 0008 4482          move.l    8(A6),A0
080026DA  4A90      4483          tst.l     (A0)
080026DC  6710      4484          beq.s     @vsprintf_copy_1
080026DE  202E 000C 4485          move.l    12(A6),D0
080026E2  206E 0008 4486          move.l    8(A6),A0
080026E6  2250      4487          move.l    (A0),A1
080026E8  5290      4488          addq.l    #1,(A0)
080026EA  1280      4489          move.b    D0,(A1)
080026EC  600A      4490          bra.s     @vsprintf_copy_2
                    4491   @vsprintf_copy_1:
080026EE  2F2E 000C 4492          move.l    12(A6),-(A7)
080026F2  6100 09F4 4493          bsr       _putch
080026F6  584F      4494          addq.w    #4,A7
                    4495   @vsprintf_copy_2:
080026F8  4E5E      4496          unlk      A6
080026FA  4E75      4497          rts
                    4498   @vsprintf_getval:
080026FC  4E56 0000 4499          link      A6,#0
08002700  48E7 3000 4500          movem.l   D2/D3,-(A7)
08002704  242E 0008 4501          move.l    8(A6),D2
08002708  4283      4502          clr.l     D3
0800270A  2042      4503          move.l    D2,A0
0800270C  2050      4504          move.l    (A0),A0
0800270E  1010      4505          move.b    (A0),D0
08002710  4880      4506          ext.w     D0
08002712  48C0      4507          ext.l     D0
08002714  0C80 0000 4508          cmp.l     #42,D0
08002718  002A      
0800271A  6612      4509          bne.s     @vsprintf_getval_1
0800271C  206E 000C 4510          move.l    12(A6),A0
08002720  2250      4511          move.l    (A0),A1
08002722  5890      4512          addq.l    #4,(A0)
08002724  2611      4513          move.l    (A1),D3
08002726  2042      4514          move.l    D2,A0
08002728  5290      4515          addq.l    #1,(A0)
0800272A  6000 004E 4516          bra       @vsprintf_getval_5
                    4517   @vsprintf_getval_1:
0800272E  2042      4518          move.l    D2,A0
08002730  2050      4519          move.l    (A0),A0
08002732  1010      4520          move.b    (A0),D0
08002734  4880      4521          ext.w     D0
08002736  48C0      4522          ext.l     D0
08002738  0C80 0000 4523          cmp.l     #48,D0
0800273C  0030      
0800273E  6D00 003A 4524          blt       @vsprintf_getval_5
08002742  2042      4525          move.l    D2,A0
08002744  2050      4526          move.l    (A0),A0
08002746  1010      4527          move.b    (A0),D0
08002748  4880      4528          ext.w     D0
0800274A  48C0      4529          ext.l     D0
0800274C  0C80 0000 4530          cmp.l     #57,D0
08002750  0039      
08002752  6E26      4531          bgt.s     @vsprintf_getval_5
08002754  2F03      4532          move.l    D3,-(A7)
08002756  4878 000A 4533          pea       10
0800275A  6100 069E 4534          bsr       LMUL
0800275E  2017      4535          move.l    (A7),D0
08002760  504F      4536          addq.w    #8,A7
08002762  2042      4537          move.l    D2,A0
08002764  2250      4538          move.l    (A0),A1
08002766  5290      4539          addq.l    #1,(A0)
08002768  1211      4540          move.b    (A1),D1
0800276A  4881      4541          ext.w     D1
0800276C  48C1      4542          ext.l     D1
0800276E  D081      4543          add.l     D1,D0
08002770  0480 0000 4544          sub.l     #48,D0
08002774  0030      
08002776  2600      4545          move.l    D0,D3
08002778  60B4      4546          bra       @vsprintf_getval_1
                    4547   @vsprintf_getval_5:
0800277A  2003      4548          move.l    D3,D0
0800277C  4CDF 000C 4549          movem.l   (A7)+,D2/D3
08002780  4E5E      4550          unlk      A6
08002782  4E75      4551          rts
                    4552   _vsprintf:
08002784  4E56 FFCC 4553          link      A6,#-52
08002788  48E7 3F3C 4554          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
0800278C  45EE 0008 4555          lea       8(A6),A2
08002790  47F9 0800 4556          lea       @vsprintf_copy,A3
08002794  26D2      
08002796  49F9 0800 4557          lea       _ultoa,A4
0800279A  3074      
0800279C  4286      4558          clr.l     D6
                    4559   vsprintf_1:
0800279E  206E 000C 4560          move.l    12(A6),A0
080027A2  4A10      4561          tst.b     (A0)
080027A4  6700 0624 4562          beq       vsprintf_3
080027A8  206E 000C 4563          move.l    12(A6),A0
080027AC  1010      4564          move.b    (A0),D0
080027AE  4880      4565          ext.w     D0
080027B0  48C0      4566          ext.l     D0
080027B2  0C80 0000 4567          cmp.l     #37,D0
080027B6  0025      
080027B8  671C      4568          beq.s     vsprintf_4
080027BA  206E 000C 4569          move.l    12(A6),A0
080027BE  52AE 000C 4570          addq.l    #1,12(A6)
080027C2  1210      4571          move.b    (A0),D1
080027C4  4881      4572          ext.w     D1
080027C6  48C1      4573          ext.l     D1
080027C8  2F01      4574          move.l    D1,-(A7)
080027CA  2F0A      4575          move.l    A2,-(A7)
080027CC  4E93      4576          jsr       (A3)
080027CE  504F      4577          addq.w    #8,A7
080027D0  5286      4578          addq.l    #1,D6
080027D2  6000 05F2 4579          bra       vsprintf_2
                    4580   vsprintf_4:
080027D6  52AE 000C 4581          addq.l    #1,12(A6)
080027DA  422E FFD3 4582          clr.b     -45(A6)
080027DE  422E FFD2 4583          clr.b     -46(A6)
080027E2  422E FFD0 4584          clr.b     -48(A6)
080027E6  422E FFCF 4585          clr.b     -49(A6)
080027EA  422E FFCE 4586          clr.b     -50(A6)
080027EE  422E FFCD 4587          clr.b     -51(A6)
080027F2  42AE FFFC 4588          clr.l     -4(A6)
080027F6  7AFF      4589          moveq     #-1,D5
080027F8  41EE FFDC 4590          lea       -36(A6),A0
080027FC  2608      4591          move.l    A0,D3
080027FE  2408      4592          move.l    A0,D2
                    4593   vsprintf_6:
08002800  206E 000C 4594          move.l    12(A6),A0
08002804  1010      4595          move.b    (A0),D0
08002806  4880      4596          ext.w     D0
08002808  48C0      4597          ext.l     D0
0800280A  0C80 0000 4598          cmp.l     #43,D0
0800280E  002B      
08002810  6730      4599          beq.s     vsprintf_12
08002812  6E18      4600          bgt.s     vsprintf_15
08002814  0C80 0000 4601          cmp.l     #35,D0
08002818  0023      
0800281A  6700 003E 4602          beq       vsprintf_14
0800281E  6E00 0046 4603          bgt       vsprintf_9
08002822  0C80 0000 4604          cmp.l     #32,D0
08002826  0020      
08002828  6724      4605          beq.s     vsprintf_13
0800282A  603A      4606          bra.s     vsprintf_9
                    4607   vsprintf_15:
0800282C  0C80 0000 4608          cmp.l     #45,D0
08002830  002D      
08002832  6702      4609          beq.s     vsprintf_11
08002834  6030      4610          bra.s     vsprintf_9
                    4611   vsprintf_11:
08002836  1D7C 0001 4612          move.b    #1,-51(A6)
0800283A  FFCD      
0800283C  52AE 000C 4613          addq.l    #1,12(A6)
08002840  6026      4614          bra.s     vsprintf_7
                    4615   vsprintf_12:
08002842  1D7C 0001 4616          move.b    #1,-50(A6)
08002846  FFCE      
08002848  52AE 000C 4617          addq.l    #1,12(A6)
0800284C  601A      4618          bra.s     vsprintf_7
                    4619   vsprintf_13:
0800284E  1D7C 0001 4620          move.b    #1,-49(A6)
08002852  FFCF      
08002854  52AE 000C 4621          addq.l    #1,12(A6)
08002858  600E      4622          bra.s     vsprintf_7
                    4623   vsprintf_14:
0800285A  1D7C 0001 4624          move.b    #1,-48(A6)
0800285E  FFD0      
08002860  52AE 000C 4625          addq.l    #1,12(A6)
08002864  6002      4626          bra.s     vsprintf_7
                    4627   vsprintf_9:
08002866  6002      4628          bra.s     vsprintf_8
                    4629   vsprintf_7:
08002868  6096      4630          bra       vsprintf_6
                    4631   vsprintf_8:
0800286A  206E 000C 4632          move.l    12(A6),A0
0800286E  1010      4633          move.b    (A0),D0
08002870  4880      4634          ext.w     D0
08002872  48C0      4635          ext.l     D0
08002874  0C80 0000 4636          cmp.l     #48,D0
08002878  0030      
0800287A  660A      4637          bne.s     vsprintf_16
0800287C  52AE 000C 4638          addq.l    #1,12(A6)
08002880  1D7C 0001 4639          move.b    #1,-46(A6)
08002884  FFD2      
                    4640   vsprintf_16:
08002886  486E 0010 4641          pea       16(A6)
0800288A  486E 000C 4642          pea       12(A6)
0800288E  6100 FE6C 4643          bsr       @vsprintf_getval
08002892  504F      4644          addq.w    #8,A7
08002894  2A40      4645          move.l    D0,A5
08002896  206E 000C 4646          move.l    12(A6),A0
0800289A  1010      4647          move.b    (A0),D0
0800289C  4880      4648          ext.w     D0
0800289E  48C0      4649          ext.l     D0
080028A0  0C80 0000 4650          cmp.l     #46,D0
080028A4  002E      
080028A6  6614      4651          bne.s     vsprintf_18
080028A8  52AE 000C 4652          addq.l    #1,12(A6)
080028AC  486E 0010 4653          pea       16(A6)
080028B0  486E 000C 4654          pea       12(A6)
080028B4  6100 FE46 4655          bsr       @vsprintf_getval
080028B8  504F      4656          addq.w    #8,A7
080028BA  2A00      4657          move.l    D0,D5
                    4658   vsprintf_18:
080028BC  206E 000C 4659          move.l    12(A6),A0
080028C0  1010      4660          move.b    (A0),D0
080028C2  4880      4661          ext.w     D0
080028C4  48C0      4662          ext.l     D0
080028C6  0C80 0000 4663          cmp.l     #108,D0
080028CA  006C      
080028CC  660A      4664          bne.s     vsprintf_20
080028CE  52AE 000C 4665          addq.l    #1,12(A6)
080028D2  1D7C 0001 4666          move.b    #1,-45(A6)
080028D6  FFD3      
                    4667   vsprintf_20:
080028D8  206E 000C 4668          move.l    12(A6),A0
080028DC  1010      4669          move.b    (A0),D0
080028DE  4880      4670          ext.w     D0
080028E0  48C0      4671          ext.l     D0
080028E2  0C80 0000 4672          cmp.l     #111,D0
080028E6  006F      
080028E8  6700 00D4 4673          beq       vsprintf_27
080028EC  6E34      4674          bgt.s     vsprintf_33
080028EE  0C80 0000 4675          cmp.l     #100,D0
080028F2  0064      
080028F4  6700 0054 4676          beq       vsprintf_24
080028F8  6E1C      4677          bgt.s     vsprintf_34
080028FA  0C80 0000 4678          cmp.l     #99,D0
080028FE  0063      
08002900  6700 012C 4679          beq       vsprintf_30
08002904  6E00 016A 4680          bgt       vsprintf_22
08002908  0C80 0000 4681          cmp.l     #88,D0
0800290C  0058      
0800290E  6700 00E6 4682          beq       vsprintf_28
08002912  6000 015C 4683          bra       vsprintf_22
                    4684   vsprintf_34:
08002916  0C80 0000 4685          cmp.l     #105,D0
0800291A  0069      
0800291C  672C      4686          beq.s     vsprintf_24
0800291E  6000 0150 4687          bra       vsprintf_22
                    4688   vsprintf_33:
08002922  0C80 0000 4689          cmp.l     #117,D0
08002926  0075      
08002928  6700 005C 4690          beq       vsprintf_26
0800292C  6E0E      4691          bgt.s     vsprintf_35
0800292E  0C80 0000 4692          cmp.l     #115,D0
08002932  0073      
08002934  6700 011C 4693          beq       vsprintf_31
08002938  6000 0136 4694          bra       vsprintf_22
                    4695   vsprintf_35:
0800293C  0C80 0000 4696          cmp.l     #120,D0
08002940  0078      
08002942  6700 00B2 4697          beq       vsprintf_28
08002946  6000 0128 4698          bra       vsprintf_22
                    4699   vsprintf_24:
0800294A  4A2E FFD3 4700          tst.b     -45(A6)
0800294E  671A      4701          beq.s     vsprintf_36
08002950  4878 000A 4702          pea       10
08002954  2F03      4703          move.l    D3,-(A7)
08002956  206E 0010 4704          move.l    16(A6),A0
0800295A  58AE 0010 4705          addq.l    #4,16(A6)
0800295E  2F10      4706          move.l    (A0),-(A7)
08002960  6100 068E 4707          bsr       _ltoa
08002964  DEFC 000C 4708          add.w     #12,A7
08002968  6018      4709          bra.s     vsprintf_37
                    4710   vsprintf_36:
0800296A  4878 000A 4711          pea       10
0800296E  2F03      4712          move.l    D3,-(A7)
08002970  206E 0010 4713          move.l    16(A6),A0
08002974  58AE 0010 4714          addq.l    #4,16(A6)
08002978  2F10      4715          move.l    (A0),-(A7)
0800297A  6100 0674 4716          bsr       _ltoa
0800297E  DEFC 000C 4717          add.w     #12,A7
                    4718   vsprintf_37:
08002982  6000 00FA 4719          bra       vsprintf_23
                    4720   vsprintf_26:
08002986  4A2E FFD3 4721          tst.b     -45(A6)
0800298A  6718      4722          beq.s     vsprintf_38
0800298C  4878 000A 4723          pea       10
08002990  2F03      4724          move.l    D3,-(A7)
08002992  206E 0010 4725          move.l    16(A6),A0
08002996  58AE 0010 4726          addq.l    #4,16(A6)
0800299A  2F10      4727          move.l    (A0),-(A7)
0800299C  4E94      4728          jsr       (A4)
0800299E  DEFC 000C 4729          add.w     #12,A7
080029A2  6016      4730          bra.s     vsprintf_39
                    4731   vsprintf_38:
080029A4  4878 000A 4732          pea       10
080029A8  2F03      4733          move.l    D3,-(A7)
080029AA  206E 0010 4734          move.l    16(A6),A0
080029AE  58AE 0010 4735          addq.l    #4,16(A6)
080029B2  2F10      4736          move.l    (A0),-(A7)
080029B4  4E94      4737          jsr       (A4)
080029B6  DEFC 000C 4738          add.w     #12,A7
                    4739   vsprintf_39:
080029BA  6000 00C2 4740          bra       vsprintf_23
                    4741   vsprintf_27:
080029BE  4A2E FFD3 4742          tst.b     -45(A6)
080029C2  6718      4743          beq.s     vsprintf_40
080029C4  4878 0008 4744          pea       8
080029C8  2F03      4745          move.l    D3,-(A7)
080029CA  206E 0010 4746          move.l    16(A6),A0
080029CE  58AE 0010 4747          addq.l    #4,16(A6)
080029D2  2F10      4748          move.l    (A0),-(A7)
080029D4  4E94      4749          jsr       (A4)
080029D6  DEFC 000C 4750          add.w     #12,A7
080029DA  6016      4751          bra.s     vsprintf_41
                    4752   vsprintf_40:
080029DC  4878 0008 4753          pea       8
080029E0  2F03      4754          move.l    D3,-(A7)
080029E2  206E 0010 4755          move.l    16(A6),A0
080029E6  58AE 0010 4756          addq.l    #4,16(A6)
080029EA  2F10      4757          move.l    (A0),-(A7)
080029EC  4E94      4758          jsr       (A4)
080029EE  DEFC 000C 4759          add.w     #12,A7
                    4760   vsprintf_41:
080029F2  6000 008A 4761          bra       vsprintf_23
                    4762   vsprintf_28:
080029F6  4A2E FFD3 4763          tst.b     -45(A6)
080029FA  6718      4764          beq.s     vsprintf_42
080029FC  4878 0010 4765          pea       16
08002A00  2F03      4766          move.l    D3,-(A7)
08002A02  206E 0010 4767          move.l    16(A6),A0
08002A06  58AE 0010 4768          addq.l    #4,16(A6)
08002A0A  2F10      4769          move.l    (A0),-(A7)
08002A0C  4E94      4770          jsr       (A4)
08002A0E  DEFC 000C 4771          add.w     #12,A7
08002A12  6016      4772          bra.s     vsprintf_43
                    4773   vsprintf_42:
08002A14  4878 0010 4774          pea       16
08002A18  2F03      4775          move.l    D3,-(A7)
08002A1A  206E 0010 4776          move.l    16(A6),A0
08002A1E  58AE 0010 4777          addq.l    #4,16(A6)
08002A22  2F10      4778          move.l    (A0),-(A7)
08002A24  4E94      4779          jsr       (A4)
08002A26  DEFC 000C 4780          add.w     #12,A7
                    4781   vsprintf_43:
08002A2A  6000 0052 4782          bra       vsprintf_23
                    4783   vsprintf_30:
08002A2E  206E 0010 4784          move.l    16(A6),A0
08002A32  58AE 0010 4785          addq.l    #4,16(A6)
08002A36  2010      4786          move.l    (A0),D0
08002A38  2042      4787          move.l    D2,A0
08002A3A  5282      4788          addq.l    #1,D2
08002A3C  1080      4789          move.b    D0,(A0)
08002A3E  2042      4790          move.l    D2,A0
08002A40  4210      4791          clr.b     (A0)
08002A42  200D      4792          move.l    A5,D0
08002A44  6704      4793          beq.s     vsprintf_44
08002A46  200D      4794          move.l    A5,D0
08002A48  6002      4795          bra.s     vsprintf_45
                    4796   vsprintf_44:
08002A4A  7001      4797          moveq     #1,D0
                    4798   vsprintf_45:
08002A4C  2A00      4799          move.l    D0,D5
08002A4E  6000 002E 4800          bra       vsprintf_23
                    4801   vsprintf_31:
08002A52  206E 0010 4802          move.l    16(A6),A0
08002A56  58AE 0010 4803          addq.l    #4,16(A6)
08002A5A  2610      4804          move.l    (A0),D3
08002A5C  0C85 FFFF 4805          cmp.l     #-1,D5
08002A60  FFFF      
08002A62  660A      4806          bne.s     vsprintf_46
08002A64  2F03      4807          move.l    D3,-(A7)
08002A66  6100 066E 4808          bsr       _strlen
08002A6A  584F      4809          addq.w    #4,A7
08002A6C  2A00      4810          move.l    D0,D5
                    4811   vsprintf_46:
08002A6E  600E      4812          bra.s     vsprintf_23
                    4813   vsprintf_22:
08002A70  206E 000C 4814          move.l    12(A6),A0
08002A74  2242      4815          move.l    D2,A1
08002A76  5282      4816          addq.l    #1,D2
08002A78  1290      4817          move.b    (A0),(A1)
08002A7A  2042      4818          move.l    D2,A0
08002A7C  4210      4819          clr.b     (A0)
                    4820   vsprintf_23:
08002A7E  2F03      4821          move.l    D3,-(A7)
08002A80  6100 0654 4822          bsr       _strlen
08002A84  584F      4823          addq.w    #4,A7
08002A86  1800      4824          move.b    D0,D4
08002A88  206E 000C 4825          move.l    12(A6),A0
08002A8C  1010      4826          move.b    (A0),D0
08002A8E  4880      4827          ext.w     D0
08002A90  48C0      4828          ext.l     D0
08002A92  0C80 0000 4829          cmp.l     #115,D0
08002A96  0073      
08002A98  6618      4830          bne.s     vsprintf_48
08002A9A  0C85 0000 4831          cmp.l     #0,D5
08002A9E  0000      
08002AA0  6D10      4832          blt.s     vsprintf_48
08002AA2  4884      4833          ext.w     D4
08002AA4  48C4      4834          ext.l     D4
08002AA6  B885      4835          cmp.l     D5,D4
08002AA8  6F04      4836          ble.s     vsprintf_50
08002AAA  1005      4837          move.b    D5,D0
08002AAC  6002      4838          bra.s     vsprintf_51
                    4839   vsprintf_50:
08002AAE  1004      4840          move.b    D4,D0
                    4841   vsprintf_51:
08002AB0  1800      4842          move.b    D0,D4
                    4843   vsprintf_48:
08002AB2  206E 000C 4844          move.l    12(A6),A0
08002AB6  1010      4845          move.b    (A0),D0
08002AB8  4880      4846          ext.w     D0
08002ABA  48C0      4847          ext.l     D0
08002ABC  0C80 0000 4848          cmp.l     #88,D0
08002AC0  0058      
08002AC2  6600 0026 4849          bne       vsprintf_56
08002AC6  41EE FFDC 4850          lea       -36(A6),A0
08002ACA  2408      4851          move.l    A0,D2
                    4852   vsprintf_54:
08002ACC  2042      4853          move.l    D2,A0
08002ACE  4A10      4854          tst.b     (A0)
08002AD0  6718      4855          beq.s     vsprintf_56
08002AD2  2042      4856          move.l    D2,A0
08002AD4  1210      4857          move.b    (A0),D1
08002AD6  4881      4858          ext.w     D1
08002AD8  48C1      4859          ext.l     D1
08002ADA  2F01      4860          move.l    D1,-(A7)
08002ADC  6100 0460 4861          bsr       _toupper
08002AE0  584F      4862          addq.w    #4,A7
08002AE2  2042      4863          move.l    D2,A0
08002AE4  1080      4864          move.b    D0,(A0)
08002AE6  5282      4865          addq.l    #1,D2
08002AE8  60E2      4866          bra       vsprintf_54
                    4867   vsprintf_56:
08002AEA  7E00      4868          moveq     #0,D7
08002AEC  41EE FFD4 4869          lea       -44(A6),A0
08002AF0  2408      4870          move.l    A0,D2
08002AF2  206E 000C 4871          move.l    12(A6),A0
08002AF6  1010      4872          move.b    (A0),D0
08002AF8  4880      4873          ext.w     D0
08002AFA  48C0      4874          ext.l     D0
08002AFC  0C80 0000 4875          cmp.l     #100,D0
08002B00  0064      
08002B02  6714      4876          beq.s     vsprintf_59
08002B04  206E 000C 4877          move.l    12(A6),A0
08002B08  1010      4878          move.b    (A0),D0
08002B0A  4880      4879          ext.w     D0
08002B0C  48C0      4880          ext.l     D0
08002B0E  0C80 0000 4881          cmp.l     #105,D0
08002B12  0069      
08002B14  6600 0076 4882          bne       vsprintf_65
                    4883   vsprintf_59:
08002B18  4A2E FFCE 4884          tst.b     -50(A6)
08002B1C  6612      4885          bne.s     vsprintf_62
08002B1E  2043      4886          move.l    D3,A0
08002B20  1010      4887          move.b    (A0),D0
08002B22  4880      4888          ext.w     D0
08002B24  48C0      4889          ext.l     D0
08002B26  0C80 0000 4890          cmp.l     #45,D0
08002B2A  002D      
08002B2C  6600 002E 4891          bne       vsprintf_60
                    4892   vsprintf_62:
08002B30  2043      4893          move.l    D3,A0
08002B32  1010      4894          move.b    (A0),D0
08002B34  4880      4895          ext.w     D0
08002B36  48C0      4896          ext.l     D0
08002B38  0C80 0000 4897          cmp.l     #45,D0
08002B3C  002D      
08002B3E  660E      4898          bne.s     vsprintf_63
08002B40  2043      4899          move.l    D3,A0
08002B42  5283      4900          addq.l    #1,D3
08002B44  2242      4901          move.l    D2,A1
08002B46  5282      4902          addq.l    #1,D2
08002B48  1290      4903          move.b    (A0),(A1)
08002B4A  5304      4904          subq.b    #1,D4
08002B4C  6008      4905          bra.s     vsprintf_64
                    4906   vsprintf_63:
08002B4E  2042      4907          move.l    D2,A0
08002B50  5282      4908          addq.l    #1,D2
08002B52  10BC 002B 4909          move.b    #43,(A0)
                    4910   vsprintf_64:
08002B56  5287      4911          addq.l    #1,D7
08002B58  6000 0032 4912          bra       vsprintf_65
                    4913   vsprintf_60:
08002B5C  4A2E FFCF 4914          tst.b     -49(A6)
08002B60  6700 002A 4915          beq       vsprintf_65
08002B64  2043      4916          move.l    D3,A0
08002B66  1010      4917          move.b    (A0),D0
08002B68  4880      4918          ext.w     D0
08002B6A  48C0      4919          ext.l     D0
08002B6C  0C80 0000 4920          cmp.l     #45,D0
08002B70  002D      
08002B72  660E      4921          bne.s     vsprintf_67
08002B74  2043      4922          move.l    D3,A0
08002B76  5283      4923          addq.l    #1,D3
08002B78  2242      4924          move.l    D2,A1
08002B7A  5282      4925          addq.l    #1,D2
08002B7C  1290      4926          move.b    (A0),(A1)
08002B7E  5304      4927          subq.b    #1,D4
08002B80  6008      4928          bra.s     vsprintf_68
                    4929   vsprintf_67:
08002B82  2042      4930          move.l    D2,A0
08002B84  5282      4931          addq.l    #1,D2
08002B86  10BC 0020 4932          move.b    #32,(A0)
                    4933   vsprintf_68:
08002B8A  5287      4934          addq.l    #1,D7
                    4935   vsprintf_65:
08002B8C  4A2E FFD0 4936          tst.b     -48(A6)
08002B90  6700 0066 4937          beq       vsprintf_77
08002B94  206E 000C 4938          move.l    12(A6),A0
08002B98  1010      4939          move.b    (A0),D0
08002B9A  4880      4940          ext.w     D0
08002B9C  48C0      4941          ext.l     D0
08002B9E  0C80 0000 4942          cmp.l     #111,D0
08002BA2  006F      
08002BA4  671A      4943          beq.s     vsprintf_73
08002BA6  6E0C      4944          bgt.s     vsprintf_76
08002BA8  0C80 0000 4945          cmp.l     #88,D0
08002BAC  0058      
08002BAE  6710      4946          beq.s     vsprintf_73
08002BB0  6000 0046 4947          bra       vsprintf_77
                    4948   vsprintf_76:
08002BB4  0C80 0000 4949          cmp.l     #120,D0
08002BB8  0078      
08002BBA  6704      4950          beq.s     vsprintf_73
08002BBC  6000 003A 4951          bra       vsprintf_77
                    4952   vsprintf_73:
08002BC0  2042      4953          move.l    D2,A0
08002BC2  5282      4954          addq.l    #1,D2
08002BC4  10BC 0030 4955          move.b    #48,(A0)
08002BC8  5287      4956          addq.l    #1,D7
08002BCA  206E 000C 4957          move.l    12(A6),A0
08002BCE  1010      4958          move.b    (A0),D0
08002BD0  4880      4959          ext.w     D0
08002BD2  48C0      4960          ext.l     D0
08002BD4  0C80 0000 4961          cmp.l     #120,D0
08002BD8  0078      
08002BDA  6712      4962          beq.s     vsprintf_79
08002BDC  206E 000C 4963          move.l    12(A6),A0
08002BE0  1010      4964          move.b    (A0),D0
08002BE2  4880      4965          ext.w     D0
08002BE4  48C0      4966          ext.l     D0
08002BE6  0C80 0000 4967          cmp.l     #88,D0
08002BEA  0058      
08002BEC  660A      4968          bne.s     vsprintf_77
                    4969   vsprintf_79:
08002BEE  2042      4970          move.l    D2,A0
08002BF0  5282      4971          addq.l    #1,D2
08002BF2  10BC 0078 4972          move.b    #120,(A0)
08002BF6  5287      4973          addq.l    #1,D7
                    4974   vsprintf_77:
08002BF8  2042      4975          move.l    D2,A0
08002BFA  4210      4976          clr.b     (A0)
08002BFC  206E 000C 4977          move.l    12(A6),A0
08002C00  1010      4978          move.b    (A0),D0
08002C02  4880      4979          ext.w     D0
08002C04  48C0      4980          ext.l     D0
08002C06  0C80 0000 4981          cmp.l     #105,D0
08002C0A  0069      
08002C0C  6700 0076 4982          beq       vsprintf_82
08002C10  6E42      4983          bgt.s     vsprintf_93
08002C12  0C80 0000 4984          cmp.l     #99,D0
08002C16  0063      
08002C18  6700 0084 4985          beq       vsprintf_96
08002C1C  6E1C      4986          bgt.s     vsprintf_94
08002C1E  0C80 0000 4987          cmp.l     #88,D0
08002C22  0058      
08002C24  6700 005E 4988          beq       vsprintf_82
08002C28  6E00 0184 4989          bgt       vsprintf_80
08002C2C  0C80 0000 4990          cmp.l     #69,D0
08002C30  0045      
08002C32  6700 0050 4991          beq       vsprintf_82
08002C36  6000 0176 4992          bra       vsprintf_80
                    4993   vsprintf_94:
08002C3A  0C80 0000 4994          cmp.l     #101,D0
08002C3E  0065      
08002C40  6700 0042 4995          beq       vsprintf_82
08002C44  6E00 0168 4996          bgt       vsprintf_80
08002C48  0C80 0000 4997          cmp.l     #100,D0
08002C4C  0064      
08002C4E  6734      4998          beq.s     vsprintf_82
08002C50  6000 015C 4999          bra       vsprintf_80
                    5000   vsprintf_93:
08002C54  0C80 0000 5001          cmp.l     #117,D0
08002C58  0075      
08002C5A  6728      5002          beq.s     vsprintf_82
08002C5C  6E1A      5003          bgt.s     vsprintf_95
08002C5E  0C80 0000 5004          cmp.l     #115,D0
08002C62  0073      
08002C64  6700 0038 5005          beq       vsprintf_96
08002C68  6E00 0144 5006          bgt       vsprintf_80
08002C6C  0C80 0000 5007          cmp.l     #111,D0
08002C70  006F      
08002C72  6710      5008          beq.s     vsprintf_82
08002C74  6000 0138 5009          bra       vsprintf_80
                    5010   vsprintf_95:
08002C78  0C80 0000 5011          cmp.l     #120,D0
08002C7C  0078      
08002C7E  6704      5012          beq.s     vsprintf_82
08002C80  6000 012C 5013          bra       vsprintf_80
                    5014   vsprintf_82:
08002C84  4A2E FFD2 5015          tst.b     -46(A6)
08002C88  6714      5016          beq.s     vsprintf_96
08002C8A  4A2E FFCD 5017          tst.b     -51(A6)
08002C8E  660E      5018          bne.s     vsprintf_96
08002C90  200D      5019          move.l    A5,D0
08002C92  9087      5020          sub.l     D7,D0
08002C94  4884      5021          ext.w     D4
08002C96  48C4      5022          ext.l     D4
08002C98  9084      5023          sub.l     D4,D0
08002C9A  2D40 FFFC 5024          move.l    D0,-4(A6)
                    5025   vsprintf_96:
08002C9E  202E FFFC 5026          move.l    -4(A6),D0
08002CA2  0C80 0000 5027          cmp.l     #0,D0
08002CA6  0000      
08002CA8  6C04      5028          bge.s     vsprintf_98
08002CAA  42AE FFFC 5029          clr.l     -4(A6)
                    5030   vsprintf_98:
08002CAE  4A2E FFCD 5031          tst.b     -51(A6)
08002CB2  6600 0030 5032          bne       vsprintf_104
08002CB6  4884      5033          ext.w     D4
08002CB8  48C4      5034          ext.l     D4
08002CBA  2004      5035          move.l    D4,D0
08002CBC  D0AE FFFC 5036          add.l     -4(A6),D0
08002CC0  D087      5037          add.l     D7,D0
08002CC2  1D40 FFD1 5038          move.b    D0,-47(A6)
                    5039   vsprintf_102:
08002CC6  102E FFD1 5040          move.b    -47(A6),D0
08002CCA  4880      5041          ext.w     D0
08002CCC  48C0      5042          ext.l     D0
08002CCE  220D      5043          move.l    A5,D1
08002CD0  534D      5044          subq.w    #1,A5
08002CD2  B081      5045          cmp.l     D1,D0
08002CD4  6C0E      5046          bge.s     vsprintf_104
08002CD6  4878 0020 5047          pea       32
08002CDA  2F0A      5048          move.l    A2,-(A7)
08002CDC  4E93      5049          jsr       (A3)
08002CDE  504F      5050          addq.w    #8,A7
08002CE0  5286      5051          addq.l    #1,D6
08002CE2  60E2      5052          bra       vsprintf_102
                    5053   vsprintf_104:
08002CE4  41EE FFD4 5054          lea       -44(A6),A0
08002CE8  2408      5055          move.l    A0,D2
                    5056   vsprintf_105:
08002CEA  2042      5057          move.l    D2,A0
08002CEC  4A10      5058          tst.b     (A0)
08002CEE  6716      5059          beq.s     vsprintf_107
08002CF0  2042      5060          move.l    D2,A0
08002CF2  5282      5061          addq.l    #1,D2
08002CF4  1210      5062          move.b    (A0),D1
08002CF6  4881      5063          ext.w     D1
08002CF8  48C1      5064          ext.l     D1
08002CFA  2F01      5065          move.l    D1,-(A7)
08002CFC  2F0A      5066          move.l    A2,-(A7)
08002CFE  4E93      5067          jsr       (A3)
08002D00  504F      5068          addq.w    #8,A7
08002D02  5286      5069          addq.l    #1,D6
08002D04  60E4      5070          bra       vsprintf_105
                    5071   vsprintf_107:
08002D06  202E FFFC 5072          move.l    -4(A6),D0
08002D0A  1D40 FFD1 5073          move.b    D0,-47(A6)
                    5074   vsprintf_108:
08002D0E  102E FFD1 5075          move.b    -47(A6),D0
08002D12  532E FFD1 5076          subq.b    #1,-47(A6)
08002D16  4A00      5077          tst.b     D0
08002D18  670E      5078          beq.s     vsprintf_110
08002D1A  4878 0030 5079          pea       48
08002D1E  2F0A      5080          move.l    A2,-(A7)
08002D20  4E93      5081          jsr       (A3)
08002D22  504F      5082          addq.w    #8,A7
08002D24  5286      5083          addq.l    #1,D6
08002D26  60E6      5084          bra       vsprintf_108
                    5085   vsprintf_110:
08002D28  2043      5086          move.l    D3,A0
08002D2A  4A10      5087          tst.b     (A0)
08002D2C  6700 0048 5088          beq       vsprintf_113
08002D30  206E 000C 5089          move.l    12(A6),A0
08002D34  1010      5090          move.b    (A0),D0
08002D36  4880      5091          ext.w     D0
08002D38  48C0      5092          ext.l     D0
08002D3A  0C80 0000 5093          cmp.l     #115,D0
08002D3E  0073      
08002D40  670C      5094          beq.s     vsprintf_116
08002D42  6E18      5095          bgt.s     vsprintf_119
08002D44  0C80 0000 5096          cmp.l     #99,D0
08002D48  0063      
08002D4A  6702      5097          beq.s     vsprintf_116
08002D4C  600E      5098          bra.s     vsprintf_119
                    5099   vsprintf_116:
08002D4E  2005      5100          move.l    D5,D0
08002D50  5385      5101          subq.l    #1,D5
08002D52  0C80 0000 5102          cmp.l     #0,D0
08002D56  0000      
08002D58  6E02      5103          bgt.s     vsprintf_119
08002D5A  6016      5104          bra.s     vsprintf_115
                    5105   vsprintf_119:
08002D5C  2043      5106          move.l    D3,A0
08002D5E  5283      5107          addq.l    #1,D3
08002D60  1210      5108          move.b    (A0),D1
08002D62  4881      5109          ext.w     D1
08002D64  48C1      5110          ext.l     D1
08002D66  2F01      5111          move.l    D1,-(A7)
08002D68  2F0A      5112          move.l    A2,-(A7)
08002D6A  4E93      5113          jsr       (A3)
08002D6C  504F      5114          addq.w    #8,A7
08002D6E  5286      5115          addq.l    #1,D6
08002D70  6002      5116          bra.s     vsprintf_112
                    5117   vsprintf_115:
08002D72  6002      5118          bra.s     vsprintf_113
                    5119   vsprintf_112:
08002D74  60B2      5120          bra       vsprintf_110
                    5121   vsprintf_113:
08002D76  4A2E FFCD 5122          tst.b     -51(A6)
08002D7A  6700 0030 5123          beq       vsprintf_125
08002D7E  4884      5124          ext.w     D4
08002D80  48C4      5125          ext.l     D4
08002D82  2004      5126          move.l    D4,D0
08002D84  D0AE FFFC 5127          add.l     -4(A6),D0
08002D88  D087      5128          add.l     D7,D0
08002D8A  1D40 FFD1 5129          move.b    D0,-47(A6)
                    5130   vsprintf_123:
08002D8E  102E FFD1 5131          move.b    -47(A6),D0
08002D92  4880      5132          ext.w     D0
08002D94  48C0      5133          ext.l     D0
08002D96  220D      5134          move.l    A5,D1
08002D98  534D      5135          subq.w    #1,A5
08002D9A  B081      5136          cmp.l     D1,D0
08002D9C  6C0E      5137          bge.s     vsprintf_125
08002D9E  4878 0020 5138          pea       32
08002DA2  2F0A      5139          move.l    A2,-(A7)
08002DA4  4E93      5140          jsr       (A3)
08002DA6  504F      5141          addq.w    #8,A7
08002DA8  5386      5142          subq.l    #1,D6
08002DAA  60E2      5143          bra       vsprintf_123
                    5144   vsprintf_125:
08002DAC  6014      5145          bra.s     vsprintf_81
                    5146   vsprintf_80:
08002DAE  206E 000C 5147          move.l    12(A6),A0
08002DB2  1210      5148          move.b    (A0),D1
08002DB4  4881      5149          ext.w     D1
08002DB6  48C1      5150          ext.l     D1
08002DB8  2F01      5151          move.l    D1,-(A7)
08002DBA  2F0A      5152          move.l    A2,-(A7)
08002DBC  4E93      5153          jsr       (A3)
08002DBE  504F      5154          addq.w    #8,A7
08002DC0  5286      5155          addq.l    #1,D6
                    5156   vsprintf_81:
08002DC2  52AE 000C 5157          addq.l    #1,12(A6)
                    5158   vsprintf_2:
08002DC6  6000 F9D6 5159          bra       vsprintf_1
                    5160   vsprintf_3:
08002DCA  4A92      5161          tst.l     (A2)
08002DCC  6710      5162          beq.s     vsprintf_126
08002DCE  4201      5163          clr.b     D1
08002DD0  C2BC 0000 5164          and.l     #255,D1
08002DD4  00FF      
08002DD6  2F01      5165          move.l    D1,-(A7)
08002DD8  2F0A      5166          move.l    A2,-(A7)
08002DDA  4E93      5167          jsr       (A3)
08002DDC  504F      5168          addq.w    #8,A7
                    5169   vsprintf_126:
08002DDE  2006      5170          move.l    D6,D0
08002DE0  4CDF 3CFC 5171          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08002DE4  4E5E      5172          unlk      A6
08002DE6  4E75      5173          rts
                    5174   ULMUL:
08002DE8  4E56 0000 5175          link    A6,#0
08002DEC  48E7 C000 5176          movem.l D0/D1,-(A7)
08002DF0  222E 0008 5177          move.l  8(A6),D1
08002DF4  202E 000C 5178          move.l  12(A6),D0
08002DF8  602C      5179          bra.s   lmul_3
                    5180   LMUL:
08002DFA  4E56 0000 5181          link    A6,#0
08002DFE  48E7 C000 5182          movem.l D0/D1,-(A7)
08002E02  222E 0008 5183          move.l  8(A6),D1
08002E06  202E 000C 5184          move.l  12(A6),D0
08002E0A  4A80      5185          tst.l   D0
08002E0C  6A0A      5186          bpl.s   lmul_1
08002E0E  4480      5187          neg.l   D0
08002E10  4A81      5188          tst.l   D1
08002E12  6A0A      5189          bpl.s   lmul_2
08002E14  4481      5190          neg.l   D1
08002E16  600E      5191          bra.s   lmul_3
                    5192   lmul_1:
08002E18  4A81      5193          tst.l   D1
08002E1A  6A0A      5194          bpl.s   lmul_3
08002E1C  4481      5195          neg.l   D1
                    5196   lmul_2:
08002E1E  6114      5197          bsr.s   domul
08002E20  4481      5198          neg.l   D1
08002E22  4080      5199          negx.l  D0
08002E24  6002      5200          bra.s   lmul_4
                    5201   lmul_3:
08002E26  610C      5202          bsr.s   domul
                    5203   lmul_4:
08002E28  2D41 0008 5204          move.l  D1,8(A6)
08002E2C  4CDF 0003 5205          movem.l (A7)+,D0/D1
08002E30  4E5E      5206          unlk    A6
08002E32  4E75      5207          rts
                    5208   domul:
08002E34  0C81 0000 5209          cmpi.l  #$FFFF,D1
08002E38  FFFF      
08002E3A  620C      5210          bhi.s   domul_1
08002E3C  0C80 0000 5211          cmpi.l  #$FFFF,D0
08002E40  FFFF      
08002E42  620E      5212          bhi.s   domul_2
08002E44  C2C0      5213          mulu    D0,D1
08002E46  4E75      5214          rts
                    5215   domul_1:
08002E48  0C80 0000 5216          cmpi.l  #$FFFF,D0
08002E4C  FFFF      
08002E4E  6218      5217          bhi.s   domul_4
08002E50  6002      5218          bra.s   domul_3
                    5219   domul_2
08002E52  C141      5220          exg     D0,D1
                    5221   domul_3:
08002E54  2F02      5222          move.l  D2,-(A7)
08002E56  2401      5223          move.l  D1,D2
08002E58  4842      5224          swap    D2
08002E5A  C2C0      5225          mulu    D0,D1
08002E5C  C4C0      5226          mulu    D0,D2
08002E5E  4842      5227          swap    D2
08002E60  4242      5228          clr.w   D2
08002E62  D282      5229          add.l   D2,D1
08002E64  241F      5230          move.l  (A7)+,D2
08002E66  4E75      5231          rts
                    5232   domul_4:
08002E68  48E7 3000 5233          movem.l D2/D3,-(A7)
08002E6C  2401      5234          move.l  D1,D2
08002E6E  2601      5235          move.l  D1,D3
08002E70  C2C0      5236          mulu    D0,D1
08002E72  4842      5237          swap    D2
08002E74  C4C0      5238          mulu    D0,D2
08002E76  4840      5239          swap    D0
08002E78  C6C0      5240          mulu    D0,D3
08002E7A  D483      5241          add.l   D3,D2
08002E7C  4842      5242          swap    D2
08002E7E  4242      5243          clr.w   D2
08002E80  D282      5244          add.l   D2,D1
08002E82  4CDF 000C 5245          movem.l (A7)+,D2/D3
08002E86  4E75      5246          rts
                    5247   _gets:
08002E88  4E56 0000 5248          link      A6,#0
08002E8C  48E7 3820 5249          movem.l   D2/D3/D4/A2,-(A7)
08002E90  45F9 0800 5250          lea       _putch,A2
08002E94  30E8      
08002E96  282E 0008 5251          move.l    8(A6),D4
08002E9A  2404      5252          move.l    D4,D2
                    5253   gets_1:
08002E9C  6100 027A 5254          bsr       _getch
08002EA0  2600      5255          move.l    D0,D3
08002EA2  0C80 0000 5256          cmp.l     #10,D0
08002EA6  000A      
08002EA8  6700 003C 5257          beq       gets_3
08002EAC  0C83 0000 5258          cmp.l     #8,D3
08002EB0  0008      
08002EB2  6712      5259          beq.s     gets_4
08002EB4  2042      5260          move.l    D2,A0
08002EB6  5282      5261          addq.l    #1,D2
08002EB8  1083      5262          move.b    D3,(A0)
08002EBA  4883      5263          ext.w     D3
08002EBC  48C3      5264          ext.l     D3
08002EBE  2F03      5265          move.l    D3,-(A7)
08002EC0  4E92      5266          jsr       (A2)
08002EC2  584F      5267          addq.w    #4,A7
08002EC4  601E      5268          bra.s     gets_6
                    5269   gets_4:
08002EC6  B484      5270          cmp.l     D4,D2
08002EC8  631A      5271          bls.s     gets_6
08002ECA  4878 0008 5272          pea       8
08002ECE  4E92      5273          jsr       (A2)
08002ED0  584F      5274          addq.w    #4,A7
08002ED2  4878 0020 5275          pea       32
08002ED6  4E92      5276          jsr       (A2)
08002ED8  584F      5277          addq.w    #4,A7
08002EDA  4878 0008 5278          pea       8
08002EDE  4E92      5279          jsr       (A2)
08002EE0  584F      5280          addq.w    #4,A7
08002EE2  5382      5281          subq.l    #1,D2
                    5282   gets_6:
08002EE4  60B6      5283          bra       gets_1
                    5284   gets_3:
08002EE6  4878 000A 5285          pea       10
08002EEA  4E92      5286          jsr       (A2)
08002EEC  584F      5287          addq.w    #4,A7
08002EEE  2042      5288          move.l    D2,A0
08002EF0  4210      5289          clr.b     (A0)
08002EF2  2004      5290          move.l    D4,D0
08002EF4  4CDF 041C 5291          movem.l   (A7)+,D2/D3/D4/A2
08002EF8  4E5E      5292          unlk      A6
08002EFA  4E75      5293          rts
                    5294   _tolower:
08002EFC  4E56 0000 5295          link      A6,#0
08002F00  48E7 2000 5296          movem.l   D2,-(A7)
08002F04  242E 0008 5297          move.l    8(A6),D2
08002F08  0C82 0000 5298          cmp.l     #65,D2
08002F0C  0041      
08002F0E  6D0E      5299          blt.s     tolower_1
08002F10  0C82 0000 5300          cmp.l     #90,D2
08002F14  005A      
08002F16  6E06      5301          bgt.s     tolower_1
08002F18  84BC 0000 5302          or.l      #32,D2
08002F1C  0020      
                    5303   tolower_1:
08002F1E  2002      5304          move.l    D2,D0
08002F20  4CDF 0004 5305          movem.l   (A7)+,D2
08002F24  4E5E      5306          unlk      A6
08002F26  4E75      5307          rts
                    5308   _strcat:
08002F28  206F 0004 5309          move.l    (4,A7),A0	
08002F2C  226F 0008 5310          move.l    (8,A7),A1	
08002F30  2008      5311          move.l    A0,D0		
                    5312   strcat_0:
08002F32  4A18      5313          tst.b     (A0)+
08002F34  66FC      5314          bne       strcat_0
08002F36  5348      5315          subq      #1,A0
                    5316   strcat_1:
08002F38  10D9      5317          move.b    (A1)+,(A0)+
08002F3A  66FC      5318          bne       strcat_1
08002F3C  4E75      5319          rts
                    5320   _toupper:
08002F3E  4E56 0000 5321          link      A6,#0
08002F42  48E7 2000 5322          movem.l   D2,-(A7)
08002F46  242E 0008 5323          move.l    8(A6),D2
08002F4A  0C82 0000 5324          cmp.l     #97,D2
08002F4E  0061      
08002F50  6D0E      5325          blt.s     toupper_1
08002F52  0C82 0000 5326          cmp.l     #122,D2
08002F56  007A      
08002F58  6E06      5327          bgt.s     toupper_1
08002F5A  C4BC 0000 5328          and.l     #95,D2
08002F5E  005F      
                    5329   toupper_1:
08002F60  2002      5330          move.l    D2,D0
08002F62  4CDF 0004 5331          movem.l   (A7)+,D2
08002F66  4E5E      5332          unlk      A6
08002F68  4E75      5333          rts
                    5334   _ungetch:
08002F6A  4E56 0000 5335          link      A6,#0
08002F6E  23EE 0008 5336          move.l    8(A6),__ungetbuf
08002F72  0800 3D3E 
08002F76  202E 0008 5337          move.l    8(A6),D0
08002F7A  4E5E      5338          unlk      A6
08002F7C  4E75      5339          rts
                    5340   @itoa_convert:
08002F7E  4E56 0000 5341          link      A6,#0
08002F82  48E7 3C00 5342          movem.l   D2/D3/D4/D5,-(A7)
08002F86  242E 0008 5343          move.l    8(A6),D2
08002F8A  262E 0010 5344          move.l    16(A6),D3
08002F8E  2A2E 000C 5345          move.l    12(A6),D5
08002F92  2F05      5346          move.l    D5,-(A7)
08002F94  2F03      5347          move.l    D3,-(A7)
08002F96  6100 ED60 5348          bsr       ULDIV
08002F9A  202F 0004 5349          move.l    4(A7),D0
08002F9E  504F      5350          addq.w    #8,A7
08002FA0  2800      5351          move.l    D0,D4
08002FA2  BA83      5352          cmp.l     D3,D5
08002FA4  651A      5353          blo.s     @itoa_convert_1
08002FA6  2F03      5354          move.l    D3,-(A7)
08002FA8  2F05      5355          move.l    D5,-(A7)
08002FAA  2F03      5356          move.l    D3,-(A7)
08002FAC  6100 ED4A 5357          bsr       ULDIV
08002FB0  2217      5358          move.l    (A7),D1
08002FB2  504F      5359          addq.w    #8,A7
08002FB4  2F01      5360          move.l    D1,-(A7)
08002FB6  2F02      5361          move.l    D2,-(A7)
08002FB8  61C4      5362          bsr       @itoa_convert
08002FBA  DEFC 000C 5363          add.w     #12,A7
08002FBE  2400      5364          move.l    D0,D2
                    5365   @itoa_convert_1:
08002FC0  0C84 0000 5366          cmp.l     #9,D4
08002FC4  0009      
08002FC6  6E0A      5367          bgt.s     @itoa_convert_3
08002FC8  2004      5368          move.l    D4,D0
08002FCA  0680 0000 5369          add.l     #48,D0
08002FCE  0030      
08002FD0  600E      5370          bra.s     @itoa_convert_4
                    5371   @itoa_convert_3:
08002FD2  2004      5372          move.l    D4,D0
08002FD4  0680 0000 5373          add.l     #97,D0
08002FD8  0061      
08002FDA  0480 0000 5374          sub.l     #10,D0
08002FDE  000A      
                    5375   @itoa_convert_4:
08002FE0  2042      5376          move.l    D2,A0
08002FE2  1080      5377          move.b    D0,(A0)
08002FE4  2002      5378          move.l    D2,D0
08002FE6  5280      5379          addq.l    #1,D0
08002FE8  4CDF 003C 5380          movem.l   (A7)+,D2/D3/D4/D5
08002FEC  4E5E      5381          unlk      A6
08002FEE  4E75      5382          rts
                    5383   _ltoa:
08002FF0  4E56 0000 5384          link      A6,#0
08002FF4  48E7 3C00 5385          movem.l   D2/D3/D4/D5,-(A7)
08002FF8  242E 0008 5386          move.l    8(A6),D2
08002FFC  262E 000C 5387          move.l    12(A6),D3
08003000  2A2E 0010 5388          move.l    16(A6),D5
08003004  2803      5389          move.l    D3,D4
08003006  0C85 0000 5390          cmp.l     #2,D5
0800300A  0002      
0800300C  6D08      5391          blt.s     ltoa_3
0800300E  0C85 0000 5392          cmp.l     #36,D5
08003012  0024      
08003014  6F06      5393          ble.s     ltoa_1
                    5394   ltoa_3:
08003016  2003      5395          move.l    D3,D0
08003018  6000 0052 5396          bra       ltoa_4
                    5397   ltoa_1:
0800301C  0C85 0000 5398          cmp.l     #10,D5
08003020  000A      
08003022  6600 0032 5399          bne       ltoa_5
08003026  0C82 0000 5400          cmp.l     #0,D2
0800302A  0000      
0800302C  6C28      5401          bge.s     ltoa_5
0800302E  2002      5402          move.l    D2,D0
08003030  4480      5403          neg.l     D0
08003032  2400      5404          move.l    D0,D2
08003034  0C82 0000 5405          cmp.l     #0,D2
08003038  0000      
0800303A  6C12      5406          bge.s     ltoa_7
0800303C  4879 0800 5407          pea       @itoa_1
08003040  3E52      
08003042  2F03      5408          move.l    D3,-(A7)
08003044  6100 010E 5409          bsr       _strcpy
08003048  504F      5410          addq.w    #8,A7
0800304A  2003      5411          move.l    D3,D0
0800304C  601E      5412          bra.s     ltoa_4
                    5413   ltoa_7:
0800304E  2044      5414          move.l    D4,A0
08003050  5284      5415          addq.l    #1,D4
08003052  10BC 002D 5416          move.b    #45,(A0)
                    5417   ltoa_5:
08003056  2F05      5418          move.l    D5,-(A7)
08003058  2F02      5419          move.l    D2,-(A7)
0800305A  2F04      5420          move.l    D4,-(A7)
0800305C  6100 FF20 5421          bsr       @itoa_convert
08003060  DEFC 000C 5422          add.w     #12,A7
08003064  2800      5423          move.l    D0,D4
08003066  2044      5424          move.l    D4,A0
08003068  4210      5425          clr.b     (A0)
0800306A  2003      5426          move.l    D3,D0
                    5427   ltoa_4:
0800306C  4CDF 003C 5428          movem.l   (A7)+,D2/D3/D4/D5
08003070  4E5E      5429          unlk      A6
08003072  4E75      5430          rts
                    5431   _ultoa:
08003074  4E56 0000 5432          link      A6,#0
08003078  48E7 3800 5433          movem.l   D2/D3/D4,-(A7)
0800307C  262E 0010 5434          move.l    16(A6),D3
08003080  282E 000C 5435          move.l    12(A6),D4
08003084  2404      5436          move.l    D4,D2
08003086  0C83 0000 5437          cmp.l     #2,D3
0800308A  0002      
0800308C  6D08      5438          blt.s     ultoa_3
0800308E  0C83 0000 5439          cmp.l     #36,D3
08003092  0024      
08003094  6F04      5440          ble.s     ultoa_1
                    5441   ultoa_3:
08003096  2004      5442          move.l    D4,D0
08003098  6018      5443          bra.s     ultoa_4
                    5444   ultoa_1:
0800309A  2F03      5445          move.l    D3,-(A7)
0800309C  2F2E 0008 5446          move.l    8(A6),-(A7)
080030A0  2F02      5447          move.l    D2,-(A7)
080030A2  6100 FEDA 5448          bsr       @itoa_convert
080030A6  DEFC 000C 5449          add.w     #12,A7
080030AA  2400      5450          move.l    D0,D2
080030AC  2042      5451          move.l    D2,A0
080030AE  4210      5452          clr.b     (A0)
080030B0  2004      5453          move.l    D4,D0
                    5454   ultoa_4:
080030B2  4CDF 001C 5455          movem.l   (A7)+,D2/D3/D4
080030B6  4E5E      5456          unlk      A6
080030B8  4E75      5457          rts
                    5458   _itoa:
080030BA  4E56 0000 5459          link      A6,#0
080030BE  2F2E 0010 5460          move.l    16(A6),-(A7)
080030C2  2F2E 000C 5461          move.l    12(A6),-(A7)
080030C6  2F2E 0008 5462          move.l    8(A6),-(A7)
080030CA  6100 FF24 5463          bsr       _ltoa
080030CE  DEFC 000C 5464          add.w     #12,A7
080030D2  4E5E      5465          unlk      A6
080030D4  4E75      5466          rts
                    5467   _strlen:
080030D6  206F 0004 5468          move.l    (4,A7),A0
080030DA  2248      5469          move.l    A0,A1
                    5470   strlen_1:
080030DC  4A19      5471          tst.b     (A1)+
080030DE  66FC      5472          bne       strlen_1
080030E0  2009      5473          move.l    A1,D0
080030E2  9088      5474          sub.l     A0,D0
080030E4  5380      5475          subq.l    #1,D0
080030E6  4E75      5476          rts
                    5477   _putch:
080030E8  4E56 0000 5478          link      A6,#0
080030EC  48E7 2000 5479          movem.l   D2,-(A7)
080030F0  242E 0008 5480          move.l    8(A6),D2
080030F4  0C82 0000 5481          cmp.l     #10,D2
080030F8  000A      
080030FA  660A      5482          bne.s     putch_1
080030FC  4878 000D 5483          pea       13
08003100  6100 CFF4 5484          bsr       __putch
08003104  584F      5485          addq.w    #4,A7
                    5486   putch_1:
08003106  2F02      5487          move.l    D2,-(A7)
08003108  6100 CFEC 5488          bsr       __putch
0800310C  584F      5489          addq.w    #4,A7
0800310E  2002      5490          move.l    D2,D0
08003110  4CDF 0004 5491          movem.l   (A7)+,D2
08003114  4E5E      5492          unlk      A6
08003116  4E75      5493          rts
                    5494   _getch:
08003118  48E7 2000 5495          movem.l   D2,-(A7)
0800311C  2439 0800 5496          move.l    __ungetbuf,D2
08003120  3D3E      
08003122  2039 0800 5497          move.l    __ungetbuf,D0
08003126  3D3E      
08003128  0C80 FFFF 5498          cmp.l     #-1,D0
0800312C  FFFF      
0800312E  670C      5499          beq.s     getch_1
08003130  23FC FFFF 5500          move.l    #-1,__ungetbuf
08003134  FFFF 0800 
08003138  3D3E      
0800313A  6010      5501          bra.s     getch_3
                    5502   getch_1:
0800313C  6100 CFE6 5503          bsr       __getch
08003140  2400      5504          move.l    D0,D2
08003142  0C80 0000 5505          cmp.l     #13,D0
08003146  000D      
08003148  6602      5506          bne.s     getch_3
0800314A  740A      5507          moveq     #10,D2
                    5508   getch_3:
0800314C  2002      5509          move.l    D2,D0
0800314E  4CDF 0004 5510          movem.l   (A7)+,D2
08003152  4E75      5511          rts
                    5512   _strcpy:
08003154  206F 0004 5513          move.l    (4,A7),A0
08003158  226F 0008 5514          move.l    (8,A7),A1
0800315C  2008      5515          move.l    A0,D0
                    5516   strcpy_1:
0800315E  10D9      5517          move.b    (A1)+,(A0)+
08003160  66FC      5518          bne       strcpy_1
08003162  4E75      5519          rts
                    5520          section   const
08003164            5521                   align
                    5522   
                    5523   
                    5524   @m68kus~1_1:
08003164  0D0A 456E 5525          dc.b      13,10,69,110,116,101,114,32,52,32,98,121,116
08003168  7465 7220 
0800316C  3420 6279 
08003170  74        
08003171  6573 206F 5526          dc.b      101,115,32,111,102,32,72,101,120,105,100,101
08003175  6620 4865 
08003179  7869 6465 
0800317D  6369 6D61 5527          dc.b      99,105,109,97,108,32,116,101,115,116,32,100
08003181  6C20 7465 
08003185  7374 2064 
08003189  6174 612E 5528          dc.b      97,116,97,46,0
0800318D  00        
                    5529   @m68kus~1_2:
0800318E  0D0A 456E 5530          dc.b      13,10,69,110,116,101,114,32,70,105,114,115,116
08003192  7465 7220 
08003196  4669 7273 
0800319A  74        
0800319B  2062 7974 5531          dc.b      32,98,121,116,101,58,32,0
0800319F  653A 2000 
                    5532   @m68kus~1_3:
080031A4  2578 00   5533          dc.b      37,120,0
                    5534   @m68kus~1_4:
080031A8  456E 7465 5535          dc.b      69,110,116,101,114,32,83,101,99,111,110,100
080031AC  7220 5365 
080031B0  636F 6E64 
080031B4  2062 7974 5536          dc.b      32,98,121,116,101,58,32,0
080031B8  653A 2000 
                    5537   @m68kus~1_5:
080031BC  456E 7465 5538          dc.b      69,110,116,101,114,32,84,104,105,114,100,32
080031C0  7220 5468 
080031C4  6972 6420 
080031C8  6279 7465 5539          dc.b      98,121,116,101,58,32,0
080031CC  3A20 00   
                    5540   @m68kus~1_6:
080031D0  456E 7465 5541          dc.b      69,110,116,101,114,32,70,111,117,114,116,104
080031D4  7220 466F 
080031D8  7572 7468 
080031DC  2062 7974 5542          dc.b      32,98,121,116,101,58,32,0
080031E0  653A 2000 
                    5543   @m68kus~1_7:
080031E4  5661 6C69 5544          dc.b      86,97,108,105,100,32,97,100,100,114,101,115
080031E8  6420 6164 
080031EC  6472 6573 
080031F0  7365 7320 5545          dc.b      115,101,115,32,102,111,114,32,116,104,105,115
080031F4  666F 7220 
080031F8  7468 6973 
080031FC  2070 726F 5546          dc.b      32,112,114,111,103,114,97,109,32,97,114,101
08003200  6772 616D 
08003204  2061 7265 
08003208  3A20 2430 5547          dc.b      58,32,36,48,57,48,48,32,48,48,48,48,32,32,45
0800320C  3930 3020 
08003210  3030 3030 
08003214  2020 2D   
08003217  2024 3039 5548          dc.b      32,36,48,57,55,70,32,70,70,70,70,0
0800321B  3746 2046 
0800321F  4646 4600 
                    5549   @m68kus~1_8:
08003224  0D0A 456E 5550          dc.b      13,10,69,110,116,101,114,32,83,116,97,114,116
08003228  7465 7220 
0800322C  5374 6172 
08003230  74        
08003231  2041 6464 5551          dc.b      32,65,100,100,114,101,115,115,58,32,0
08003235  7265 7373 
08003239  3A20 00   
                    5552   @m68kus~1_9:
0800323C  456E 7465 5553          dc.b      69,110,116,101,114,32,69,110,100,32,65,100,100
08003240  7220 456E 
08003244  6420 4164 
08003248  64        
08003249  7265 7373 5554          dc.b      114,101,115,115,58,32,0
0800324D  3A20 00   
                    5555   @m68kus~1_10:
08003250  4552 524F 5556          dc.b      69,82,82,79,82,46,32,80,108,101,97,115,101,32
08003254  522E 2050 
08003258  6C65 6173 
0800325C  6520      
0800325E  456E 7465 5557          dc.b      69,110,116,101,114,32,97,32,118,97,108,105,100
08003262  7220 6120 
08003266  7661 6C69 
0800326A  64        
0800326B  2053 7461 5558          dc.b      32,83,116,97,114,116,32,65,100,100,114,101,115
0800326F  7274 2041 
08003273  6464 7265 
08003277  73        
08003278  733A 2000 5559          dc.b      115,58,32,0
                    5560   @m68kus~1_11:
0800327C  0D0A 4552 5561          dc.b      13,10,69,82,82,79,82,46,32,80,108,101,97,115
08003280  524F 522E 
08003284  2050 6C65 
08003288  6173      
0800328A  6520 456E 5562          dc.b      101,32,69,110,116,101,114,32,97,32,118,97,108
0800328E  7465 7220 
08003292  6120 7661 
08003296  6C        
08003297  6964 2045 5563          dc.b      105,100,32,69,110,100,32,65,100,100,114,101
0800329B  6E64 2041 
0800329F  6464 7265 
080032A3  7373 3A20 5564          dc.b      115,115,58,32,0
080032A7  00        
                    5565   @m68kus~1_12:
080032A8  0D0A 4552 5566          dc.b      13,10,69,82,82,79,82,46,32,80,108,101,97,115
080032AC  524F 522E 
080032B0  2050 6C65 
080032B4  6173      
080032B6  6520 656E 5567          dc.b      101,32,101,110,116,101,114,32,97,110,32,69,110
080032BA  7465 7220 
080032BE  616E 2045 
080032C2  6E        
080032C3  6420 4164 5568          dc.b      100,32,65,100,100,114,101,115,115,32,108,97
080032C7  6472 6573 
080032CB  7320 6C61 
080032CF  7267 6572 5569          dc.b      114,103,101,114,32,116,104,97,110,32,116,104
080032D3  2074 6861 
080032D7  6E20 7468 
080032DB  6520 5374 5570          dc.b      101,32,83,116,97,114,116,32,65,100,100,114,101
080032DF  6172 7420 
080032E3  4164 6472 
080032E7  65        
080032E8  7373 00   5571          dc.b      115,115,0
                    5572   @m68kus~1_13:
080032EC  0D0A 456E 5573          dc.b      13,10,69,110,116,101,114,32,69,110,100,32,65
080032F0  7465 7220 
080032F4  456E 6420 
080032F8  41        
080032F9  6464 7265 5574          dc.b      100,100,114,101,115,115,58,32,0
080032FD  7373 3A20 
08003301  00        
                    5575   @m68kus~1_14:
08003302  0D0A 4669 5576          dc.b      13,10,70,105,108,108,105,110,103,32,65,100,100
08003306  6C6C 696E 
0800330A  6720 4164 
0800330E  64        
0800330F  7265 7373 5577          dc.b      114,101,115,115,101,115,32,91,36,37,48,56,88
08003313  6573 205B 
08003317  2425 3038 
0800331B  58        
0800331C  202D 2024 5578          dc.b      32,45,32,36,37,48,56,88,93,32,119,105,116,104
08003320  2530 3858 
08003324  5D20 7769 
08003328  7468      
0800332A  2074 6573 5579          dc.b      32,116,101,115,116,32,100,97,116,97,0
0800332E  7420 6461 
08003332  7461 00   
                    5580   @m68kus~1_15:
08003336  0D0A 4164 5581          dc.b      13,10,65,100,100,114,101,115,115,32,36,37,48
0800333A  6472 6573 
0800333E  7320 2425 
08003342  30        
08003343  3858 2062 5582          dc.b      56,88,32,98,101,105,110,103,32,102,105,108,108
08003347  6569 6E67 
0800334B  2066 696C 
0800334F  6C        
08003350  6564 2077 5583          dc.b      101,100,32,119,105,116,104,32,36,37,48,50,88
08003354  6974 6820 
08003358  2425 3032 
0800335C  58        
0800335D  00        5584          dc.b      0
                    5585   @m68kus~1_16:
0800335E  0D0A 5772 5586          dc.b      13,10,87,114,105,116,105,110,103,32,116,111
08003362  6974 696E 
08003366  6720 746F 
0800336A  206D 656D 5587          dc.b      32,109,101,109,111,114,121,32,67,111,109,112
0800336E  6F72 7920 
08003372  436F 6D70 
08003376  6C65 7465 5588          dc.b      108,101,116,101,46,13,10,69,110,116,101,114
0800337A  2E0D 0A45 
0800337E  6E74 6572 
08003382  2027 3127 5589          dc.b      32,39,49,39,32,116,111,32,114,101,97,100,32
08003386  2074 6F20 
0800338A  7265 6164 
0800338E  20        
0800338F  6261 636B 5590          dc.b      98,97,99,107,32,116,104,101,32,109,101,109,111
08003393  2074 6865 
08003397  206D 656D 
0800339B  6F        
0800339C  7279 2E20 5591          dc.b      114,121,46,32,69,110,116,101,114,32,39,48,39
080033A0  456E 7465 
080033A4  7220 2730 
080033A8  27        
080033A9  2074 6F20 5592          dc.b      32,116,111,32,101,120,105,116,32,112,114,111
080033AD  6578 6974 
080033B1  2070 726F 
080033B5  6772 616D 5593          dc.b      103,114,97,109,46,0
080033B9  2E00      
                    5594   @m68kus~1_17:
080033BC  0D0A 2425 5595          dc.b      13,10,36,37,48,50,88,32,82,101,97,100,32,102
080033C0  3032 5820 
080033C4  5265 6164 
080033C8  2066      
080033CA  726F 6D20 5596          dc.b      114,111,109,32,97,100,100,114,101,115,115,32
080033CE  6164 6472 
080033D2  6573 7320 
080033D6  2425 3038 5597          dc.b      36,37,48,56,88,0
080033DA  5800      
                    5598   @m68kus~1_18:
080033DC  0D0A 5072 5599          dc.b      13,10,80,114,111,103,114,97,109,32,69,110,100
080033E0  6F67 7261 
080033E4  6D20 456E 
080033E8  64        
080033E9  6564 00   5600          dc.b      101,100,0
                    5601   @m68kus~1_19:
080033EC  0D0A 456E 5602          dc.b      13,10,69,110,116,101,114,32,52,32,119,111,114
080033F0  7465 7220 
080033F4  3420 776F 
080033F8  72        
080033F9  6473 2028 5603          dc.b      100,115,32,40,50,32,98,121,116,101,115,41,32
080033FD  3220 6279 
08003401  7465 7329 
08003405  20        
08003406  6F66 2048 5604          dc.b      111,102,32,72,101,120,105,100,101,99,105,109
0800340A  6578 6964 
0800340E  6563 696D 
08003412  616C 2074 5605          dc.b      97,108,32,116,101,115,116,32,100,97,116,97,46
08003416  6573 7420 
0800341A  6461 7461 
0800341E  2E        
0800341F  00        5606          dc.b      0
                    5607   @m68kus~1_20:
08003420  0D0A 456E 5608          dc.b      13,10,69,110,116,101,114,32,70,105,114,115,116
08003424  7465 7220 
08003428  4669 7273 
0800342C  74        
0800342D  2077 6F72 5609          dc.b      32,119,111,114,100,58,32,0
08003431  643A 2000 
                    5610   @m68kus~1_21:
08003436  456E 7465 5611          dc.b      69,110,116,101,114,32,83,101,99,111,110,100
0800343A  7220 5365 
0800343E  636F 6E64 
08003442  2077 6F72 5612          dc.b      32,119,111,114,100,58,32,0
08003446  643A 2000 
                    5613   @m68kus~1_22:
0800344A  456E 7465 5614          dc.b      69,110,116,101,114,32,84,104,105,114,100,32
0800344E  7220 5468 
08003452  6972 6420 
08003456  776F 7264 5615          dc.b      119,111,114,100,58,32,0
0800345A  3A20 00   
                    5616   @m68kus~1_23:
0800345E  456E 7465 5617          dc.b      69,110,116,101,114,32,70,111,117,114,116,104
08003462  7220 466F 
08003466  7572 7468 
0800346A  2077 6F72 5618          dc.b      32,119,111,114,100,58,32,0
0800346E  643A 2000 
                    5619   @m68kus~1_24:
08003472  5661 6C69 5620          dc.b      86,97,108,105,100,32,97,100,100,114,101,115
08003476  6420 6164 
0800347A  6472 6573 
0800347E  7365 7320 5621          dc.b      115,101,115,32,102,111,114,32,116,104,105,115
08003482  666F 7220 
08003486  7468 6973 
0800348A  2070 726F 5622          dc.b      32,112,114,111,103,114,97,109,32,97,114,101
0800348E  6772 616D 
08003492  2061 7265 
08003496  3A20 2430 5623          dc.b      58,32,36,48,57,48,48,32,48,48,48,48,32,45,32
0800349A  3930 3020 
0800349E  3030 3030 
080034A2  202D 20   
080034A5  2430 3937 5624          dc.b      36,48,57,55,70,32,70,70,70,70,0
080034A9  4620 4646 
080034AD  4646 00   
                    5625   @m68kus~1_25:
080034B0  0D0A 466F 5626          dc.b      13,10,70,111,114,32,116,104,105,115,32,116,101
080034B4  7220 7468 
080034B8  6973 2074 
080034BC  65        
080034BD  7374 2C20 5627          dc.b      115,116,44,32,116,104,101,32,115,116,97,114
080034C1  7468 6520 
080034C5  7374 6172 
080034C9  7420 616E 5628          dc.b      116,32,97,110,100,32,101,110,100,32,97,100,100
080034CD  6420 656E 
080034D1  6420 6164 
080034D5  64        
080034D6  7265 7373 5629          dc.b      114,101,115,115,101,115,32,109,117,115,116,32
080034DA  6573 206D 
080034DE  7573 7420 
080034E2  616C 6967 5630          dc.b      97,108,105,103,110,32,116,111,32,97,110,32,101
080034E6  6E20 746F 
080034EA  2061 6E20 
080034EE  65        
080034EF  7665 6E20 5631          dc.b      118,101,110,32,97,100,100,114,101,115,115,0
080034F3  6164 6472 
080034F7  6573 7300 
                    5632   @m68kus~1_26:
080034FC  4552 524F 5633          dc.b      69,82,82,79,82,46,32,80,108,101,97,115,101,32
08003500  522E 2050 
08003504  6C65 6173 
08003508  6520      
0800350A  456E 7465 5634          dc.b      69,110,116,101,114,32,97,32,118,97,108,105,100
0800350E  7220 6120 
08003512  7661 6C69 
08003516  64        
08003517  2045 6E64 5635          dc.b      32,69,110,100,32,65,100,100,114,101,115,115
0800351B  2041 6464 
0800351F  7265 7373 
08003523  3A20 00   5636          dc.b      58,32,0
                    5637   @m68kus~1_27:
08003526  4552 524F 5638          dc.b      69,82,82,79,82,46,32,80,108,101,97,115,101,32
0800352A  522E 2050 
0800352E  6C65 6173 
08003532  6520      
08003534  656E 7465 5639          dc.b      101,110,116,101,114,32,97,110,32,69,110,100
08003538  7220 616E 
0800353C  2045 6E64 
08003540  2041 6464 5640          dc.b      32,65,100,100,114,101,115,115,32,108,97,114
08003544  7265 7373 
08003548  206C 6172 
0800354C  6765 7220 5641          dc.b      103,101,114,32,116,104,97,110,32,116,104,101
08003550  7468 616E 
08003554  2074 6865 
08003558  2053 7461 5642          dc.b      32,83,116,97,114,116,32,65,100,100,114,101,115
0800355C  7274 2041 
08003560  6464 7265 
08003564  73        
08003565  7300      5643          dc.b      115,0
                    5644   @m68kus~1_28:
08003568  0D0A 4164 5645          dc.b      13,10,65,100,100,114,101,115,115,101,115,32
0800356C  6472 6573 
08003570  7365 7320 
08003574  2425 3038 5646          dc.b      36,37,48,56,88,32,45,32,36,37,48,56,88,32,98
08003578  5820 2D20 
0800357C  2425 3038 
08003580  5820 62   
08003583  6569 6E67 5647          dc.b      101,105,110,103,32,102,105,108,108,101,100,32
08003587  2066 696C 
0800358B  6C65 6420 
0800358F  7769 7468 5648          dc.b      119,105,116,104,32,36,37,48,52,88,0
08003593  2024 2530 
08003597  3458 00   
                    5649   @m68kus~1_29:
0800359A  0D0A 5661 5650          dc.b      13,10,86,97,108,117,101,115,32,36,37,48,50,88
0800359E  6C75 6573 
080035A2  2024 2530 
080035A6  3258      
080035A8  2024 2530 5651          dc.b      32,36,37,48,50,88,32,102,111,117,110,100,32
080035AC  3258 2066 
080035B0  6F75 6E64 
080035B4  20        
080035B5  6174 2061 5652          dc.b      97,116,32,97,100,100,114,101,115,115,101,115
080035B9  6464 7265 
080035BD  7373 6573 
080035C1  2024 2530 5653          dc.b      32,36,37,48,56,88,32,45,32,36,37,48,56,88,0
080035C5  3858 202D 
080035C9  2024 2530 
080035CD  3858 00   
                    5654   @m68kus~1_30:
080035D0  0D0A 456E 5655          dc.b      13,10,69,110,116,101,114,32,52,32,108,111,110
080035D4  7465 7220 
080035D8  3420 6C6F 
080035DC  6E        
080035DD  6720 776F 5656          dc.b      103,32,119,111,114,100,115,32,40,52,32,98,121
080035E1  7264 7320 
080035E5  2834 2062 
080035E9  79        
080035EA  7465 7329 5657          dc.b      116,101,115,41,32,111,102,32,72,101,120,105
080035EE  206F 6620 
080035F2  4865 7869 
080035F6  6465 6369 5658          dc.b      100,101,99,105,109,97,108,32,116,101,115,116
080035FA  6D61 6C20 
080035FE  7465 7374 
08003602  2064 6174 5659          dc.b      32,100,97,116,97,46,0
08003606  612E 00   
                    5660   @m68kus~1_31:
0800360A  0D0A 456E 5661          dc.b      13,10,69,110,116,101,114,32,70,105,114,115,116
0800360E  7465 7220 
08003612  4669 7273 
08003616  74        
08003617  206C 6F6E 5662          dc.b      32,108,111,110,103,32,119,111,114,100,58,32
0800361B  6720 776F 
0800361F  7264 3A20 
08003623  00        5663          dc.b      0
                    5664   @m68kus~1_32:
08003624  456E 7465 5665          dc.b      69,110,116,101,114,32,83,101,99,111,110,100
08003628  7220 5365 
0800362C  636F 6E64 
08003630  206C 6F6E 5666          dc.b      32,108,111,110,103,32,119,111,114,100,58,32
08003634  6720 776F 
08003638  7264 3A20 
0800363C  00        5667          dc.b      0
                    5668   @m68kus~1_33:
0800363E  456E 7465 5669          dc.b      69,110,116,101,114,32,84,104,105,114,100,32
08003642  7220 5468 
08003646  6972 6420 
0800364A  6C6F 6E67 5670          dc.b      108,111,110,103,32,119,111,114,100,58,32,0
0800364E  2077 6F72 
08003652  643A 2000 
                    5671   @m68kus~1_34:
08003656  456E 7465 5672          dc.b      69,110,116,101,114,32,70,111,117,114,116,104
0800365A  7220 466F 
0800365E  7572 7468 
08003662  206C 6F6E 5673          dc.b      32,108,111,110,103,32,119,111,114,100,58,32
08003666  6720 776F 
0800366A  7264 3A20 
0800366E  00        5674          dc.b      0
                    5675   @m68kus~1_35:
08003670  0D0A 4164 5676          dc.b      13,10,65,100,100,114,101,115,115,101,115,32
08003674  6472 6573 
08003678  7365 7320 
0800367C  2425 3038 5677          dc.b      36,37,48,56,88,32,45,32,36,37,48,56,88,32,98
08003680  5820 2D20 
08003684  2425 3038 
08003688  5820 62   
0800368B  6569 6E67 5678          dc.b      101,105,110,103,32,102,105,108,108,101,100,32
0800368F  2066 696C 
08003693  6C65 6420 
08003697  7769 7468 5679          dc.b      119,105,116,104,32,36,37,48,56,88,0
0800369B  2024 2530 
0800369F  3858 00   
                    5680   @m68kus~1_36:
080036A2  0D0A 5661 5681          dc.b      13,10,86,97,108,117,101,115,32,36,37,48,50,88
080036A6  6C75 6573 
080036AA  2024 2530 
080036AE  3258      
080036B0  2024 2530 5682          dc.b      32,36,37,48,50,88,32,36,37,48,50,88,32,36,37
080036B4  3258 2024 
080036B8  2530 3258 
080036BC  2024 25   
080036BF  3032 5820 5683          dc.b      48,50,88,32,102,111,117,110,100,32,97,116,32
080036C3  666F 756E 
080036C7  6420 6174 
080036CB  20        
080036CC  6164 6472 5684          dc.b      97,100,100,114,101,115,115,101,115,32,36,37
080036D0  6573 7365 
080036D4  7320 2425 
080036D8  3038 5820 5685          dc.b      48,56,88,32,45,32,36,37,48,56,88,0
080036DC  2D20 2425 
080036E0  3038 5800 
                    5686   @m68kus~1_37:
080036E4  0D0A 2578 5687          dc.b      13,10,37,120,0
080036E8  00        
                    5688   @m68kus~1_38:
080036EA  0D0A 426C 5689          dc.b      13,10,66,108,111,99,107,32,105,115,32,115,101
080036EE  6F63 6B20 
080036F2  6973 2073 
080036F6  65        
080036F7  7420 746F 5690          dc.b      116,32,116,111,32,48,0
080036FB  2030 00   
                    5691   @m68kus~1_39:
080036FE  0D0A 426C 5692          dc.b      13,10,66,108,111,99,107,32,105,115,32,115,101
08003702  6F63 6B20 
08003706  6973 2073 
0800370A  65        
0800370B  7420 746F 5693          dc.b      116,32,116,111,32,49,0
0800370F  2031 00   
                    5694   @m68kus~1_40:
08003712  0D0A 5365 5695          dc.b      13,10,83,101,110,100,105,110,103,32,83,116,97
08003716  6E64 696E 
0800371A  6720 5374 
0800371E  61        
0800371F  7274 2043 5696          dc.b      114,116,32,67,111,109,109,97,110,100,46,46,46
08003723  6F6D 6D61 
08003727  6E64 2E2E 
0800372B  2E        
0800372C  00        5697          dc.b      0
                    5698   @m68kus~1_41:
0800372E  0D0A 436F 5699          dc.b      13,10,67,111,110,116,114,111,108,32,82,101,103
08003732  6E74 726F 
08003736  6C20 5265 
0800373A  67        
0800373B  6973 7465 5700          dc.b      105,115,116,101,114,32,105,115,32,37,120,0
0800373F  7220 6973 
08003743  2025 7800 
                    5701   @m68kus~1_42:
08003748  0D0A 5374 5702          dc.b      13,10,83,116,97,114,116,32,67,111,109,109,97
0800374C  6172 7420 
08003750  436F 6D6D 
08003754  61        
08003755  6E64 2052 5703          dc.b      110,100,32,82,101,99,101,105,118,101,100,0
08003759  6563 6569 
0800375D  7665 6400 
                    5704   @m68kus~1_43:
08003762  0D0A 5472 5705          dc.b      13,10,84,114,97,110,115,109,105,116,47,114,101
08003766  616E 736D 
0800376A  6974 2F72 
0800376E  65        
0800376F  6365 6976 5706          dc.b      99,101,105,118,101,32,98,101,102,111,114,101
08003773  6520 6265 
08003777  666F 7265 
0800377B  3A20 2578 5707          dc.b      58,32,37,120,0
0800377F  00        
                    5708   @m68kus~1_44:
08003780  0D0A 5472 5709          dc.b      13,10,84,114,97,110,115,109,105,116,47,114,101
08003784  616E 736D 
08003788  6974 2F72 
0800378C  65        
0800378D  6365 6976 5710          dc.b      99,101,105,118,101,32,97,102,116,101,114,58
08003791  6520 6166 
08003795  7465 723A 
08003799  2025 7800 5711          dc.b      32,37,120,0
                    5712   @m68kus~1_45:
0800379E  0D0A 5365 5713          dc.b      13,10,83,101,110,100,105,110,103,32,97,100,100
080037A2  6E64 696E 
080037A6  6720 6164 
080037AA  64        
080037AB  7265 7373 5714          dc.b      114,101,115,115,0
080037AF  00        
                    5715   @m68kus~1_46:
080037B0  0D0A 4869 5716          dc.b      13,10,72,105,103,104,32,98,121,116,101,32,97
080037B4  6768 2062 
080037B8  7974 6520 
080037BC  61        
080037BD  6464 7265 5717          dc.b      100,100,114,101,115,115,32,115,101,110,116,0
080037C1  7373 2073 
080037C5  656E 7400 
                    5718   @m68kus~1_47:
080037CA  0D0A 4C6F 5719          dc.b      13,10,76,111,119,32,98,121,116,101,32,97,100
080037CE  7720 6279 
080037D2  7465 2061 
080037D6  64        
080037D7  6472 6573 5720          dc.b      100,114,101,115,115,32,115,101,110,116,0
080037DB  7320 7365 
080037DF  6E74 00   
                    5721   @m68kus~1_48:
080037E2  0D0A 4461 5722          dc.b      13,10,68,97,116,97,32,87,114,105,116,101,110
080037E6  7461 2057 
080037EA  7269 7465 
080037EE  6E        
080037EF  00        5723          dc.b      0
                    5724   @m68kus~1_49:
080037F0  0D0A 4441 5725          dc.b      13,10,68,65,84,65,32,82,69,65,68,32,73,83,58
080037F4  5441 2052 
080037F8  4541 4420 
080037FC  4953 3A   
080037FF  2025 3032 5726          dc.b      32,37,48,50,88,0
08003803  5800      
                    5727   @m68kus~1_50:
08003806  0D0A 426C 5728          dc.b      13,10,66,108,111,99,107,32,83,101,108,58,32
0800380A  6F63 6B20 
0800380E  5365 6C3A 
08003812  20        
08003813  2558 00   5729          dc.b      37,88,0
                    5730   @m68kus~1_51:
08003816  0D0A 4164 5731          dc.b      13,10,65,100,100,114,101,115,115,32,72,105,103
0800381A  6472 6573 
0800381E  7320 4869 
08003822  67        
08003823  683A 2025 5732          dc.b      104,58,32,37,88,0
08003827  5800      
                    5733   @m68kus~1_52:
0800382A  0D0A 4164 5734          dc.b      13,10,65,100,100,114,101,115,115,32,76,111,119
0800382E  6472 6573 
08003832  7320 4C6F 
08003836  77        
08003837  3A20 2558 5735          dc.b      58,32,37,88,0
0800383B  00        
                    5736   @m68kus~1_53:
0800383C  0D0A 5365 5737          dc.b      13,10,83,101,110,100,105,110,103,32,83,108,97
08003840  6E64 696E 
08003844  6720 536C 
08003848  61        
08003849  7665 2041 5738          dc.b      118,101,32,65,100,100,114,101,115,115,0
0800384D  6464 7265 
08003851  7373 00   
                    5739   @m68kus~1_54:
08003854  0D0A 5365 5740          dc.b      13,10,83,101,110,100,105,110,103,32,67,111,110
08003858  6E64 696E 
0800385C  6720 436F 
08003860  6E        
08003861  7472 6F6C 5741          dc.b      116,114,111,108,32,66,121,116,101,0
08003865  2042 7974 
08003869  6500      
                    5742   @m68kus~1_55:
0800386C  0D0A 4C45 5743          dc.b      13,10,76,69,68,32,119,105,108,108,32,112,117
08003870  4420 7769 
08003874  6C6C 2070 
08003878  75        
08003879  6C73 6520 5744          dc.b      108,115,101,32,79,78,32,97,110,100,32,79,70
0800387D  4F4E 2061 
08003881  6E64 204F 
08003885  46        
08003886  4620 6174 5745          dc.b      70,32,97,116,32,97,32,102,114,101,113,117,101
0800388A  2061 2066 
0800388E  7265 7175 
08003892  65        
08003893  6E63 7920 5746          dc.b      110,99,121,32,111,102,32,53,48,48,109,115,44
08003897  6F66 2035 
0800389B  3030 6D73 
0800389F  2C        
080038A0  2077 6974 5747          dc.b      32,119,105,116,104,32,97,32,100,117,116,121
080038A4  6820 6120 
080038A8  6475 7479 
080038AC  2063 7963 5748          dc.b      32,99,121,99,108,101,32,111,102,32,53,48,37
080038B0  6C65 206F 
080038B4  6620 3530 
080038B8  25        
080038B9  00        5749          dc.b      0
                    5750   @m68kus~1_56:
080038BA  0D0A 4175 5751          dc.b      13,10,65,117,116,111,32,73,110,99,114,101,109
080038BE  746F 2049 
080038C2  6E63 7265 
080038C6  6D        
080038C7  656E 7420 5752          dc.b      101,110,116,32,65,48,0
080038CB  4130 00   
                    5753   @m68kus~1_57:
080038CE  0D0A 5365 5754          dc.b      13,10,83,101,116,32,83,108,97,118,101,32,82
080038D2  7420 536C 
080038D6  6176 6520 
080038DA  52        
080038DB  6561 6469 5755          dc.b      101,97,100,105,110,103,32,77,111,100,101,0
080038DF  6E67 204D 
080038E3  6F64 6500 
                    5756   @m68kus~1_58:
080038E8  0D0A 5761 5757          dc.b      13,10,87,97,105,116,32,102,111,114,32,68,97
080038EC  6974 2066 
080038F0  6F72 2044 
080038F4  61        
080038F5  7461 00   5758          dc.b      116,97,0
                    5759   @m68kus~1_59:
080038F8  0D0A 4348 5760          dc.b      13,10,67,72,48,32,68,97,116,97,32,82,101,99
080038FC  3020 4461 
08003900  7461 2052 
08003904  6563      
08003906  6569 7665 5761          dc.b      101,105,118,101,100,0
0800390A  6400      
                    5762   @m68kus~1_60:
0800390C  0D0A 4348 5763          dc.b      13,10,67,72,49,32,68,97,116,97,32,82,101,99
08003910  3120 4461 
08003914  7461 2052 
08003918  6563      
0800391A  6569 7665 5764          dc.b      101,105,118,101,100,0
0800391E  6400      
                    5765   @m68kus~1_61:
08003920  0D0A 4348 5766          dc.b      13,10,67,72,50,32,68,97,116,97,32,82,101,99
08003924  3220 4461 
08003928  7461 2052 
0800392C  6563      
0800392E  6569 7665 5767          dc.b      101,105,118,101,100,0
08003932  6400      
                    5768   @m68kus~1_62:
08003934  0D0A 4348 5769          dc.b      13,10,67,72,51,32,68,97,116,97,32,82,101,99
08003938  3320 4461 
0800393C  7461 2052 
08003940  6563      
08003942  6569 7665 5770          dc.b      101,105,118,101,100,0
08003946  6400      
                    5771   @m68kus~1_63:
08003948  0D0A 4578 5772          dc.b      13,10,69,120,116,46,32,65,110,97,108,111,103
0800394C  742E 2041 
08003950  6E61 6C6F 
08003954  67        
08003955  2053 6F75 5773          dc.b      32,83,111,117,114,99,101,58,32,68,105,115,99
08003959  7263 653A 
0800395D  2044 6973 
08003961  63        
08003962  6F6E 6E65 5774          dc.b      111,110,110,101,99,116,101,100,0
08003966  6374 6564 
0800396A  00        
                    5775   @m68kus~1_64:
0800396C  0D0A 506F 5776          dc.b      13,10,80,111,116,101,110,116,105,111,109,101
08003970  7465 6E74 
08003974  696F 6D65 
08003978  7465 723A 5777          dc.b      116,101,114,58,32,37,100,0
0800397C  2025 6400 
                    5778   @m68kus~1_65:
08003980  0D0A 5468 5779          dc.b      13,10,84,104,101,114,109,105,115,116,111,114
08003984  6572 6D69 
08003988  7374 6F72 
0800398C  3A20 2564 5780          dc.b      58,32,37,100,0
08003990  00        
                    5781   @m68kus~1_66:
08003992  0D0A 5068 5782          dc.b      13,10,80,104,111,116,111,114,101,115,105,115
08003996  6F74 6F72 
0800399A  6573 6973 
0800399E  746F 723A 5783          dc.b      116,111,114,58,32,37,100,0
080039A2  2025 6400 
                    5784   @m68kus~1_67:
080039A6  0D0A 4949 5785          dc.b      13,10,73,73,67,32,112,114,111,103,114,97,109
080039AA  4320 7072 
080039AE  6F67 7261 
080039B2  6D        
080039B3  2077 696C 5786          dc.b      32,119,105,108,108,32,98,101,103,105,110,0
080039B7  6C20 6265 
080039BB  6769 6E00 
                    5787   @m68kus~1_68:
080039C0  0D0A 456E 5788          dc.b      13,10,69,110,116,101,114,32,48,32,46,46,46,32
080039C4  7465 7220 
080039C8  3020 2E2E 
080039CC  2E20      
080039CE  5772 6974 5789          dc.b      87,114,105,116,101,32,83,105,110,103,108,101
080039D2  6520 5369 
080039D6  6E67 6C65 
080039DA  2042 7974 5790          dc.b      32,66,121,116,101,0
080039DE  6500      
                    5791   @m68kus~1_69:
080039E0  0D0A 456E 5792          dc.b      13,10,69,110,116,101,114,32,49,32,46,46,46,32
080039E4  7465 7220 
080039E8  3120 2E2E 
080039EC  2E20      
080039EE  5265 6164 5793          dc.b      82,101,97,100,32,83,105,110,103,108,101,32,66
080039F2  2053 696E 
080039F6  676C 6520 
080039FA  42        
080039FB  7974 6500 5794          dc.b      121,116,101,0
                    5795   @m68kus~1_70:
08003A00  0D0A 456E 5796          dc.b      13,10,69,110,116,101,114,32,50,32,46,46,46,32
08003A04  7465 7220 
08003A08  3220 2E2E 
08003A0C  2E20      
08003A0E  5772 6974 5797          dc.b      87,114,105,116,101,32,68,97,116,97,32,66,108
08003A12  6520 4461 
08003A16  7461 2042 
08003A1A  6C        
08003A1B  6F63 6B00 5798          dc.b      111,99,107,0
                    5799   @m68kus~1_71:
08003A20  0D0A 456E 5800          dc.b      13,10,69,110,116,101,114,32,51,32,46,46,46,32
08003A24  7465 7220 
08003A28  3320 2E2E 
08003A2C  2E20      
08003A2E  5265 6164 5801          dc.b      82,101,97,100,32,68,97,116,97,32,66,108,111
08003A32  2044 6174 
08003A36  6120 426C 
08003A3A  6F        
08003A3B  636B 00   5802          dc.b      99,107,0
                    5803   @m68kus~1_72:
08003A3E  0D0A 456E 5804          dc.b      13,10,69,110,116,101,114,32,52,32,46,46,46,32
08003A42  7465 7220 
08003A46  3420 2E2E 
08003A4A  2E20      
08003A4C  5761 7665 5805          dc.b      87,97,118,101,102,111,114,109,32,68,65,67,32
08003A50  666F 726D 
08003A54  2044 4143 
08003A58  20        
08003A59  616E 6420 5806          dc.b      97,110,100,32,76,69,68,32,66,108,105,110,107
08003A5D  4C45 4420 
08003A61  426C 696E 
08003A65  6B        
08003A66  7900      5807          dc.b      121,0
                    5808   @m68kus~1_73:
08003A68  0D0A 456E 5809          dc.b      13,10,69,110,116,101,114,32,53,32,46,46,46,32
08003A6C  7465 7220 
08003A70  3520 2E2E 
08003A74  2E20      
08003A76  5265 6164 5810          dc.b      82,101,97,100,32,65,110,97,108,111,103,32,105
08003A7A  2041 6E61 
08003A7E  6C6F 6720 
08003A82  69        
08003A83  6E70 7574 5811          dc.b      110,112,117,116,32,102,114,111,109,32,65,68
08003A87  2066 726F 
08003A8B  6D20 4144 
08003A8F  4320 4368 5812          dc.b      67,32,67,104,97,110,110,101,108,13,10,0
08003A93  616E 6E65 
08003A97  6C0D 0A00 
                    5813   @m68kus~1_74:
08003A9C  2563 00   5814          dc.b      37,99,0
                    5815   @m68kus~1_75:
08003AA0  5369 6E67 5816          dc.b      83,105,110,103,108,101,32,66,121,116,101,32
08003AA4  6C65 2042 
08003AA8  7974 6520 
08003AAC  5772 6974 5817          dc.b      87,114,105,116,101,32,73,110,105,116,105,97
08003AB0  6520 496E 
08003AB4  6974 6961 
08003AB8  7465 640D 5818          dc.b      116,101,100,13,10,69,110,116,101,114,32,68,97
08003ABC  0A45 6E74 
08003AC0  6572 2044 
08003AC4  61        
08003AC5  7461 2042 5819          dc.b      116,97,32,66,121,116,101,58,32,0
08003AC9  7974 653A 
08003ACD  2000      
                    5820   @m68kus~1_76:
08003AD0  456E 7465 5821          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,68
08003AD4  7220 5661 
08003AD8  6C69 6420 
08003ADC  44        
08003ADD  6174 6120 5822          dc.b      97,116,97,32,66,121,116,101,58,32,0
08003AE1  4279 7465 
08003AE5  3A20 00   
                    5823   @m68kus~1_77:
08003AE8  456E 7465 5824          dc.b      69,110,116,101,114,32,65,100,100,114,101,115
08003AEC  7220 4164 
08003AF0  6472 6573 
08003AF4  7320 2830 5825          dc.b      115,32,40,48,48,48,48,48,32,45,32,49,70,70,70
08003AF8  3030 3030 
08003AFC  202D 2031 
08003B00  4646 46   
08003B03  4629 3A20 5826          dc.b      70,41,58,32,0
08003B07  00        
                    5827   @m68kus~1_78:
08003B08  456E 7465 5828          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,65
08003B0C  7220 5661 
08003B10  6C69 6420 
08003B14  41        
08003B15  6464 7265 5829          dc.b      100,100,114,101,115,115,58,32,0
08003B19  7373 3A20 
08003B1D  00        
                    5830   @m68kus~1_79:
08003B1E  0D0A 5772 5831          dc.b      13,10,87,114,105,116,105,110,103,32,68,97,116
08003B22  6974 696E 
08003B26  6720 4461 
08003B2A  74        
08003B2B  6120 4279 5832          dc.b      97,32,66,121,116,101,32,46,46,46,0
08003B2F  7465 202E 
08003B33  2E2E 00   
                    5833   @m68kus~1_80:
08003B36  0D0A 5369 5834          dc.b      13,10,83,105,110,103,108,101,32,66,121,116,101
08003B3A  6E67 6C65 
08003B3E  2042 7974 
08003B42  65        
08003B43  2052 6561 5835          dc.b      32,82,101,97,100,32,73,110,105,116,105,97,116
08003B47  6420 496E 
08003B4B  6974 6961 
08003B4F  74        
08003B50  6564 0D0A 5836          dc.b      101,100,13,10,69,110,116,101,114,32,65,100,100
08003B54  456E 7465 
08003B58  7220 4164 
08003B5C  64        
08003B5D  7265 7373 5837          dc.b      114,101,115,115,32,40,48,48,48,48,48,32,45,32
08003B61  2028 3030 
08003B65  3030 3020 
08003B69  2D20      
08003B6B  3146 4646 5838          dc.b      49,70,70,70,70,41,58,32,0
08003B6F  4629 3A20 
08003B73  00        
                    5839   @m68kus~1_81:
08003B74  0D0A 5265 5840          dc.b      13,10,82,101,97,100,105,110,103,32,68,97,116
08003B78  6164 696E 
08003B7C  6720 4461 
08003B80  74        
08003B81  6120 4279 5841          dc.b      97,32,66,121,116,101,32,46,46,46,0
08003B85  7465 202E 
08003B89  2E2E 00   
                    5842   @m68kus~1_82:
08003B8C  0D0A 4461 5843          dc.b      13,10,68,97,116,97,32,66,108,111,99,107,32,87
08003B90  7461 2042 
08003B94  6C6F 636B 
08003B98  2057      
08003B9A  7269 7465 5844          dc.b      114,105,116,101,32,73,110,105,116,105,97,116
08003B9E  2049 6E69 
08003BA2  7469 6174 
08003BA6  6564 0D0A 5845          dc.b      101,100,13,10,69,110,116,101,114,32,83,116,97
08003BAA  456E 7465 
08003BAE  7220 5374 
08003BB2  61        
08003BB3  7274 696E 5846          dc.b      114,116,105,110,103,32,65,100,100,114,101,115
08003BB7  6720 4164 
08003BBB  6472 6573 
08003BBF  7320 2830 5847          dc.b      115,32,40,48,48,48,48,48,32,45,32,49,70,70,70
08003BC3  3030 3030 
08003BC7  202D 2031 
08003BCB  4646 46   
08003BCE  4629 3A20 5848          dc.b      70,41,58,32,0
08003BD2  00        
                    5849   @m68kus~1_83:
08003BD4  456E 7465 5850          dc.b      69,110,116,101,114,32,68,97,116,97,32,66,108
08003BD8  7220 4461 
08003BDC  7461 2042 
08003BE0  6C        
08003BE1  6F63 6B20 5851          dc.b      111,99,107,32,83,105,122,101,32,40,48,48,48
08003BE5  5369 7A65 
08003BE9  2028 3030 
08003BED  30        
08003BEE  3030 202D 5852          dc.b      48,48,32,45,32,37,48,53,88,41,58,32,0
08003BF2  2025 3035 
08003BF6  5829 3A20 
08003BFA  00        
                    5853   @m68kus~1_84:
08003BFC  456E 7465 5854          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,66
08003C00  7220 5661 
08003C04  6C69 6420 
08003C08  42        
08003C09  6C6F 636B 5855          dc.b      108,111,99,107,32,83,105,122,101,32,40,48,48
08003C0D  2053 697A 
08003C11  6520 2830 
08003C15  30        
08003C16  3030 3020 5856          dc.b      48,48,48,32,45,32,37,48,53,88,41,58,32,0
08003C1A  2D20 2530 
08003C1E  3558 293A 
08003C22  2000      
                    5857   @m68kus~1_85:
08003C24  456E 7465 5858          dc.b      69,110,116,101,114,32,83,116,97,114,116,105
08003C28  7220 5374 
08003C2C  6172 7469 
08003C30  6E67 2044 5859          dc.b      110,103,32,68,97,116,97,32,66,121,116,101,58
08003C34  6174 6120 
08003C38  4279 7465 
08003C3C  3A        
08003C3D  2000      5860          dc.b      32,0
                    5861   @m68kus~1_86:
08003C40  0D0A 4461 5862          dc.b      13,10,68,97,116,97,32,66,108,111,99,107,32,82
08003C44  7461 2042 
08003C48  6C6F 636B 
08003C4C  2052      
08003C4E  6561 6420 5863          dc.b      101,97,100,32,73,110,105,116,105,97,116,101
08003C52  496E 6974 
08003C56  6961 7465 
08003C5A  640D 0A45 5864          dc.b      100,13,10,69,110,116,101,114,32,83,116,97,114
08003C5E  6E74 6572 
08003C62  2053 7461 
08003C66  72        
08003C67  7469 6E67 5865          dc.b      116,105,110,103,32,65,100,100,114,101,115,115
08003C6B  2041 6464 
08003C6F  7265 7373 
08003C73  2028 3030 5866          dc.b      32,40,48,48,48,48,48,32,45,32,49,70,70,70,70
08003C77  3030 3020 
08003C7B  2D20 3146 
08003C7F  4646 46   
08003C82  293A 2000 5867          dc.b      41,58,32,0
                    5868   @m68kus~1_87:
08003C86  456E 7465 5869          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,65
08003C8A  7220 5661 
08003C8E  6C69 6420 
08003C92  41        
08003C93  6464 7265 5870          dc.b      100,100,114,101,115,115,0
08003C97  7373 00   
                    5871   @m68kus~1_88:
08003C9A  0D0A 5761 5872          dc.b      13,10,87,97,118,101,102,111,114,109,32,68,65
08003C9E  7665 666F 
08003CA2  726D 2044 
08003CA6  41        
08003CA7  4320 616E 5873          dc.b      67,32,97,110,100,32,76,69,68,32,66,108,105,110
08003CAB  6420 4C45 
08003CAF  4420 426C 
08003CB3  696E      
08003CB5  6B79 2049 5874          dc.b      107,121,32,73,110,105,116,105,97,116,101,100
08003CB9  6E69 7469 
08003CBD  6174 6564 
08003CC1  0D0A 00   5875          dc.b      13,10,0
                    5876   @m68kus~1_89:
08003CC4  0D0A 5265 5877          dc.b      13,10,82,101,97,100,32,65,110,97,108,111,103
08003CC8  6164 2041 
08003CCC  6E61 6C6F 
08003CD0  67        
08003CD1  2069 6E70 5878          dc.b      32,105,110,112,117,116,32,102,114,111,109,32
08003CD5  7574 2066 
08003CD9  726F 6D20 
08003CDD  4144 4320 5879          dc.b      65,68,67,32,67,104,97,110,110,101,108,32,73
08003CE1  4368 616E 
08003CE5  6E65 6C20 
08003CE9  49        
08003CEA  6E69 7469 5880          dc.b      110,105,116,105,97,116,101,100,0
08003CEE  6174 6564 
08003CF2  00        
                    5881   @m68kus~1_90:
08003CF4  0D0A 496E 5882          dc.b      13,10,73,110,118,97,108,105,100,32,83,101,108
08003CF8  7661 6C69 
08003CFC  6420 5365 
08003D00  6C        
08003D01  6563 7469 5883          dc.b      101,99,116,105,111,110,44,32,80,108,101,97,115
08003D05  6F6E 2C20 
08003D09  506C 6561 
08003D0D  73        
08003D0E  6520 5365 5884          dc.b      101,32,83,101,108,101,99,116,32,97,110,32,79
08003D12  6C65 6374 
08003D16  2061 6E20 
08003D1A  4F        
08003D1B  7074 696F 5885          dc.b      112,116,105,111,110,32,66,101,116,119,101,101
08003D1F  6E20 4265 
08003D23  7477 6565 
08003D27  6E20 302D 5886          dc.b      110,32,48,45,53,46,0
08003D2B  352E 00   
                    5887   @m68kus~1_91:
08003D2E  0D0A 5072 5888          dc.b      13,10,80,114,111,103,114,97,109,32,101,110,100
08003D32  6F67 7261 
08003D36  6D20 656E 
08003D3A  64        
08003D3B  6564 00   5889          dc.b      101,100,0
                    5890          section   data
08003D3E            5891                   align
                    5892   
                    5893   *********************************************************************************************************************************************************
                    5894   * Section for Initialised Data (in theory should be copied to Ram at startup) but is part of program code as we copy whole program to ram at startup
                    5895   ********************************************************************************************************************************************************
                    5896   
          0800 3D3E 5897   DataStart       equ       *
08003D3E            5898   __ungetbuf:     ds.l      1                    ungetbuffer for stdio functions
08003D42            5899   __allocp:       ds.l      1                    start of free memory block list
08003D46            5900   __heap:         ds.l      1                    begin of free memory
                    5901   
                    5902   
                    5903   @vsscanf_bufx:
08003D4A  0800 3E7A 5904          dc.l      @vsscanf_buf
                    5905   @vsscanf_1:
08003D4E  0A00      5906          dc.b      10,0
                    5907   __ctype:
08003D50  0040 4040 5908          dc.b      0,64,64,64,64,64,64,64,64,64,80,80,80,80,80
08003D54  4040 4040 
08003D58  4040 5050 
08003D5C  5050 50   
08003D5F  4040 4040 5909          dc.b      64,64,64,64,64,64,64,64,64,64,64,64,64,64,64
08003D63  4040 4040 
08003D67  4040 4040 
08003D6B  4040 40   
08003D6E  4040 40D0 5910          dc.b      64,64,64,208,160,160,160,160,160,160,160,160
08003D72  A0A0 A0A0 
08003D76  A0A0 A0A0 
08003D7A  A0A0 A0A0 5911          dc.b      160,160,160,160,160,160,160,140,140,140,140
08003D7E  A0A0 A08C 
08003D82  8C8C 8C   
08003D85  8C8C 8C8C 5912          dc.b      140,140,140,140,140,140,160,160,160,160,160
08003D89  8C8C A0A0 
08003D8D  A0A0 A0   
08003D90  A0A0 8A8A 5913          dc.b      160,160,138,138,138,138,138,138,130,130,130
08003D94  8A8A 8A8A 
08003D98  8282 82   
08003D9B  8282 8282 5914          dc.b      130,130,130,130,130,130,130,130,130,130,130
08003D9F  8282 8282 
08003DA3  8282 82   
08003DA6  8282 8282 5915          dc.b      130,130,130,130,130,130,160,160,160,160,160
08003DAA  8282 A0A0 
08003DAE  A0A0 A0   
08003DB1  A089 8989 5916          dc.b      160,137,137,137,137,137,137,129,129,129,129
08003DB5  8989 8981 
08003DB9  8181 81   
08003DBC  8181 8181 5917          dc.b      129,129,129,129,129,129,129,129,129,129,129
08003DC0  8181 8181 
08003DC4  8181 81   
08003DC7  8181 8181 5918          dc.b      129,129,129,129,129,160,160,160,160,64,0,0,0
08003DCB  81A0 A0A0 
08003DCF  A040 0000 
08003DD3  00        
08003DD4  0000 0000 5919          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003DD8  0000 0000 
08003DDC  0000 0000 
08003DE0  0000 0000 
08003DE4  0000 0000 
08003DE8  0000      
08003DEA  0000 0000 5920          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003DEE  0000 0000 
08003DF2  0000 0000 
08003DF6  0000 0000 
08003DFA  0000 0000 
08003DFE  0000      
08003E00  0000 0000 5921          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003E04  0000 0000 
08003E08  0000 0000 
08003E0C  0000 0000 
08003E10  0000 0000 
08003E14  0000      
08003E16  0000 0000 5922          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003E1A  0000 0000 
08003E1E  0000 0000 
08003E22  0000 0000 
08003E26  0000 0000 
08003E2A  0000      
08003E2C  0000 0000 5923          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003E30  0000 0000 
08003E34  0000 0000 
08003E38  0000 0000 
08003E3C  0000 0000 
08003E40  0000      
08003E42  0000 0000 5924          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003E46  0000 0000 
08003E4A  0000 0000 
08003E4E  0000 00   
                    5925   @itoa_1:
08003E52  2D32 3134 5926          dc.b      45,50,49,52,55,52,56,51,54,52,56,0
08003E56  3734 3833 
08003E5A  3634 3800 
                    5927          section   bss
08003E5E            5928                   align
                    5929   
          0800 3E5E 5930   DataEnd         equ       *                    this label will equate to the address of the last byte of global variable in it
          0000 0120 5931   DataLength      equ       DataEnd-DataStart    length of data needed to copy to Ram on bootup
                    5932   
                    5933   *********************************************************************************************************
                    5934   * Section for uninitialised Data which is set to zero, i.e. we should set this space to zero at starup
                    5935   *********************************************************************************************************
          0800 3E5E 5936   BssStart       equ       *
                    5937   
                    5938   _i:
08003E5E            5939          ds.b      4
                    5940   _x:
08003E62            5941          ds.b      4
                    5942   _y:
08003E66            5943          ds.b      4
                    5944   _z:
08003E6A            5945          ds.b      4
                    5946   _PortA_Count:
08003E6E            5947          ds.b      4
                    5948   _Timer1Count:
08003E72            5949          ds.b      1
                    5950   _Timer2Count:
08003E74            5951          ds.b      1
                    5952   _Timer3Count:
08003E76            5953          ds.b      1
                    5954   _Timer4Count:
08003E78            5955          ds.b      1
                    5956   @vsscanf_buf:
08003E7A            5957          ds.b      80
                    5958          section   heap
08003ECA            5959                  align
                    5960   
          0800 3ECA 5961   BssEnd         equ       *
          0000 006C 5962   BssLength      equ       BssEnd-BssStart       length of zeroed data needed to copy to Ram on bootup
                    5963   
                    5964   *********************************************************************************************************
                    5965   * Section for Heap
                    5966   *********************************************************************************************************
                    5967   
          0800 3ECA 5968   heap           equ       *
08003ECA            5969                  align
          0800 0000

Assembly errors: 0
