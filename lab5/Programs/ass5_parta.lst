680x0 MACRO ASSEMBLER   Version 5.00   (c) 1992-2005 Peter J. Fondse

Date: 28 Mar 2023      Time: 15:15:10          Source: C:\IDE68K\ASS5_PARTA\ASS5_PARTA.SRC

                       1          section   code
                       2   **********************************************************************************************************
                       3   * CSTART.ASM  -  C startup-code
                       4   *
                       5   *          Initialises the system prior to running the users main() program
                       6   *
                       7   *          1) Sets up the user program stack pointer
                       8   *          2) Switches to User mode in the 68000
                       9   *          3) Enables All Interrupts 1-7 on 68000
                      10   *          4) Copies all initialised C program variables from Rom to Ram prior to running main()
                      11   *
                      12   **********************************************************************************************************
00000000              13                   align
                      14   
                      15   
                      16   **********************************************************************************************************
                      17   * The Following ORG Statement marks the address of the start of the this CStart Program
                      18   *
                      19   * The debug Monitor and Flash Load and Program routines assume your program lives here
                      20   **********************************************************************************************************
08000000              21                   org       $08000000
08000000  46FC 2000   22   start:          move.w    #$2000,SR             clear interrupts to enable all, move to supervisor mode
                      23   
                      24   ******************************************************************************************
                      25   * Set unitialised global variables to 0 at startup
                      26   ******************************************************************************************
08000004  207C 0800   27   mainloop        movea.l   #BssStart,a0          point a0 to the start of the initialised data section held in ROM
08000008  3BD2      
0800000A  203C 0000   28                   move.l    #BssLength,d0         figure out how many bytes of C program variables data to copy
0800000E  006C      
08000010  6700 0024   29                   beq       go_main               if no data to copy go straight to program
08000014  10FC 0000   30   Zeroinit        move.b    #0,(a0)+              copy the C program initialise variables from rom to ram
08000018  5380        31                   subq.l    #1,d0
0800001A  66F8        32                   bne       Zeroinit
                      33   
                      34   *******************************************************************************************
                      35   * last minute initialisation before calling main
                      36   *******************************************************************************************
                      37   
0800001C  23FC FFFF   38                   move.l    #-1,__ungetbuf         required for use of scanf() etc in C programs
08000020  FFFF 0800 
08000024  3AB2      
08000026  42B9 0800   39                   clr.l     __allocp               used by malloc() in C
0800002A  3AB6      
0800002C  23FC 0800   40                   move.l    #heap,__heap           pointer to free memory
08000030  3C3E 0800 
08000034  3ABA      
08000036  4EB9 0800   41   go_main         jsr       _main
0800003A  17A0      
0800003C  60C2        42                   bra       start
                      43   
                      44   ; C:\IDE68K\ASS5_PARTA\M68KUSERPROGRAM (DE1).C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                      45   ; #include <stdio.h>
                      46   ; #include <string.h>
                      47   ; #include <ctype.h>
                      48   ; //IMPORTANT
                      49   ; //
                      50   ; // Uncomment one of the two #defines below
                      51   ; // Define StartOfExceptionVectorTable as 08030000 if running programs from sram or
                      52   ; // 0B000000 for running programs from dram
                      53   ; //
                      54   ; // In your labs, you will initially start by designing a system with SRam and later move to
                      55   ; // Dram, so these constants will need to be changed based on the version of the system you have
                      56   ; // building
                      57   ; //
                      58   ; // The working 68k system SOF file posted on canvas that you can use for your pre-lab
                      59   ; // is based around Dram so #define accordingly before building
                      60   ; //#define StartOfExceptionVectorTable 0x08030000
                      61   ; #define StartOfExceptionVectorTable 0x0B000000
                      62   ; /**********************************************************************************************
                      63   ; **	Parallel port addresses
                      64   ; **********************************************************************************************/
                      65   ; #define PortA   *(volatile unsigned char *)(0x00400000)
                      66   ; #define PortB   *(volatile unsigned char *)(0x00400002)
                      67   ; #define PortC   *(volatile unsigned char *)(0x00400004)
                      68   ; #define PortD   *(volatile unsigned char *)(0x00400006)
                      69   ; #define PortE   *(volatile unsigned char *)(0x00400008)
                      70   ; /*********************************************************************************************
                      71   ; **	Hex 7 seg displays port addresses
                      72   ; *********************************************************************************************/
                      73   ; #define HEX_A        *(volatile unsigned char *)(0x00400010)
                      74   ; #define HEX_B        *(volatile unsigned char *)(0x00400012)
                      75   ; #define HEX_C        *(volatile unsigned char *)(0x00400014)    // de2 only
                      76   ; #define HEX_D        *(volatile unsigned char *)(0x00400016)    // de2 only
                      77   ; /**********************************************************************************************
                      78   ; **	LCD display port addresses
                      79   ; **********************************************************************************************/
                      80   ; #define LCDcommand   *(volatile unsigned char *)(0x00400020)
                      81   ; #define LCDdata      *(volatile unsigned char *)(0x00400022)
                      82   ; /********************************************************************************************
                      83   ; **	Timer Port addresses
                      84   ; *********************************************************************************************/
                      85   ; #define Timer1Data      *(volatile unsigned char *)(0x00400030)
                      86   ; #define Timer1Control   *(volatile unsigned char *)(0x00400032)
                      87   ; #define Timer1Status    *(volatile unsigned char *)(0x00400032)
                      88   ; #define Timer2Data      *(volatile unsigned char *)(0x00400034)
                      89   ; #define Timer2Control   *(volatile unsigned char *)(0x00400036)
                      90   ; #define Timer2Status    *(volatile unsigned char *)(0x00400036)
                      91   ; #define Timer3Data      *(volatile unsigned char *)(0x00400038)
                      92   ; #define Timer3Control   *(volatile unsigned char *)(0x0040003A)
                      93   ; #define Timer3Status    *(volatile unsigned char *)(0x0040003A)
                      94   ; #define Timer4Data      *(volatile unsigned char *)(0x0040003C)
                      95   ; #define Timer4Control   *(volatile unsigned char *)(0x0040003E)
                      96   ; #define Timer4Status    *(volatile unsigned char *)(0x0040003E)
                      97   ; /*********************************************************************************************
                      98   ; **	RS232 port addresses
                      99   ; *********************************************************************************************/
                     100   ; #define RS232_Control     *(volatile unsigned char *)(0x00400040)
                     101   ; #define RS232_Status      *(volatile unsigned char *)(0x00400040)
                     102   ; #define RS232_TxData      *(volatile unsigned char *)(0x00400042)
                     103   ; #define RS232_RxData      *(volatile unsigned char *)(0x00400042)
                     104   ; #define RS232_Baud        *(volatile unsigned char *)(0x00400044)
                     105   ; /*********************************************************************************************
                     106   ; **	PIA 1 and 2 port addresses
                     107   ; *********************************************************************************************/
                     108   ; #define PIA1_PortA_Data     *(volatile unsigned char *)(0x00400050)         // combined data and data direction register share same address
                     109   ; #define PIA1_PortA_Control *(volatile unsigned char *)(0x00400052)
                     110   ; #define PIA1_PortB_Data     *(volatile unsigned char *)(0x00400054)         // combined data and data direction register share same address
                     111   ; #define PIA1_PortB_Control *(volatile unsigned char *)(0x00400056)
                     112   ; #define PIA2_PortA_Data     *(volatile unsigned char *)(0x00400060)         // combined data and data direction register share same address
                     113   ; #define PIA2_PortA_Control *(volatile unsigned char *)(0x00400062)
                     114   ; #define PIA2_PortB_data     *(volatile unsigned char *)(0x00400064)         // combined data and data direction register share same address
                     115   ; #define PIA2_PortB_Control *(volatile unsigned char *)(0x00400066)
                     116   ; /*************************************************************
                     117   ; ** IIC Controller registers
                     118   ; **************************************************************/
                     119   ; //IIC Registers
                     120   ; #define IIC_Prescale_Low            (*(volatile unsigned char *)(0x00408000))
                     121   ; #define IIC_Prescale_High           (*(volatile unsigned char *)(0x00408002))
                     122   ; #define IIC_Control                 (*(volatile unsigned char *)(0x00408004))
                     123   ; #define IIC_Transmit_Receive        (*(volatile unsigned char *)(0x00408006))
                     124   ; #define IIC_Command_Status          (*(volatile unsigned char *)(0x00408008))
                     125   ; // I2C Commands
                     126   ; #define WRITE 0x10
                     127   ; /*********************************************************************************************************************************
                     128   ; (( DO NOT initialise global variables here, do it main even if you want 0
                     129   ; (( it's a limitation of the compiler
                     130   ; (( YOU HAVE BEEN WARNED
                     131   ; *********************************************************************************************************************************/
                     132   ; unsigned int i, x, y, z, PortA_Count;
                     133   ; unsigned char Timer1Count, Timer2Count, Timer3Count, Timer4Count ;
                     134   ; /*******************************************************************************************
                     135   ; ** Function Prototypes
                     136   ; *******************************************************************************************/
                     137   ; void Wait1ms(void);
                     138   ; void Wait3ms(void);
                     139   ; void Wait500ms(void);
                     140   ; void Wait1s(void);
                     141   ; void SendI2C(char byte, char cmd);
                     142   ; void DAC_Blinky(void);
                     143   ; void WaitForAck(void);
                     144   ; void Init_LCD(void) ;
                     145   ; void LCDOutchar(int c);
                     146   ; void LCDOutMess(char *theMessage);
                     147   ; void LCDClearln(void);
                     148   ; void LCDline1Message(char *theMessage);
                     149   ; void LCDline2Message(char *theMessage);
                     150   ; int sprintf(char *out, const char *format, ...) ;
                     151   ; /*****************************************************************************************
                     152   ; **	Interrupt service routine for Timers
                     153   ; **
                     154   ; **  Timers 1 - 4 share a common IRQ on the CPU  so this function uses polling to figure
                     155   ; **  out which timer is producing the interrupt
                     156   ; **
                     157   ; *****************************************************************************************/
                     158   ; void Timer_ISR()
                     159   ; {
                     160   _Timer_ISR:
                     161   ; if(Timer1Status == 1) {         // Did Timer 1 produce the Interrupt?
0800003E  1039 0040  162          move.b    4194354,D0
08000042  0032      
08000044  0C00 0001  163          cmp.b     #1,D0
08000048  6608       164          bne.s     Timer_ISR_1
                     165   ; Timer1Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
0800004A  13FC 0003  166          move.b    #3,4194354
0800004E  0040 0032 
                     167   Timer_ISR_1:
                     168   ; //PortA = Timer1Count++ ;     // increment an LED count on PortA with each tick of Timer 1
                     169   ; }
                     170   ; if(Timer2Status == 1) {         // Did Timer 2 produce the Interrupt?
08000052  1039 0040  171          move.b    4194358,D0
08000056  0036      
08000058  0C00 0001  172          cmp.b     #1,D0
0800005C  6608       173          bne.s     Timer_ISR_3
                     174   ; Timer2Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
0800005E  13FC 0003  175          move.b    #3,4194358
08000062  0040 0036 
                     176   Timer_ISR_3:
                     177   ; //PortC = Timer2Count++ ;     // increment an LED count on PortC with each tick of Timer 2
                     178   ; }
                     179   ; if(Timer3Status == 1) {         // Did Timer 3 produce the Interrupt?
08000066  1039 0040  180          move.b    4194362,D0
0800006A  003A      
0800006C  0C00 0001  181          cmp.b     #1,D0
08000070  6608       182          bne.s     Timer_ISR_5
                     183   ; Timer3Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000072  13FC 0003  184          move.b    #3,4194362
08000076  0040 003A 
                     185   Timer_ISR_5:
                     186   ; //HEX_A = Timer3Count++ ;     // increment a HEX count on Port HEX_A with each tick of Timer 3
                     187   ; }
                     188   ; if(Timer4Status == 1) {         // Did Timer 4 produce the Interrupt?
0800007A  1039 0040  189          move.b    4194366,D0
0800007E  003E      
08000080  0C00 0001  190          cmp.b     #1,D0
08000084  6608       191          bne.s     Timer_ISR_7
                     192   ; Timer4Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000086  13FC 0003  193          move.b    #3,4194366
0800008A  0040 003E 
                     194   Timer_ISR_7:
0800008E  4E75       195          rts
                     196   ; //HEX_B = Timer4Count++ ;     // increment a HEX count on HEX_B with each tick of Timer 4
                     197   ; }
                     198   ; }
                     199   ; /*****************************************************************************************
                     200   ; **	Interrupt service routine for ACIA. This device has it's own dedicate IRQ level
                     201   ; **  Add your code here to poll Status register and clear interrupt
                     202   ; *****************************************************************************************/
                     203   ; void ACIA_ISR()
                     204   ; {}
                     205   _ACIA_ISR:
08000090  4E75       206          rts
                     207   ; /***************************************************************************************
                     208   ; **	Interrupt service routine for PIAs 1 and 2. These devices share an IRQ level
                     209   ; **  Add your code here to poll Status register and clear interrupt
                     210   ; *****************************************************************************************/
                     211   ; void PIA_ISR()
                     212   ; {}
                     213   _PIA_ISR:
08000092  4E75       214          rts
                     215   ; /***********************************************************************************
                     216   ; **	Interrupt service routine for Key 2 on DE1 board. Add your own response here
                     217   ; ************************************************************************************/
                     218   ; void Key2PressISR()
                     219   ; {}
                     220   _Key2PressISR:
08000094  4E75       221          rts
                     222   ; /***********************************************************************************
                     223   ; **	Interrupt service routine for Key 1 on DE1 board. Add your own response here
                     224   ; ************************************************************************************/
                     225   ; void Key1PressISR()
                     226   ; {}
                     227   _Key1PressISR:
08000096  4E75       228          rts
                     229   ; /************************************************************************************
                     230   ; **   Delay Subroutine to give the 68000 something useless to do to waste 1 mSec
                     231   ; ************************************************************************************/
                     232   ; void Wait1ms(void)
                     233   ; {
                     234   _Wait1ms:
08000098  2F02       235          move.l    D2,-(A7)
                     236   ; int  i ;
                     237   ; for(i = 0; i < 1000; i ++)
0800009A  4282       238          clr.l     D2
                     239   Wait1ms_1:
0800009C  0C82 0000  240          cmp.l     #1000,D2
080000A0  03E8      
080000A2  6C04       241          bge.s     Wait1ms_3
080000A4  5282       242          addq.l    #1,D2
080000A6  60F4       243          bra       Wait1ms_1
                     244   Wait1ms_3:
080000A8  241F       245          move.l    (A7)+,D2
080000AA  4E75       246          rts
                     247   ; ;
                     248   ; }
                     249   ; /************************************************************************************
                     250   ; **  Subroutine to give the 68000 something useless to do to waste 3 mSec
                     251   ; **************************************************************************************/
                     252   ; void Wait3ms(void)
                     253   ; {
                     254   _Wait3ms:
080000AC  2F02       255          move.l    D2,-(A7)
                     256   ; int i ;
                     257   ; for(i = 0; i < 3; i++)
080000AE  4282       258          clr.l     D2
                     259   Wait3ms_1:
080000B0  0C82 0000  260          cmp.l     #3,D2
080000B4  0003      
080000B6  6C0A       261          bge.s     Wait3ms_3
                     262   ; Wait1ms() ;
080000B8  4EB9 0800  263          jsr       _Wait1ms
080000BC  0098      
080000BE  5282       264          addq.l    #1,D2
080000C0  60EE       265          bra       Wait3ms_1
                     266   Wait3ms_3:
080000C2  241F       267          move.l    (A7)+,D2
080000C4  4E75       268          rts
                     269   ; }
                     270   ; /*********************************************************************************************
                     271   ; **  Subroutine to initialise the LCD display by writing some commands to the LCD internal registers
                     272   ; **  Sets it for parallel port and 2 line display mode (if I recall correctly)
                     273   ; *********************************************************************************************/
                     274   ; void Init_LCD(void)
                     275   ; {
                     276   _Init_LCD:
                     277   ; LCDcommand = 0x0c ;
080000C6  13FC 000C  278          move.b    #12,4194336
080000CA  0040 0020 
                     279   ; Wait3ms() ;
080000CE  4EB9 0800  280          jsr       _Wait3ms
080000D2  00AC      
                     281   ; LCDcommand = 0x38 ;
080000D4  13FC 0038  282          move.b    #56,4194336
080000D8  0040 0020 
                     283   ; Wait3ms() ;
080000DC  4EB9 0800  284          jsr       _Wait3ms
080000E0  00AC      
080000E2  4E75       285          rts
                     286   ; }
                     287   ; /*********************************************************************************************
                     288   ; **  Subroutine to initialise the RS232 Port by writing some commands to the internal registers
                     289   ; *********************************************************************************************/
                     290   ; void Init_RS232(void)
                     291   ; {
                     292   _Init_RS232:
                     293   ; RS232_Control = 0x15 ; //  %00010101 set up 6850 uses divide by 16 clock, set RTS low, 8 bits no parity, 1 stop bit, transmitter interrupt disabled
080000E4  13FC 0015  294          move.b    #21,4194368
080000E8  0040 0040 
                     295   ; RS232_Baud = 0x1 ;      // program baud rate generator 001 = 115k, 010 = 57.6k, 011 = 38.4k, 100 = 19.2, all others = 9600
080000EC  13FC 0001  296          move.b    #1,4194372
080000F0  0040 0044 
080000F4  4E75       297          rts
                     298   ; }
                     299   ; /*********************************************************************************************************
                     300   ; **  Subroutine to provide a low level output function to 6850 ACIA
                     301   ; **  This routine provides the basic functionality to output a single character to the serial Port
                     302   ; **  to allow the board to communicate with HyperTerminal Program
                     303   ; **
                     304   ; **  NOTE you do not call this function directly, instead you call the normal putchar() function
                     305   ; **  which in turn calls _putch() below). Other functions like puts(), printf() call putchar() so will
                     306   ; **  call _putch() also
                     307   ; *********************************************************************************************************/
                     308   ; int _putch( int c)
                     309   ; {
                     310   __putch:
080000F6  4E56 0000  311          link      A6,#0
                     312   ; while((RS232_Status & (char)(0x02)) != (char)(0x02))    // wait for Tx bit in status register or 6850 serial comms chip to be '1'
                     313   _putch_1:
080000FA  1039 0040  314          move.b    4194368,D0
080000FE  0040      
08000100  C03C 0002  315          and.b     #2,D0
08000104  0C00 0002  316          cmp.b     #2,D0
08000108  6702       317          beq.s     _putch_3
0800010A  60EE       318          bra       _putch_1
                     319   _putch_3:
                     320   ; ;
                     321   ; RS232_TxData = (c & (char)(0x7f));                      // write to the data register to output the character (mask off bit 8 to keep it 7 bit ASCII)
0800010C  202E 0008  322          move.l    8(A6),D0
08000110  C0BC 0000  323          and.l     #127,D0
08000114  007F      
08000116  13C0 0040  324          move.b    D0,4194370
0800011A  0042      
                     325   ; return c ;                                              // putchar() expects the character to be returned
0800011C  202E 0008  326          move.l    8(A6),D0
08000120  4E5E       327          unlk      A6
08000122  4E75       328          rts
                     329   ; }
                     330   ; /*********************************************************************************************************
                     331   ; **  Subroutine to provide a low level input function to 6850 ACIA
                     332   ; **  This routine provides the basic functionality to input a single character from the serial Port
                     333   ; **  to allow the board to communicate with HyperTerminal Program Keyboard (your PC)
                     334   ; **
                     335   ; **  NOTE you do not call this function directly, instead you call the normal getchar() function
                     336   ; **  which in turn calls _getch() below). Other functions like gets(), scanf() call getchar() so will
                     337   ; **  call _getch() also
                     338   ; *********************************************************************************************************/
                     339   ; int _getch( void )
                     340   ; {
                     341   __getch:
08000124  4E56 FFFC  342          link      A6,#-4
                     343   ; char c ;
                     344   ; while((RS232_Status & (char)(0x01)) != (char)(0x01))    // wait for Rx bit in 6850 serial comms chip status register to be '1'
                     345   _getch_1:
08000128  1039 0040  346          move.b    4194368,D0
0800012C  0040      
0800012E  C03C 0001  347          and.b     #1,D0
08000132  0C00 0001  348          cmp.b     #1,D0
08000136  6702       349          beq.s     _getch_3
08000138  60EE       350          bra       _getch_1
                     351   _getch_3:
                     352   ; ;
                     353   ; return (RS232_RxData & (char)(0x7f));                   // read received character, mask off top bit and return as 7 bit ASCII character
0800013A  1039 0040  354          move.b    4194370,D0
0800013E  0042      
08000140  C0BC 0000  355          and.l     #255,D0
08000144  00FF      
08000146  C0BC 0000  356          and.l     #127,D0
0800014A  007F      
0800014C  4E5E       357          unlk      A6
0800014E  4E75       358          rts
                     359   ; }
                     360   ; /******************************************************************************
                     361   ; **  Subroutine to output a single character to the 2 row LCD display
                     362   ; **  It is assumed the character is an ASCII code and it will be displayed at the
                     363   ; **  current cursor position
                     364   ; *******************************************************************************/
                     365   ; void LCDOutchar(int c)
                     366   ; {
                     367   _LCDOutchar:
08000150  4E56 0000  368          link      A6,#0
                     369   ; LCDdata = (char)(c);
08000154  202E 0008  370          move.l    8(A6),D0
08000158  13C0 0040  371          move.b    D0,4194338
0800015C  0022      
                     372   ; Wait1ms() ;
0800015E  4EB9 0800  373          jsr       _Wait1ms
08000162  0098      
08000164  4E5E       374          unlk      A6
08000166  4E75       375          rts
                     376   ; }
                     377   ; /**********************************************************************************
                     378   ; *subroutine to output a message at the current cursor position of the LCD display
                     379   ; ************************************************************************************/
                     380   ; void LCDOutMessage(char *theMessage)
                     381   ; {
                     382   _LCDOutMessage:
08000168  4E56 FFFC  383          link      A6,#-4
                     384   ; char c ;
                     385   ; while((c = *theMessage++) != 0)     // output characters from the string until NULL
                     386   LCDOutMessage_1:
0800016C  206E 0008  387          move.l    8(A6),A0
08000170  52AE 0008  388          addq.l    #1,8(A6)
08000174  1D50 FFFF  389          move.b    (A0),-1(A6)
08000178  1010       390          move.b    (A0),D0
0800017A  6714       391          beq.s     LCDOutMessage_3
                     392   ; LCDOutchar(c) ;
0800017C  122E FFFF  393          move.b    -1(A6),D1
08000180  4881       394          ext.w     D1
08000182  48C1       395          ext.l     D1
08000184  2F01       396          move.l    D1,-(A7)
08000186  4EB9 0800  397          jsr       _LCDOutchar
0800018A  0150      
0800018C  584F       398          addq.w    #4,A7
0800018E  60DC       399          bra       LCDOutMessage_1
                     400   LCDOutMessage_3:
08000190  4E5E       401          unlk      A6
08000192  4E75       402          rts
                     403   ; }
                     404   ; /******************************************************************************
                     405   ; *subroutine to clear the line by issuing 24 space characters
                     406   ; *******************************************************************************/
                     407   ; void LCDClearln(void)
                     408   ; {
                     409   _LCDClearln:
08000194  2F02       410          move.l    D2,-(A7)
                     411   ; int i ;
                     412   ; for(i = 0; i < 24; i ++)
08000196  4282       413          clr.l     D2
                     414   LCDClearln_1:
08000198  0C82 0000  415          cmp.l     #24,D2
0800019C  0018      
0800019E  6C10       416          bge.s     LCDClearln_3
                     417   ; LCDOutchar(' ') ;       // write a space char to the LCD display
080001A0  4878 0020  418          pea       32
080001A4  4EB9 0800  419          jsr       _LCDOutchar
080001A8  0150      
080001AA  584F       420          addq.w    #4,A7
080001AC  5282       421          addq.l    #1,D2
080001AE  60E8       422          bra       LCDClearln_1
                     423   LCDClearln_3:
080001B0  241F       424          move.l    (A7)+,D2
080001B2  4E75       425          rts
                     426   ; }
                     427   ; /******************************************************************************
                     428   ; **  Subroutine to move the LCD cursor to the start of line 1 and clear that line
                     429   ; *******************************************************************************/
                     430   ; void LCDLine1Message(char *theMessage)
                     431   ; {
                     432   _LCDLine1Message:
080001B4  4E56 0000  433          link      A6,#0
                     434   ; LCDcommand = 0x80 ;
080001B8  13FC 0080  435          move.b    #128,4194336
080001BC  0040 0020 
                     436   ; Wait3ms();
080001C0  4EB9 0800  437          jsr       _Wait3ms
080001C4  00AC      
                     438   ; LCDClearln() ;
080001C6  4EB9 0800  439          jsr       _LCDClearln
080001CA  0194      
                     440   ; LCDcommand = 0x80 ;
080001CC  13FC 0080  441          move.b    #128,4194336
080001D0  0040 0020 
                     442   ; Wait3ms() ;
080001D4  4EB9 0800  443          jsr       _Wait3ms
080001D8  00AC      
                     444   ; LCDOutMessage(theMessage) ;
080001DA  2F2E 0008  445          move.l    8(A6),-(A7)
080001DE  4EB9 0800  446          jsr       _LCDOutMessage
080001E2  0168      
080001E4  584F       447          addq.w    #4,A7
080001E6  4E5E       448          unlk      A6
080001E8  4E75       449          rts
                     450   ; }
                     451   ; /******************************************************************************
                     452   ; **  Subroutine to move the LCD cursor to the start of line 2 and clear that line
                     453   ; *******************************************************************************/
                     454   ; void LCDLine2Message(char *theMessage)
                     455   ; {
                     456   _LCDLine2Message:
080001EA  4E56 0000  457          link      A6,#0
                     458   ; LCDcommand = 0xC0 ;
080001EE  13FC 00C0  459          move.b    #192,4194336
080001F2  0040 0020 
                     460   ; Wait3ms();
080001F6  4EB9 0800  461          jsr       _Wait3ms
080001FA  00AC      
                     462   ; LCDClearln() ;
080001FC  4EB9 0800  463          jsr       _LCDClearln
08000200  0194      
                     464   ; LCDcommand = 0xC0 ;
08000202  13FC 00C0  465          move.b    #192,4194336
08000206  0040 0020 
                     466   ; Wait3ms() ;
0800020A  4EB9 0800  467          jsr       _Wait3ms
0800020E  00AC      
                     468   ; LCDOutMessage(theMessage) ;
08000210  2F2E 0008  469          move.l    8(A6),-(A7)
08000214  4EB9 0800  470          jsr       _LCDOutMessage
08000218  0168      
0800021A  584F       471          addq.w    #4,A7
0800021C  4E5E       472          unlk      A6
0800021E  4E75       473          rts
                     474   ; }
                     475   ; /*********************************************************************************************************************************
                     476   ; **  IMPORTANT FUNCTION
                     477   ; **  This function install an exception handler so you can capture and deal with any 68000 exception in your program
                     478   ; **  You pass it the name of a function in your code that will get called in response to the exception (as the 1st parameter)
                     479   ; **  and in the 2nd parameter, you pass it the exception number that you want to take over (see 68000 exceptions for details)
                     480   ; **  Calling this function allows you to deal with Interrupts for example
                     481   ; ***********************************************************************************************************************************/
                     482   ; void InstallExceptionHandler( void (*function_ptr)(), int level)
                     483   ; {
                     484   _InstallExceptionHandler:
08000220  4E56 FFFC  485          link      A6,#-4
                     486   ; volatile long int *RamVectorAddress = (volatile long int *)(StartOfExceptionVectorTable) ;   // pointer to the Ram based interrupt vector table created in Cstart in debug monitor
08000224  2D7C 0B00  487          move.l    #184549376,-4(A6)
08000228  0000 FFFC 
                     488   ; RamVectorAddress[level] = (long int *)(function_ptr);                       // install the address of our function into the exception table
0800022C  206E FFFC  489          move.l    -4(A6),A0
08000230  202E 000C  490          move.l    12(A6),D0
08000234  E588       491          lsl.l     #2,D0
08000236  21AE 0008  492          move.l    8(A6),0(A0,D0.L)
0800023A  0800      
0800023C  4E5E       493          unlk      A6
0800023E  4E75       494          rts
                     495   ; }
                     496   ; char xtod(int c)
                     497   ; {
                     498   _xtod:
08000240  4E56 0000  499          link      A6,#0
08000244  2F02       500          move.l    D2,-(A7)
08000246  242E 0008  501          move.l    8(A6),D2
                     502   ; if ((char)(c) <= (char)('9'))
0800024A  0C02 0039  503          cmp.b     #57,D2
0800024E  6E08       504          bgt.s     xtod_1
                     505   ; return c - (char)(0x30);    // 0 - 9 = 0x30 - 0x39 so convert to number by sutracting 0x30
08000250  1002       506          move.b    D2,D0
08000252  0400 0030  507          sub.b     #48,D0
08000256  6014       508          bra.s     xtod_3
                     509   xtod_1:
                     510   ; else if((char)(c) > (char)('F'))    // assume lower case
08000258  0C02 0046  511          cmp.b     #70,D2
0800025C  6F08       512          ble.s     xtod_4
                     513   ; return c - (char)(0x57);    // a-f = 0x61-66 so needs to be converted to 0x0A - 0x0F so subtract 0x57
0800025E  1002       514          move.b    D2,D0
08000260  0400 0057  515          sub.b     #87,D0
08000264  6006       516          bra.s     xtod_3
                     517   xtod_4:
                     518   ; else
                     519   ; return c - (char)(0x37);    // A-F = 0x41-46 so needs to be converted to 0x0A - 0x0F so subtract 0x37
08000266  1002       520          move.b    D2,D0
08000268  0400 0037  521          sub.b     #55,D0
                     522   xtod_3:
0800026C  241F       523          move.l    (A7)+,D2
0800026E  4E5E       524          unlk      A6
08000270  4E75       525          rts
                     526   ; }
                     527   ; int Get2HexDigits(char *CheckSumPtr)
                     528   ; {
                     529   _Get2HexDigits:
08000272  4E56 0000  530          link      A6,#0
08000276  2F02       531          move.l    D2,-(A7)
                     532   ; register int i = (xtod(_getch()) << 4) | (xtod(_getch()));
08000278  2F00       533          move.l    D0,-(A7)
0800027A  4EB9 0800  534          jsr       __getch
0800027E  0124      
08000280  2200       535          move.l    D0,D1
08000282  201F       536          move.l    (A7)+,D0
08000284  2F01       537          move.l    D1,-(A7)
08000286  4EB9 0800  538          jsr       _xtod
0800028A  0240      
0800028C  584F       539          addq.w    #4,A7
0800028E  C0BC 0000  540          and.l     #255,D0
08000292  00FF      
08000294  E980       541          asl.l     #4,D0
08000296  2F00       542          move.l    D0,-(A7)
08000298  2F01       543          move.l    D1,-(A7)
0800029A  4EB9 0800  544          jsr       __getch
0800029E  0124      
080002A0  221F       545          move.l    (A7)+,D1
080002A2  2F00       546          move.l    D0,-(A7)
080002A4  4EB9 0800  547          jsr       _xtod
080002A8  0240      
080002AA  584F       548          addq.w    #4,A7
080002AC  2200       549          move.l    D0,D1
080002AE  201F       550          move.l    (A7)+,D0
080002B0  C2BC 0000  551          and.l     #255,D1
080002B4  00FF      
080002B6  8081       552          or.l      D1,D0
080002B8  2400       553          move.l    D0,D2
                     554   ; if(CheckSumPtr)
080002BA  4AAE 0008  555          tst.l     8(A6)
080002BE  6706       556          beq.s     Get2HexDigits_1
                     557   ; *CheckSumPtr += i ;
080002C0  206E 0008  558          move.l    8(A6),A0
080002C4  D510       559          add.b     D2,(A0)
                     560   Get2HexDigits_1:
                     561   ; return i ;
080002C6  2002       562          move.l    D2,D0
080002C8  241F       563          move.l    (A7)+,D2
080002CA  4E5E       564          unlk      A6
080002CC  4E75       565          rts
                     566   ; }
                     567   ; int Get4HexDigits(char *CheckSumPtr)
                     568   ; {
                     569   _Get4HexDigits:
080002CE  4E56 0000  570          link      A6,#0
                     571   ; return (Get2HexDigits(CheckSumPtr) << 8) | (Get2HexDigits(CheckSumPtr));
080002D2  2F2E 0008  572          move.l    8(A6),-(A7)
080002D6  4EB9 0800  573          jsr       _Get2HexDigits
080002DA  0272      
080002DC  584F       574          addq.w    #4,A7
080002DE  E180       575          asl.l     #8,D0
080002E0  2F00       576          move.l    D0,-(A7)
080002E2  2F2E 0008  577          move.l    8(A6),-(A7)
080002E6  4EB9 0800  578          jsr       _Get2HexDigits
080002EA  0272      
080002EC  584F       579          addq.w    #4,A7
080002EE  2200       580          move.l    D0,D1
080002F0  201F       581          move.l    (A7)+,D0
080002F2  8081       582          or.l      D1,D0
080002F4  4E5E       583          unlk      A6
080002F6  4E75       584          rts
                     585   ; }
                     586   ; int Get6HexDigits(char *CheckSumPtr)
                     587   ; {
                     588   _Get6HexDigits:
080002F8  4E56 0000  589          link      A6,#0
                     590   ; return (Get4HexDigits(CheckSumPtr) << 8) | (Get2HexDigits(CheckSumPtr));
080002FC  2F2E 0008  591          move.l    8(A6),-(A7)
08000300  4EB9 0800  592          jsr       _Get4HexDigits
08000304  02CE      
08000306  584F       593          addq.w    #4,A7
08000308  E180       594          asl.l     #8,D0
0800030A  2F00       595          move.l    D0,-(A7)
0800030C  2F2E 0008  596          move.l    8(A6),-(A7)
08000310  4EB9 0800  597          jsr       _Get2HexDigits
08000314  0272      
08000316  584F       598          addq.w    #4,A7
08000318  2200       599          move.l    D0,D1
0800031A  201F       600          move.l    (A7)+,D0
0800031C  8081       601          or.l      D1,D0
0800031E  4E5E       602          unlk      A6
08000320  4E75       603          rts
                     604   ; }
                     605   ; int Get8HexDigits(char *CheckSumPtr)
                     606   ; {
                     607   _Get8HexDigits:
08000322  4E56 0000  608          link      A6,#0
                     609   ; return (Get4HexDigits(CheckSumPtr) << 16) | (Get4HexDigits(CheckSumPtr));
08000326  2F2E 0008  610          move.l    8(A6),-(A7)
0800032A  4EB9 0800  611          jsr       _Get4HexDigits
0800032E  02CE      
08000330  584F       612          addq.w    #4,A7
08000332  E180       613          asl.l     #8,D0
08000334  E180       614          asl.l     #8,D0
08000336  2F00       615          move.l    D0,-(A7)
08000338  2F2E 0008  616          move.l    8(A6),-(A7)
0800033C  4EB9 0800  617          jsr       _Get4HexDigits
08000340  02CE      
08000342  584F       618          addq.w    #4,A7
08000344  2200       619          move.l    D0,D1
08000346  201F       620          move.l    (A7)+,D0
08000348  8081       621          or.l      D1,D0
0800034A  4E5E       622          unlk      A6
0800034C  4E75       623          rts
                     624   ; }
                     625   ; /**************************************************************************************************
                     626   ; *Memory Test Functions
                     627   ; ***************************************************************************************************/
                     628   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                     629   ; //byte_func//
                     630   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                     631   ; void byte_func(void){
                     632   _byte_func:
0800034E  4E56 FFDC  633          link      A6,#-36
08000352  48E7 3F3C  634          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08000356  45F9 0800  635          lea       _printf.L,A2
0800035A  1CBA      
0800035C  47F9 0800  636          lea       _scanf.L,A3
08000360  1C88      
08000362  4BEE FFE6  637          lea       -26(A6),A5
                     638   ; char  *Start, *End ;
                     639   ; char *Start_temp, *End_temp;
                     640   ; int *Start_hold, *End_hold;
                     641   ; unsigned char filldata = 0xAA;
08000366  1D7C 00AA  642          move.b    #170,-22(A6)
0800036A  FFEA      
                     643   ; unsigned char tempdata;
                     644   ; unsigned char readval;
                     645   ; //unsigned char bytedata1, bytedata2, bytedata3, bytedata4;
                     646   ; int bytedata1, bytedata2, bytedata3, bytedata4;
                     647   ; int count = 0;
0800036C  4282       648          clr.l     D2
                     649   ; int count2 = 0;
0800036E  4284       650          clr.l     D4
                     651   ; int j;
                     652   ; char choice;
                     653   ; printf("\r\nEnter 4 bytes of Hexidecimal test data.");
08000370  4879 0800  654          pea       @m68kus~1_1.L
08000374  3016      
08000376  4E92       655          jsr       (A2)
08000378  584F       656          addq.w    #4,A7
                     657   ; printf("\r\nEnter First byte: ");
0800037A  4879 0800  658          pea       @m68kus~1_2.L
0800037E  3040      
08000380  4E92       659          jsr       (A2)
08000382  584F       660          addq.w    #4,A7
                     661   ; scanf("%x", &bytedata1) ;
08000384  486E FFEC  662          pea       -20(A6)
08000388  4879 0800  663          pea       @m68kus~1_3.L
0800038C  3056      
0800038E  4E93       664          jsr       (A3)
08000390  504F       665          addq.w    #8,A7
                     666   ; //bytedata1 = Get2HexDigits(0) ;
                     667   ; //printf("\r\n%X",bytedata1);
                     668   ; printf("Enter Second byte: ");
08000392  4879 0800  669          pea       @m68kus~1_4.L
08000396  305A      
08000398  4E92       670          jsr       (A2)
0800039A  584F       671          addq.w    #4,A7
                     672   ; scanf("%x", &bytedata2) ;
0800039C  486E FFF0  673          pea       -16(A6)
080003A0  4879 0800  674          pea       @m68kus~1_3.L
080003A4  3056      
080003A6  4E93       675          jsr       (A3)
080003A8  504F       676          addq.w    #8,A7
                     677   ; //printf("\r\n%X",bytedata2);
                     678   ; //bytedata2 = Get2HexDigits(0) ;
                     679   ; printf("Enter Third byte: ");
080003AA  4879 0800  680          pea       @m68kus~1_5.L
080003AE  306E      
080003B0  4E92       681          jsr       (A2)
080003B2  584F       682          addq.w    #4,A7
                     683   ; scanf("%x", &bytedata3) ;
080003B4  486E FFF4  684          pea       -12(A6)
080003B8  4879 0800  685          pea       @m68kus~1_3.L
080003BC  3056      
080003BE  4E93       686          jsr       (A3)
080003C0  504F       687          addq.w    #8,A7
                     688   ; //bytedata3 = Get2HexDigits(0) ;
                     689   ; printf("Enter Fourth byte: ");
080003C2  4879 0800  690          pea       @m68kus~1_6.L
080003C6  3082      
080003C8  4E92       691          jsr       (A2)
080003CA  584F       692          addq.w    #4,A7
                     693   ; scanf("%x", &bytedata4) ;
080003CC  486E FFF8  694          pea       -8(A6)
080003D0  4879 0800  695          pea       @m68kus~1_3.L
080003D4  3056      
080003D6  4E93       696          jsr       (A3)
080003D8  504F       697          addq.w    #8,A7
                     698   ; //bytedata4 = Get2HexDigits(0) ;
                     699   ; printf("Valid addresses for this program are: $0900 0000  - $097F FFFF");
080003DA  4879 0800  700          pea       @m68kus~1_7.L
080003DE  3096      
080003E0  4E92       701          jsr       (A2)
080003E2  584F       702          addq.w    #4,A7
                     703   ; printf("\r\nEnter Start Address: ") ;
080003E4  4879 0800  704          pea       @m68kus~1_8.L
080003E8  30D6      
080003EA  4E92       705          jsr       (A2)
080003EC  584F       706          addq.w    #4,A7
                     707   ; scanf("%x", &Start_hold) ;
080003EE  486E FFE2  708          pea       -30(A6)
080003F2  4879 0800  709          pea       @m68kus~1_3.L
080003F6  3056      
080003F8  4E93       710          jsr       (A3)
080003FA  504F       711          addq.w    #8,A7
                     712   ; //Start_hold = Get8HexDigits(0) ;
                     713   ; printf("Enter End Address: ") ;
080003FC  4879 0800  714          pea       @m68kus~1_9.L
08000400  30EE      
08000402  4E92       715          jsr       (A2)
08000404  584F       716          addq.w    #4,A7
                     717   ; scanf("%x", &End_hold) ;
08000406  2F0D       718          move.l    A5,-(A7)
08000408  4879 0800  719          pea       @m68kus~1_3.L
0800040C  3056      
0800040E  4E93       720          jsr       (A3)
08000410  504F       721          addq.w    #8,A7
                     722   ; //End_hold = Get8HexDigits(0) ;
                     723   ; while ((Start_hold < 0x09000000) || (Start_hold > 0x097FFFFF)){
                     724   byte_func_1:
08000412  202E FFE2  725          move.l    -30(A6),D0
08000416  0C80 0900  726          cmp.l     #150994944,D0
0800041A  0000      
0800041C  650C       727          blo.s     byte_func_4
0800041E  202E FFE2  728          move.l    -30(A6),D0
08000422  0C80 097F  729          cmp.l     #159383551,D0
08000426  FFFF      
08000428  631A       730          bls.s     byte_func_3
                     731   byte_func_4:
                     732   ; printf("ERROR. Please Enter a valid Start Address: ");
0800042A  4879 0800  733          pea       @m68kus~1_10.L
0800042E  3102      
08000430  4E92       734          jsr       (A2)
08000432  584F       735          addq.w    #4,A7
                     736   ; scanf("%x", &Start_hold) ;
08000434  486E FFE2  737          pea       -30(A6)
08000438  4879 0800  738          pea       @m68kus~1_3.L
0800043C  3056      
0800043E  4E93       739          jsr       (A3)
08000440  504F       740          addq.w    #8,A7
08000442  60CE       741          bra       byte_func_1
                     742   byte_func_3:
                     743   ; //Start_hold = Get8HexDigits(0) ;
                     744   ; }
                     745   ; while ((End_hold < 0x09000000) || (End_hold > 0x097FFFFF)){
                     746   byte_func_5:
08000444  2015       747          move.l    (A5),D0
08000446  0C80 0900  748          cmp.l     #150994944,D0
0800044A  0000      
0800044C  650A       749          blo.s     byte_func_8
0800044E  2015       750          move.l    (A5),D0
08000450  0C80 097F  751          cmp.l     #159383551,D0
08000454  FFFF      
08000456  6318       752          bls.s     byte_func_7
                     753   byte_func_8:
                     754   ; printf("\r\nERROR. Please Enter a valid End Address: ");
08000458  4879 0800  755          pea       @m68kus~1_11.L
0800045C  312E      
0800045E  4E92       756          jsr       (A2)
08000460  584F       757          addq.w    #4,A7
                     758   ; scanf("%x", &End_hold) ;
08000462  2F0D       759          move.l    A5,-(A7)
08000464  4879 0800  760          pea       @m68kus~1_3.L
08000468  3056      
0800046A  4E93       761          jsr       (A3)
0800046C  504F       762          addq.w    #8,A7
0800046E  60D4       763          bra       byte_func_5
                     764   byte_func_7:
                     765   ; //End_hold = Get8HexDigits(0) ;
                     766   ; }
                     767   ; while (End_hold <= Start_hold){
                     768   byte_func_9:
08000470  2015       769          move.l    (A5),D0
08000472  B0AE FFE2  770          cmp.l     -30(A6),D0
08000476  6222       771          bhi.s     byte_func_11
                     772   ; printf("\r\nERROR. Please enter an End Address larger than the Start Address");
08000478  4879 0800  773          pea       @m68kus~1_12.L
0800047C  315A      
0800047E  4E92       774          jsr       (A2)
08000480  584F       775          addq.w    #4,A7
                     776   ; //printf("\r\nEnter Start Address: ") ;
                     777   ; //Start_hold = Get8HexDigits(0) ;
                     778   ; printf("\r\nEnter End Address: ") ;
08000482  4879 0800  779          pea       @m68kus~1_13.L
08000486  319E      
08000488  4E92       780          jsr       (A2)
0800048A  584F       781          addq.w    #4,A7
                     782   ; scanf("%x", &End_hold) ;
0800048C  2F0D       783          move.l    A5,-(A7)
0800048E  4879 0800  784          pea       @m68kus~1_3.L
08000492  3056      
08000494  4E93       785          jsr       (A3)
08000496  504F       786          addq.w    #8,A7
08000498  60D6       787          bra       byte_func_9
                     788   byte_func_11:
                     789   ; //End_hold = Get8HexDigits(0) ;
                     790   ; }
                     791   ; Start = Start_hold;
0800049A  262E FFE2  792          move.l    -30(A6),D3
                     793   ; End = End_hold;
0800049E  2855       794          move.l    (A5),A4
                     795   ; Start_temp = Start_hold;
080004A0  2A2E FFE2  796          move.l    -30(A6),D5
                     797   ; End_temp = End_hold;
080004A4  2D55 FFDE  798          move.l    (A5),-34(A6)
                     799   ; printf("\r\nFilling Addresses [$%08X - $%08X] with test data", Start, End);
080004A8  2F0C       800          move.l    A4,-(A7)
080004AA  2F03       801          move.l    D3,-(A7)
080004AC  4879 0800  802          pea       @m68kus~1_14.L
080004B0  31B4      
080004B2  4E92       803          jsr       (A2)
080004B4  DEFC 000C  804          add.w     #12,A7
                     805   ; while (Start <= End){
                     806   byte_func_12:
080004B8  B68C       807          cmp.l     A4,D3
080004BA  6200 0196  808          bhi       byte_func_14
                     809   ; if ((count == 0) || ((count % 4))==0 ){
080004BE  4A82       810          tst.l     D2
080004C0  6718       811          beq.s     byte_func_17
080004C2  2F02       812          move.l    D2,-(A7)
080004C4  4878 0004  813          pea       4
080004C8  4EB9 0800  814          jsr       LDIV
080004CC  1BBC      
080004CE  202F 0004  815          move.l    4(A7),D0
080004D2  504F       816          addq.w    #8,A7
080004D4  4A80       817          tst.l     D0
080004D6  6600 003C  818          bne       byte_func_15
                     819   byte_func_17:
                     820   ; *Start = bytedata1;
080004DA  202E FFEC  821          move.l    -20(A6),D0
080004DE  2043       822          move.l    D3,A0
080004E0  1080       823          move.b    D0,(A0)
                     824   ; if ((count == 0) || ((count % 1000)==0)){
080004E2  4A82       825          tst.l     D2
080004E4  6716       826          beq.s     byte_func_20
080004E6  2F02       827          move.l    D2,-(A7)
080004E8  4878 03E8  828          pea       1000
080004EC  4EB9 0800  829          jsr       LDIV
080004F0  1BBC      
080004F2  202F 0004  830          move.l    4(A7),D0
080004F6  504F       831          addq.w    #8,A7
080004F8  4A80       832          tst.l     D0
080004FA  6612       833          bne.s     byte_func_18
                     834   byte_func_20:
                     835   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata1);
080004FC  2F2E FFEC  836          move.l    -20(A6),-(A7)
08000500  2F03       837          move.l    D3,-(A7)
08000502  4879 0800  838          pea       @m68kus~1_15.L
08000506  31E8      
08000508  4E92       839          jsr       (A2)
0800050A  DEFC 000C  840          add.w     #12,A7
                     841   byte_func_18:
                     842   ; }
                     843   ; Start++;
0800050E  5283       844          addq.l    #1,D3
08000510  6000 013A  845          bra       byte_func_34
                     846   byte_func_15:
                     847   ; }
                     848   ; else if ((count == 1) || (((count - 1)%4)==0)){
08000514  0C82 0000  849          cmp.l     #1,D2
08000518  0001      
0800051A  671C       850          beq.s     byte_func_23
0800051C  2002       851          move.l    D2,D0
0800051E  5380       852          subq.l    #1,D0
08000520  2F00       853          move.l    D0,-(A7)
08000522  4878 0004  854          pea       4
08000526  4EB9 0800  855          jsr       LDIV
0800052A  1BBC      
0800052C  202F 0004  856          move.l    4(A7),D0
08000530  504F       857          addq.w    #8,A7
08000532  4A80       858          tst.l     D0
08000534  6600 0044  859          bne       byte_func_21
                     860   byte_func_23:
                     861   ; *Start = bytedata2;
08000538  202E FFF0  862          move.l    -16(A6),D0
0800053C  2043       863          move.l    D3,A0
0800053E  1080       864          move.b    D0,(A0)
                     865   ; if ((count == 1) || (((count - 1) % 1000)==0)){
08000540  0C82 0000  866          cmp.l     #1,D2
08000544  0001      
08000546  671A       867          beq.s     byte_func_26
08000548  2002       868          move.l    D2,D0
0800054A  5380       869          subq.l    #1,D0
0800054C  2F00       870          move.l    D0,-(A7)
0800054E  4878 03E8  871          pea       1000
08000552  4EB9 0800  872          jsr       LDIV
08000556  1BBC      
08000558  202F 0004  873          move.l    4(A7),D0
0800055C  504F       874          addq.w    #8,A7
0800055E  4A80       875          tst.l     D0
08000560  6612       876          bne.s     byte_func_24
                     877   byte_func_26:
                     878   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata2);
08000562  2F2E FFF0  879          move.l    -16(A6),-(A7)
08000566  2F03       880          move.l    D3,-(A7)
08000568  4879 0800  881          pea       @m68kus~1_15.L
0800056C  31E8      
0800056E  4E92       882          jsr       (A2)
08000570  DEFC 000C  883          add.w     #12,A7
                     884   byte_func_24:
                     885   ; }
                     886   ; Start++;
08000574  5283       887          addq.l    #1,D3
08000576  6000 00D4  888          bra       byte_func_34
                     889   byte_func_21:
                     890   ; }
                     891   ; else if ((count == 2) || (((count - 2)%4)==0)){
0800057A  0C82 0000  892          cmp.l     #2,D2
0800057E  0002      
08000580  671C       893          beq.s     byte_func_29
08000582  2002       894          move.l    D2,D0
08000584  5580       895          subq.l    #2,D0
08000586  2F00       896          move.l    D0,-(A7)
08000588  4878 0004  897          pea       4
0800058C  4EB9 0800  898          jsr       LDIV
08000590  1BBC      
08000592  202F 0004  899          move.l    4(A7),D0
08000596  504F       900          addq.w    #8,A7
08000598  4A80       901          tst.l     D0
0800059A  6600 0044  902          bne       byte_func_27
                     903   byte_func_29:
                     904   ; *Start = bytedata3;
0800059E  202E FFF4  905          move.l    -12(A6),D0
080005A2  2043       906          move.l    D3,A0
080005A4  1080       907          move.b    D0,(A0)
                     908   ; if ((count == 2) || (((count - 2) % 1000)==0)){
080005A6  0C82 0000  909          cmp.l     #2,D2
080005AA  0002      
080005AC  671A       910          beq.s     byte_func_32
080005AE  2002       911          move.l    D2,D0
080005B0  5580       912          subq.l    #2,D0
080005B2  2F00       913          move.l    D0,-(A7)
080005B4  4878 03E8  914          pea       1000
080005B8  4EB9 0800  915          jsr       LDIV
080005BC  1BBC      
080005BE  202F 0004  916          move.l    4(A7),D0
080005C2  504F       917          addq.w    #8,A7
080005C4  4A80       918          tst.l     D0
080005C6  6612       919          bne.s     byte_func_30
                     920   byte_func_32:
                     921   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata3);
080005C8  2F2E FFF4  922          move.l    -12(A6),-(A7)
080005CC  2F03       923          move.l    D3,-(A7)
080005CE  4879 0800  924          pea       @m68kus~1_15.L
080005D2  31E8      
080005D4  4E92       925          jsr       (A2)
080005D6  DEFC 000C  926          add.w     #12,A7
                     927   byte_func_30:
                     928   ; }
                     929   ; Start++;
080005DA  5283       930          addq.l    #1,D3
080005DC  6000 006E  931          bra       byte_func_34
                     932   byte_func_27:
                     933   ; }
                     934   ; else if ((count == 3) || (((count - 3)%4)==0)){
080005E0  0C82 0000  935          cmp.l     #3,D2
080005E4  0003      
080005E6  671C       936          beq.s     byte_func_35
080005E8  2002       937          move.l    D2,D0
080005EA  5780       938          subq.l    #3,D0
080005EC  2F00       939          move.l    D0,-(A7)
080005EE  4878 0004  940          pea       4
080005F2  4EB9 0800  941          jsr       LDIV
080005F6  1BBC      
080005F8  202F 0004  942          move.l    4(A7),D0
080005FC  504F       943          addq.w    #8,A7
080005FE  4A80       944          tst.l     D0
08000600  6600 0042  945          bne       byte_func_33
                     946   byte_func_35:
                     947   ; *Start = bytedata4;
08000604  202E FFF8  948          move.l    -8(A6),D0
08000608  2043       949          move.l    D3,A0
0800060A  1080       950          move.b    D0,(A0)
                     951   ; if ((count == 3) || (((count - 3) % 1000)==0)){
0800060C  0C82 0000  952          cmp.l     #3,D2
08000610  0003      
08000612  671A       953          beq.s     byte_func_38
08000614  2002       954          move.l    D2,D0
08000616  5780       955          subq.l    #3,D0
08000618  2F00       956          move.l    D0,-(A7)
0800061A  4878 03E8  957          pea       1000
0800061E  4EB9 0800  958          jsr       LDIV
08000622  1BBC      
08000624  202F 0004  959          move.l    4(A7),D0
08000628  504F       960          addq.w    #8,A7
0800062A  4A80       961          tst.l     D0
0800062C  6612       962          bne.s     byte_func_36
                     963   byte_func_38:
                     964   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata4);
0800062E  2F2E FFF8  965          move.l    -8(A6),-(A7)
08000632  2F03       966          move.l    D3,-(A7)
08000634  4879 0800  967          pea       @m68kus~1_15.L
08000638  31E8      
0800063A  4E92       968          jsr       (A2)
0800063C  DEFC 000C  969          add.w     #12,A7
                     970   byte_func_36:
                     971   ; }
                     972   ; Start++;
08000640  5283       973          addq.l    #1,D3
08000642  6008       974          bra.s     byte_func_34
                     975   byte_func_33:
                     976   ; }
                     977   ; else {
                     978   ; *Start++ = filldata;
08000644  2043       979          move.l    D3,A0
08000646  5283       980          addq.l    #1,D3
08000648  10AE FFEA  981          move.b    -22(A6),(A0)
                     982   byte_func_34:
                     983   ; }
                     984   ; //      if ((count == 0) || ((count % 1000)==0)){
                     985   ; //       printf("\r\nAdress $%08X being filled with $%02X", Start, readval);
                     986   ; //}
                     987   ; count++;
0800064C  5282       988          addq.l    #1,D2
0800064E  6000 FE68  989          bra       byte_func_12
                     990   byte_func_14:
                     991   ; }
                     992   ; printf("\r\nWriting to memory Complete.\r\nEnter '1' to read back the memory. Enter '0' to exit program.");
08000652  4879 0800  993          pea       @m68kus~1_16.L
08000656  3210      
08000658  4E92       994          jsr       (A2)
0800065A  584F       995          addq.w    #4,A7
                     996   ; choice = _getch();
0800065C  4EB9 0800  997          jsr       __getch
08000660  0124      
08000662  1E00       998          move.b    D0,D7
                     999   ; if (choice == '1'){
08000664  0C07 0031 1000          cmp.b     #49,D7
08000668  6600 00FE 1001          bne       byte_func_39
                    1002   ; // printf("\r\nwill continue");
                    1003   ; while (Start_temp <= End_temp){
                    1004   byte_func_41:
0800066C  BAAE FFDE 1005          cmp.l     -34(A6),D5
08000670  6200 00F4 1006          bhi       byte_func_43
                    1007   ; tempdata = *Start_temp;
08000674  2045      1008          move.l    D5,A0
08000676  1C10      1009          move.b    (A0),D6
                    1010   ; if ((count2 == 0) || (count2 % 1000)==0){
08000678  4A84      1011          tst.l     D4
0800067A  6716      1012          beq.s     byte_func_46
0800067C  2F04      1013          move.l    D4,-(A7)
0800067E  4878 03E8 1014          pea       1000
08000682  4EB9 0800 1015          jsr       LDIV
08000686  1BBC      
08000688  202F 0004 1016          move.l    4(A7),D0
0800068C  504F      1017          addq.w    #8,A7
0800068E  4A80      1018          tst.l     D0
08000690  661A      1019          bne.s     byte_func_44
                    1020   byte_func_46:
                    1021   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
08000692  2F05      1022          move.l    D5,-(A7)
08000694  CCBC 0000 1023          and.l     #255,D6
08000698  00FF      
0800069A  2F06      1024          move.l    D6,-(A7)
0800069C  4879 0800 1025          pea       @m68kus~1_17.L
080006A0  326E      
080006A2  4E92      1026          jsr       (A2)
080006A4  DEFC 000C 1027          add.w     #12,A7
080006A8  6000 00B2 1028          bra       byte_func_53
                    1029   byte_func_44:
                    1030   ; }
                    1031   ; else if ((count2 == 1) || ((count2 - 1) % 1000)==0){
080006AC  0C84 0000 1032          cmp.l     #1,D4
080006B0  0001      
080006B2  671A      1033          beq.s     byte_func_49
080006B4  2004      1034          move.l    D4,D0
080006B6  5380      1035          subq.l    #1,D0
080006B8  2F00      1036          move.l    D0,-(A7)
080006BA  4878 03E8 1037          pea       1000
080006BE  4EB9 0800 1038          jsr       LDIV
080006C2  1BBC      
080006C4  202F 0004 1039          move.l    4(A7),D0
080006C8  504F      1040          addq.w    #8,A7
080006CA  4A80      1041          tst.l     D0
080006CC  661A      1042          bne.s     byte_func_47
                    1043   byte_func_49:
                    1044   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
080006CE  2F05      1045          move.l    D5,-(A7)
080006D0  CCBC 0000 1046          and.l     #255,D6
080006D4  00FF      
080006D6  2F06      1047          move.l    D6,-(A7)
080006D8  4879 0800 1048          pea       @m68kus~1_17.L
080006DC  326E      
080006DE  4E92      1049          jsr       (A2)
080006E0  DEFC 000C 1050          add.w     #12,A7
080006E4  6000 0076 1051          bra       byte_func_53
                    1052   byte_func_47:
                    1053   ; }
                    1054   ; else if ((count2 == 2) || ((count2 - 2) % 1000)==0){
080006E8  0C84 0000 1055          cmp.l     #2,D4
080006EC  0002      
080006EE  671A      1056          beq.s     byte_func_52
080006F0  2004      1057          move.l    D4,D0
080006F2  5580      1058          subq.l    #2,D0
080006F4  2F00      1059          move.l    D0,-(A7)
080006F6  4878 03E8 1060          pea       1000
080006FA  4EB9 0800 1061          jsr       LDIV
080006FE  1BBC      
08000700  202F 0004 1062          move.l    4(A7),D0
08000704  504F      1063          addq.w    #8,A7
08000706  4A80      1064          tst.l     D0
08000708  661A      1065          bne.s     byte_func_50
                    1066   byte_func_52:
                    1067   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
0800070A  2F05      1068          move.l    D5,-(A7)
0800070C  CCBC 0000 1069          and.l     #255,D6
08000710  00FF      
08000712  2F06      1070          move.l    D6,-(A7)
08000714  4879 0800 1071          pea       @m68kus~1_17.L
08000718  326E      
0800071A  4E92      1072          jsr       (A2)
0800071C  DEFC 000C 1073          add.w     #12,A7
08000720  6000 003A 1074          bra       byte_func_53
                    1075   byte_func_50:
                    1076   ; }
                    1077   ; else if ((count2 == 3) || ((count2 - 3) % 1000)==0){
08000724  0C84 0000 1078          cmp.l     #3,D4
08000728  0003      
0800072A  671A      1079          beq.s     byte_func_55
0800072C  2004      1080          move.l    D4,D0
0800072E  5780      1081          subq.l    #3,D0
08000730  2F00      1082          move.l    D0,-(A7)
08000732  4878 03E8 1083          pea       1000
08000736  4EB9 0800 1084          jsr       LDIV
0800073A  1BBC      
0800073C  202F 0004 1085          move.l    4(A7),D0
08000740  504F      1086          addq.w    #8,A7
08000742  4A80      1087          tst.l     D0
08000744  6616      1088          bne.s     byte_func_53
                    1089   byte_func_55:
                    1090   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
08000746  2F05      1091          move.l    D5,-(A7)
08000748  CCBC 0000 1092          and.l     #255,D6
0800074C  00FF      
0800074E  2F06      1093          move.l    D6,-(A7)
08000750  4879 0800 1094          pea       @m68kus~1_17.L
08000754  326E      
08000756  4E92      1095          jsr       (A2)
08000758  DEFC 000C 1096          add.w     #12,A7
                    1097   byte_func_53:
                    1098   ; }
                    1099   ; count2++;
0800075C  5284      1100          addq.l    #1,D4
                    1101   ; *Start_temp++;
0800075E  2045      1102          move.l    D5,A0
08000760  5285      1103          addq.l    #1,D5
08000762  6000 FF08 1104          bra       byte_func_41
                    1105   byte_func_43:
08000766  6010      1106          bra.s     byte_func_56
                    1107   byte_func_39:
                    1108   ; }
                    1109   ; }
                    1110   ; else if (choice == '0'){
08000768  0C07 0030 1111          cmp.b     #48,D7
0800076C  660A      1112          bne.s     byte_func_56
                    1113   ; printf("\r\nProgram Ended");
0800076E  4879 0800 1114          pea       @m68kus~1_18.L
08000772  328E      
08000774  4E92      1115          jsr       (A2)
08000776  584F      1116          addq.w    #4,A7
                    1117   byte_func_56:
08000778  4CDF 3CFC 1118          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
0800077C  4E5E      1119          unlk      A6
0800077E  4E75      1120          rts
                    1121   ; }
                    1122   ; }
                    1123   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1124   ; //word_func//
                    1125   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1126   ; void word_func(void){
                    1127   _word_func:
08000780  4E56 FFD8 1128          link      A6,#-40
08000784  48E7 3F38 1129          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4,-(A7)
08000788  45F9 0800 1130          lea       _printf.L,A2
0800078C  1CBA      
0800078E  47F9 0800 1131          lea       _scanf.L,A3
08000792  1C88      
08000794  49EE FFF2 1132          lea       -14(A6),A4
                    1133   ; int worddata1, worddata2, worddata3, worddata4;
                    1134   ; int tempdata;
                    1135   ; int *Start_hold, *End_hold;
                    1136   ; short *Start, *End;
                    1137   ; short *Start_temp, *End_temp;
                    1138   ; unsigned char data, data2;
                    1139   ; int count1 = 0;
08000798  4283      1140          clr.l     D3
                    1141   ; int count2 = 0;
0800079A  4285      1142          clr.l     D5
                    1143   ; char choice;
                    1144   ; printf("\r\nEnter 4 words (2 bytes) of Hexidecimal test data.");
0800079C  4879 0800 1145          pea       @m68kus~1_19.L
080007A0  329E      
080007A2  4E92      1146          jsr       (A2)
080007A4  584F      1147          addq.w    #4,A7
                    1148   ; printf("\r\nEnter First word: ");
080007A6  4879 0800 1149          pea       @m68kus~1_20.L
080007AA  32D2      
080007AC  4E92      1150          jsr       (A2)
080007AE  584F      1151          addq.w    #4,A7
                    1152   ; scanf("%x", &worddata1) ;
080007B0  486E FFDA 1153          pea       -38(A6)
080007B4  4879 0800 1154          pea       @m68kus~1_3.L
080007B8  3056      
080007BA  4E93      1155          jsr       (A3)
080007BC  504F      1156          addq.w    #8,A7
                    1157   ; //worddata1 = Get4HexDigits(0) ;
                    1158   ; printf("Enter Second word: ");
080007BE  4879 0800 1159          pea       @m68kus~1_21.L
080007C2  32E8      
080007C4  4E92      1160          jsr       (A2)
080007C6  584F      1161          addq.w    #4,A7
                    1162   ; scanf("%x", &worddata2) ;
080007C8  486E FFDE 1163          pea       -34(A6)
080007CC  4879 0800 1164          pea       @m68kus~1_3.L
080007D0  3056      
080007D2  4E93      1165          jsr       (A3)
080007D4  504F      1166          addq.w    #8,A7
                    1167   ; //worddata2 = Get4HexDigits(0) ;
                    1168   ; printf("Enter Third word: ");
080007D6  4879 0800 1169          pea       @m68kus~1_22.L
080007DA  32FC      
080007DC  4E92      1170          jsr       (A2)
080007DE  584F      1171          addq.w    #4,A7
                    1172   ; scanf("%x", &worddata3) ;
080007E0  486E FFE2 1173          pea       -30(A6)
080007E4  4879 0800 1174          pea       @m68kus~1_3.L
080007E8  3056      
080007EA  4E93      1175          jsr       (A3)
080007EC  504F      1176          addq.w    #8,A7
                    1177   ; //worddata3 = Get4HexDigits(0) ;
                    1178   ; printf("Enter Fourth word: ");
080007EE  4879 0800 1179          pea       @m68kus~1_23.L
080007F2  3310      
080007F4  4E92      1180          jsr       (A2)
080007F6  584F      1181          addq.w    #4,A7
                    1182   ; scanf("%x", &worddata4) ;
080007F8  486E FFE6 1183          pea       -26(A6)
080007FC  4879 0800 1184          pea       @m68kus~1_3.L
08000800  3056      
08000802  4E93      1185          jsr       (A3)
08000804  504F      1186          addq.w    #8,A7
                    1187   ; //worddata4 = Get4HexDigits(0) ;
                    1188   ; printf("Valid addresses for this program are: $0900 0000 - $097F FFFF");
08000806  4879 0800 1189          pea       @m68kus~1_24.L
0800080A  3324      
0800080C  4E92      1190          jsr       (A2)
0800080E  584F      1191          addq.w    #4,A7
                    1192   ; printf("\r\nFor this test, the start and end addresses must align to an even address");
08000810  4879 0800 1193          pea       @m68kus~1_25.L
08000814  3362      
08000816  4E92      1194          jsr       (A2)
08000818  584F      1195          addq.w    #4,A7
                    1196   ; printf("\r\nEnter Start Address: ") ;
0800081A  4879 0800 1197          pea       @m68kus~1_8.L
0800081E  30D6      
08000820  4E92      1198          jsr       (A2)
08000822  584F      1199          addq.w    #4,A7
                    1200   ; scanf("%x", &Start_hold) ;
08000824  486E FFEE 1201          pea       -18(A6)
08000828  4879 0800 1202          pea       @m68kus~1_3.L
0800082C  3056      
0800082E  4E93      1203          jsr       (A3)
08000830  504F      1204          addq.w    #8,A7
                    1205   ; //Start_hold = Get8HexDigits(0) ;
                    1206   ; printf("Enter End Address: ") ;
08000832  4879 0800 1207          pea       @m68kus~1_9.L
08000836  30EE      
08000838  4E92      1208          jsr       (A2)
0800083A  584F      1209          addq.w    #4,A7
                    1210   ; scanf("%x", &End_hold) ;
0800083C  2F0C      1211          move.l    A4,-(A7)
0800083E  4879 0800 1212          pea       @m68kus~1_3.L
08000842  3056      
08000844  4E93      1213          jsr       (A3)
08000846  504F      1214          addq.w    #8,A7
                    1215   ; //End_hold = Get8HexDigits(0) ;
                    1216   ; while ((Start_hold < 0x09000000) || (Start_hold > 0x097FFFFF) || ((Start_hold % 2) != 0)){
                    1217   word_func_1:
08000848  202E FFEE 1218          move.l    -18(A6),D0
0800084C  0C80 0900 1219          cmp.l     #150994944,D0
08000850  0000      
08000852  6524      1220          blo.s     word_func_4
08000854  202E FFEE 1221          move.l    -18(A6),D0
08000858  0C80 097F 1222          cmp.l     #159383551,D0
0800085C  FFFF      
0800085E  6218      1223          bhi.s     word_func_4
08000860  2F2E FFEE 1224          move.l    -18(A6),-(A7)
08000864  4878 0002 1225          pea       2
08000868  4EB9 0800 1226          jsr       ULDIV
0800086C  1BAA      
0800086E  202F 0004 1227          move.l    4(A7),D0
08000872  504F      1228          addq.w    #8,A7
08000874  4A80      1229          tst.l     D0
08000876  671A      1230          beq.s     word_func_3
                    1231   word_func_4:
                    1232   ; printf("ERROR. Please Enter a valid Start Address: ");
08000878  4879 0800 1233          pea       @m68kus~1_10.L
0800087C  3102      
0800087E  4E92      1234          jsr       (A2)
08000880  584F      1235          addq.w    #4,A7
                    1236   ; scanf("%x", &Start_hold) ;
08000882  486E FFEE 1237          pea       -18(A6)
08000886  4879 0800 1238          pea       @m68kus~1_3.L
0800088A  3056      
0800088C  4E93      1239          jsr       (A3)
0800088E  504F      1240          addq.w    #8,A7
08000890  60B6      1241          bra       word_func_1
                    1242   word_func_3:
                    1243   ; //Start_hold = Get8HexDigits(0) ;
                    1244   ; }
                    1245   ; while ((End_hold < 0x09000000) || (End_hold > 0x097FFFFF) || ((End_hold % 2) != 0)){
                    1246   word_func_5:
08000892  2014      1247          move.l    (A4),D0
08000894  0C80 0900 1248          cmp.l     #150994944,D0
08000898  0000      
0800089A  6520      1249          blo.s     word_func_8
0800089C  2014      1250          move.l    (A4),D0
0800089E  0C80 097F 1251          cmp.l     #159383551,D0
080008A2  FFFF      
080008A4  6216      1252          bhi.s     word_func_8
080008A6  2F14      1253          move.l    (A4),-(A7)
080008A8  4878 0002 1254          pea       2
080008AC  4EB9 0800 1255          jsr       ULDIV
080008B0  1BAA      
080008B2  202F 0004 1256          move.l    4(A7),D0
080008B6  504F      1257          addq.w    #8,A7
080008B8  4A80      1258          tst.l     D0
080008BA  6718      1259          beq.s     word_func_7
                    1260   word_func_8:
                    1261   ; printf("ERROR. Please Enter a valid End Address: ");
080008BC  4879 0800 1262          pea       @m68kus~1_26.L
080008C0  33AE      
080008C2  4E92      1263          jsr       (A2)
080008C4  584F      1264          addq.w    #4,A7
                    1265   ; scanf("%x", &End_hold) ;
080008C6  2F0C      1266          move.l    A4,-(A7)
080008C8  4879 0800 1267          pea       @m68kus~1_3.L
080008CC  3056      
080008CE  4E93      1268          jsr       (A3)
080008D0  504F      1269          addq.w    #8,A7
080008D2  60BE      1270          bra       word_func_5
                    1271   word_func_7:
                    1272   ; //End_hold = Get8HexDigits(0) ;
                    1273   ; }
                    1274   ; while (End_hold <= Start_hold){
                    1275   word_func_9:
080008D4  2014      1276          move.l    (A4),D0
080008D6  B0AE FFEE 1277          cmp.l     -18(A6),D0
080008DA  6222      1278          bhi.s     word_func_11
                    1279   ; printf("ERROR. Please enter an End Address larger than the Start Address");
080008DC  4879 0800 1280          pea       @m68kus~1_27.L
080008E0  33D8      
080008E2  4E92      1281          jsr       (A2)
080008E4  584F      1282          addq.w    #4,A7
                    1283   ; //printf("\r\nEnter Start Address: ") ;
                    1284   ; //Start_hold = Get8HexDigits(0) ;
                    1285   ; printf("\r\nEnter End Address: ") ;
080008E6  4879 0800 1286          pea       @m68kus~1_13.L
080008EA  319E      
080008EC  4E92      1287          jsr       (A2)
080008EE  584F      1288          addq.w    #4,A7
                    1289   ; scanf("%x", &End_hold) ;
080008F0  2F0C      1290          move.l    A4,-(A7)
080008F2  4879 0800 1291          pea       @m68kus~1_3.L
080008F6  3056      
080008F8  4E93      1292          jsr       (A3)
080008FA  504F      1293          addq.w    #8,A7
080008FC  60D6      1294          bra       word_func_9
                    1295   word_func_11:
                    1296   ; //End_hold = Get8HexDigits(0) ;
                    1297   ; }
                    1298   ; Start = Start_hold;
080008FE  242E FFEE 1299          move.l    -18(A6),D2
                    1300   ; End = End_hold;
08000902  2D54 FFF6 1301          move.l    (A4),-10(A6)
                    1302   ; Start_temp = Start_hold;
08000906  282E FFEE 1303          move.l    -18(A6),D4
                    1304   ; End_temp = End_hold;
0800090A  2D54 FFFA 1305          move.l    (A4),-6(A6)
                    1306   ; while (Start < End){
                    1307   word_func_12:
0800090E  B4AE FFF6 1308          cmp.l     -10(A6),D2
08000912  6400 01A8 1309          bhs       word_func_14
                    1310   ; if ((count1 == 0) || ((count1 % 4)) ==0 ){
08000916  4A83      1311          tst.l     D3
08000918  6718      1312          beq.s     word_func_17
0800091A  2F03      1313          move.l    D3,-(A7)
0800091C  4878 0004 1314          pea       4
08000920  4EB9 0800 1315          jsr       LDIV
08000924  1BBC      
08000926  202F 0004 1316          move.l    4(A7),D0
0800092A  504F      1317          addq.w    #8,A7
0800092C  4A80      1318          tst.l     D0
0800092E  6600 0042 1319          bne       word_func_15
                    1320   word_func_17:
                    1321   ; *Start = worddata1;
08000932  202E FFDA 1322          move.l    -38(A6),D0
08000936  2042      1323          move.l    D2,A0
08000938  3080      1324          move.w    D0,(A0)
                    1325   ; if ((count1 == 0) || ((count1 % 1000)==0)){
0800093A  4A83      1326          tst.l     D3
0800093C  6716      1327          beq.s     word_func_20
0800093E  2F03      1328          move.l    D3,-(A7)
08000940  4878 03E8 1329          pea       1000
08000944  4EB9 0800 1330          jsr       LDIV
08000948  1BBC      
0800094A  202F 0004 1331          move.l    4(A7),D0
0800094E  504F      1332          addq.w    #8,A7
08000950  4A80      1333          tst.l     D0
08000952  661C      1334          bne.s     word_func_18
                    1335   word_func_20:
                    1336   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata1);
08000954  2F2E FFDA 1337          move.l    -38(A6),-(A7)
08000958  2202      1338          move.l    D2,D1
0800095A  82BC 0000 1339          or.l      #1,D1
0800095E  0001      
08000960  2F01      1340          move.l    D1,-(A7)
08000962  2F02      1341          move.l    D2,-(A7)
08000964  4879 0800 1342          pea       @m68kus~1_28.L
08000968  341A      
0800096A  4E92      1343          jsr       (A2)
0800096C  DEFC 0010 1344          add.w     #16,A7
                    1345   word_func_18:
                    1346   ; }
                    1347   ; Start++;
08000970  5482      1348          addq.l    #2,D2
                    1349   word_func_15:
                    1350   ; }
                    1351   ; if ((count1 == 1) || (((count1 - 1) % 4)) ==0 ){
08000972  0C83 0000 1352          cmp.l     #1,D3
08000976  0001      
08000978  671C      1353          beq.s     word_func_23
0800097A  2003      1354          move.l    D3,D0
0800097C  5380      1355          subq.l    #1,D0
0800097E  2F00      1356          move.l    D0,-(A7)
08000980  4878 0004 1357          pea       4
08000984  4EB9 0800 1358          jsr       LDIV
08000988  1BBC      
0800098A  202F 0004 1359          move.l    4(A7),D0
0800098E  504F      1360          addq.w    #8,A7
08000990  4A80      1361          tst.l     D0
08000992  6600 004A 1362          bne       word_func_21
                    1363   word_func_23:
                    1364   ; *Start = worddata2;
08000996  202E FFDE 1365          move.l    -34(A6),D0
0800099A  2042      1366          move.l    D2,A0
0800099C  3080      1367          move.w    D0,(A0)
                    1368   ; if ((count1 == 1) || (((count1 -1) % 1000)==0)){
0800099E  0C83 0000 1369          cmp.l     #1,D3
080009A2  0001      
080009A4  671A      1370          beq.s     word_func_26
080009A6  2003      1371          move.l    D3,D0
080009A8  5380      1372          subq.l    #1,D0
080009AA  2F00      1373          move.l    D0,-(A7)
080009AC  4878 03E8 1374          pea       1000
080009B0  4EB9 0800 1375          jsr       LDIV
080009B4  1BBC      
080009B6  202F 0004 1376          move.l    4(A7),D0
080009BA  504F      1377          addq.w    #8,A7
080009BC  4A80      1378          tst.l     D0
080009BE  661C      1379          bne.s     word_func_24
                    1380   word_func_26:
                    1381   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata2);
080009C0  2F2E FFDE 1382          move.l    -34(A6),-(A7)
080009C4  2202      1383          move.l    D2,D1
080009C6  82BC 0000 1384          or.l      #1,D1
080009CA  0001      
080009CC  2F01      1385          move.l    D1,-(A7)
080009CE  2F02      1386          move.l    D2,-(A7)
080009D0  4879 0800 1387          pea       @m68kus~1_28.L
080009D4  341A      
080009D6  4E92      1388          jsr       (A2)
080009D8  DEFC 0010 1389          add.w     #16,A7
                    1390   word_func_24:
                    1391   ; }
                    1392   ; Start++;
080009DC  5482      1393          addq.l    #2,D2
                    1394   word_func_21:
                    1395   ; }
                    1396   ; if ((count1 == 2) || (((count1 - 2) % 4)) ==0 ){
080009DE  0C83 0000 1397          cmp.l     #2,D3
080009E2  0002      
080009E4  671C      1398          beq.s     word_func_29
080009E6  2003      1399          move.l    D3,D0
080009E8  5580      1400          subq.l    #2,D0
080009EA  2F00      1401          move.l    D0,-(A7)
080009EC  4878 0004 1402          pea       4
080009F0  4EB9 0800 1403          jsr       LDIV
080009F4  1BBC      
080009F6  202F 0004 1404          move.l    4(A7),D0
080009FA  504F      1405          addq.w    #8,A7
080009FC  4A80      1406          tst.l     D0
080009FE  6600 004A 1407          bne       word_func_27
                    1408   word_func_29:
                    1409   ; *Start = worddata3;
08000A02  202E FFE2 1410          move.l    -30(A6),D0
08000A06  2042      1411          move.l    D2,A0
08000A08  3080      1412          move.w    D0,(A0)
                    1413   ; if ((count1 == 2) || (((count1 -2) % 1000)==0)){
08000A0A  0C83 0000 1414          cmp.l     #2,D3
08000A0E  0002      
08000A10  671A      1415          beq.s     word_func_32
08000A12  2003      1416          move.l    D3,D0
08000A14  5580      1417          subq.l    #2,D0
08000A16  2F00      1418          move.l    D0,-(A7)
08000A18  4878 03E8 1419          pea       1000
08000A1C  4EB9 0800 1420          jsr       LDIV
08000A20  1BBC      
08000A22  202F 0004 1421          move.l    4(A7),D0
08000A26  504F      1422          addq.w    #8,A7
08000A28  4A80      1423          tst.l     D0
08000A2A  661C      1424          bne.s     word_func_30
                    1425   word_func_32:
                    1426   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata3);
08000A2C  2F2E FFE2 1427          move.l    -30(A6),-(A7)
08000A30  2202      1428          move.l    D2,D1
08000A32  82BC 0000 1429          or.l      #1,D1
08000A36  0001      
08000A38  2F01      1430          move.l    D1,-(A7)
08000A3A  2F02      1431          move.l    D2,-(A7)
08000A3C  4879 0800 1432          pea       @m68kus~1_28.L
08000A40  341A      
08000A42  4E92      1433          jsr       (A2)
08000A44  DEFC 0010 1434          add.w     #16,A7
                    1435   word_func_30:
                    1436   ; }
                    1437   ; Start++;
08000A48  5482      1438          addq.l    #2,D2
                    1439   word_func_27:
                    1440   ; }
                    1441   ; if ((count1 == 3) || (((count1 - 3) % 4)) ==0 ){
08000A4A  0C83 0000 1442          cmp.l     #3,D3
08000A4E  0003      
08000A50  671C      1443          beq.s     word_func_35
08000A52  2003      1444          move.l    D3,D0
08000A54  5780      1445          subq.l    #3,D0
08000A56  2F00      1446          move.l    D0,-(A7)
08000A58  4878 0004 1447          pea       4
08000A5C  4EB9 0800 1448          jsr       LDIV
08000A60  1BBC      
08000A62  202F 0004 1449          move.l    4(A7),D0
08000A66  504F      1450          addq.w    #8,A7
08000A68  4A80      1451          tst.l     D0
08000A6A  6600 004A 1452          bne       word_func_33
                    1453   word_func_35:
                    1454   ; *Start = worddata4;
08000A6E  202E FFE6 1455          move.l    -26(A6),D0
08000A72  2042      1456          move.l    D2,A0
08000A74  3080      1457          move.w    D0,(A0)
                    1458   ; if ((count1 == 3) || (((count1 - 3) % 1000)==0)){
08000A76  0C83 0000 1459          cmp.l     #3,D3
08000A7A  0003      
08000A7C  671A      1460          beq.s     word_func_38
08000A7E  2003      1461          move.l    D3,D0
08000A80  5780      1462          subq.l    #3,D0
08000A82  2F00      1463          move.l    D0,-(A7)
08000A84  4878 03E8 1464          pea       1000
08000A88  4EB9 0800 1465          jsr       LDIV
08000A8C  1BBC      
08000A8E  202F 0004 1466          move.l    4(A7),D0
08000A92  504F      1467          addq.w    #8,A7
08000A94  4A80      1468          tst.l     D0
08000A96  661C      1469          bne.s     word_func_36
                    1470   word_func_38:
                    1471   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata4);
08000A98  2F2E FFE6 1472          move.l    -26(A6),-(A7)
08000A9C  2202      1473          move.l    D2,D1
08000A9E  82BC 0000 1474          or.l      #1,D1
08000AA2  0001      
08000AA4  2F01      1475          move.l    D1,-(A7)
08000AA6  2F02      1476          move.l    D2,-(A7)
08000AA8  4879 0800 1477          pea       @m68kus~1_28.L
08000AAC  341A      
08000AAE  4E92      1478          jsr       (A2)
08000AB0  DEFC 0010 1479          add.w     #16,A7
                    1480   word_func_36:
                    1481   ; }
                    1482   ; Start++;
08000AB4  5482      1483          addq.l    #2,D2
                    1484   word_func_33:
                    1485   ; }
                    1486   ; count1++;
08000AB6  5283      1487          addq.l    #1,D3
08000AB8  6000 FE54 1488          bra       word_func_12
                    1489   word_func_14:
                    1490   ; }
                    1491   ; printf("\r\nWriting to memory Complete.\r\nEnter '1' to read back the memory. Enter '0' to exit program.");
08000ABC  4879 0800 1492          pea       @m68kus~1_16.L
08000AC0  3210      
08000AC2  4E92      1493          jsr       (A2)
08000AC4  584F      1494          addq.w    #4,A7
                    1495   ; choice = _getch();
08000AC6  4EB9 0800 1496          jsr       __getch
08000ACA  0124      
08000ACC  1D40 FFFF 1497          move.b    D0,-1(A6)
                    1498   ; if (choice == '1'){
08000AD0  102E FFFF 1499          move.b    -1(A6),D0
08000AD4  0C00 0031 1500          cmp.b     #49,D0
08000AD8  6600 0158 1501          bne       word_func_39
                    1502   ; //printf("\r\nwill continue");
                    1503   ; while (Start_temp < End_temp){
                    1504   word_func_41:
08000ADC  B8AE FFFA 1505          cmp.l     -6(A6),D4
08000AE0  6400 014E 1506          bhs       word_func_43
                    1507   ; data = (*Start_temp >> 8) & 0xFF;
08000AE4  2044      1508          move.l    D4,A0
08000AE6  3010      1509          move.w    (A0),D0
08000AE8  E040      1510          asr.w     #8,D0
08000AEA  C07C 00FF 1511          and.w     #255,D0
08000AEE  1E00      1512          move.b    D0,D7
                    1513   ; data2 = *Start_temp & 0xFF;
08000AF0  2044      1514          move.l    D4,A0
08000AF2  3010      1515          move.w    (A0),D0
08000AF4  C07C 00FF 1516          and.w     #255,D0
08000AF8  1C00      1517          move.b    D0,D6
                    1518   ; if ((count2 == 0) || (count2 % 1000)==0){
08000AFA  4A85      1519          tst.l     D5
08000AFC  6716      1520          beq.s     word_func_46
08000AFE  2F05      1521          move.l    D5,-(A7)
08000B00  4878 03E8 1522          pea       1000
08000B04  4EB9 0800 1523          jsr       LDIV
08000B08  1BBC      
08000B0A  202F 0004 1524          move.l    4(A7),D0
08000B0E  504F      1525          addq.w    #8,A7
08000B10  4A80      1526          tst.l     D0
08000B12  662C      1527          bne.s     word_func_44
                    1528   word_func_46:
                    1529   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000B14  2204      1530          move.l    D4,D1
08000B16  82BC 0000 1531          or.l      #1,D1
08000B1A  0001      
08000B1C  2F01      1532          move.l    D1,-(A7)
08000B1E  2F04      1533          move.l    D4,-(A7)
08000B20  CCBC 0000 1534          and.l     #255,D6
08000B24  00FF      
08000B26  2F06      1535          move.l    D6,-(A7)
08000B28  CEBC 0000 1536          and.l     #255,D7
08000B2C  00FF      
08000B2E  2F07      1537          move.l    D7,-(A7)
08000B30  4879 0800 1538          pea       @m68kus~1_29.L
08000B34  344C      
08000B36  4E92      1539          jsr       (A2)
08000B38  DEFC 0014 1540          add.w     #20,A7
08000B3C  6000 00E8 1541          bra       word_func_53
                    1542   word_func_44:
                    1543   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1544   ; }
                    1545   ; else if ((count2 == 1) || ((count2 - 1) % 1000)==0){
08000B40  0C85 0000 1546          cmp.l     #1,D5
08000B44  0001      
08000B46  671A      1547          beq.s     word_func_49
08000B48  2005      1548          move.l    D5,D0
08000B4A  5380      1549          subq.l    #1,D0
08000B4C  2F00      1550          move.l    D0,-(A7)
08000B4E  4878 03E8 1551          pea       1000
08000B52  4EB9 0800 1552          jsr       LDIV
08000B56  1BBC      
08000B58  202F 0004 1553          move.l    4(A7),D0
08000B5C  504F      1554          addq.w    #8,A7
08000B5E  4A80      1555          tst.l     D0
08000B60  662C      1556          bne.s     word_func_47
                    1557   word_func_49:
                    1558   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000B62  2204      1559          move.l    D4,D1
08000B64  82BC 0000 1560          or.l      #1,D1
08000B68  0001      
08000B6A  2F01      1561          move.l    D1,-(A7)
08000B6C  2F04      1562          move.l    D4,-(A7)
08000B6E  CCBC 0000 1563          and.l     #255,D6
08000B72  00FF      
08000B74  2F06      1564          move.l    D6,-(A7)
08000B76  CEBC 0000 1565          and.l     #255,D7
08000B7A  00FF      
08000B7C  2F07      1566          move.l    D7,-(A7)
08000B7E  4879 0800 1567          pea       @m68kus~1_29.L
08000B82  344C      
08000B84  4E92      1568          jsr       (A2)
08000B86  DEFC 0014 1569          add.w     #20,A7
08000B8A  6000 009A 1570          bra       word_func_53
                    1571   word_func_47:
                    1572   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1573   ; }
                    1574   ; else if ((count2 == 2) || ((count2 - 2) % 1000)==0){
08000B8E  0C85 0000 1575          cmp.l     #2,D5
08000B92  0002      
08000B94  671A      1576          beq.s     word_func_52
08000B96  2005      1577          move.l    D5,D0
08000B98  5580      1578          subq.l    #2,D0
08000B9A  2F00      1579          move.l    D0,-(A7)
08000B9C  4878 03E8 1580          pea       1000
08000BA0  4EB9 0800 1581          jsr       LDIV
08000BA4  1BBC      
08000BA6  202F 0004 1582          move.l    4(A7),D0
08000BAA  504F      1583          addq.w    #8,A7
08000BAC  4A80      1584          tst.l     D0
08000BAE  662C      1585          bne.s     word_func_50
                    1586   word_func_52:
                    1587   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000BB0  2204      1588          move.l    D4,D1
08000BB2  82BC 0000 1589          or.l      #1,D1
08000BB6  0001      
08000BB8  2F01      1590          move.l    D1,-(A7)
08000BBA  2F04      1591          move.l    D4,-(A7)
08000BBC  CCBC 0000 1592          and.l     #255,D6
08000BC0  00FF      
08000BC2  2F06      1593          move.l    D6,-(A7)
08000BC4  CEBC 0000 1594          and.l     #255,D7
08000BC8  00FF      
08000BCA  2F07      1595          move.l    D7,-(A7)
08000BCC  4879 0800 1596          pea       @m68kus~1_29.L
08000BD0  344C      
08000BD2  4E92      1597          jsr       (A2)
08000BD4  DEFC 0014 1598          add.w     #20,A7
08000BD8  6000 004C 1599          bra       word_func_53
                    1600   word_func_50:
                    1601   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1602   ; }
                    1603   ; else if ((count2 == 3) || ((count2 - 3) % 1000)==0){
08000BDC  0C85 0000 1604          cmp.l     #3,D5
08000BE0  0003      
08000BE2  671A      1605          beq.s     word_func_55
08000BE4  2005      1606          move.l    D5,D0
08000BE6  5780      1607          subq.l    #3,D0
08000BE8  2F00      1608          move.l    D0,-(A7)
08000BEA  4878 03E8 1609          pea       1000
08000BEE  4EB9 0800 1610          jsr       LDIV
08000BF2  1BBC      
08000BF4  202F 0004 1611          move.l    4(A7),D0
08000BF8  504F      1612          addq.w    #8,A7
08000BFA  4A80      1613          tst.l     D0
08000BFC  6628      1614          bne.s     word_func_53
                    1615   word_func_55:
                    1616   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000BFE  2204      1617          move.l    D4,D1
08000C00  82BC 0000 1618          or.l      #1,D1
08000C04  0001      
08000C06  2F01      1619          move.l    D1,-(A7)
08000C08  2F04      1620          move.l    D4,-(A7)
08000C0A  CCBC 0000 1621          and.l     #255,D6
08000C0E  00FF      
08000C10  2F06      1622          move.l    D6,-(A7)
08000C12  CEBC 0000 1623          and.l     #255,D7
08000C16  00FF      
08000C18  2F07      1624          move.l    D7,-(A7)
08000C1A  4879 0800 1625          pea       @m68kus~1_29.L
08000C1E  344C      
08000C20  4E92      1626          jsr       (A2)
08000C22  DEFC 0014 1627          add.w     #20,A7
                    1628   word_func_53:
                    1629   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1630   ; }
                    1631   ; count2++;
08000C26  5285      1632          addq.l    #1,D5
                    1633   ; *Start_temp++;
08000C28  2044      1634          move.l    D4,A0
08000C2A  5484      1635          addq.l    #2,D4
08000C2C  6000 FEAE 1636          bra       word_func_41
                    1637   word_func_43:
08000C30  6014      1638          bra.s     word_func_56
                    1639   word_func_39:
                    1640   ; }
                    1641   ; }
                    1642   ; else if (choice == '0'){
08000C32  102E FFFF 1643          move.b    -1(A6),D0
08000C36  0C00 0030 1644          cmp.b     #48,D0
08000C3A  660A      1645          bne.s     word_func_56
                    1646   ; printf("\r\nProgram Ended");
08000C3C  4879 0800 1647          pea       @m68kus~1_18.L
08000C40  328E      
08000C42  4E92      1648          jsr       (A2)
08000C44  584F      1649          addq.w    #4,A7
                    1650   word_func_56:
08000C46  4CDF 1CFC 1651          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4
08000C4A  4E5E      1652          unlk      A6
08000C4C  4E75      1653          rts
                    1654   ; }
                    1655   ; /*
                    1656   ; *Start = 0xAAAA;
                    1657   ; printf("\r\n%04X", *Start);
                    1658   ; //  data = *Start;
                    1659   ; //data2 =*(Start + 0x00000001);
                    1660   ; data = (*Start >> 8) & 0xFF;
                    1661   ; data2 = *Start & 0xFF;
                    1662   ; printf("\r\nValue $%02X $%02X found at address $%08X - $%08X", data, data2, Start, (Start + (0x000F && Start)));
                    1663   ; printf("\r\nValue $%02X $%02X found at address $%08X - $%08X", data, data2, Start, (Start + 1));
                    1664   ; printf("\r\nValue $%02X $%02X found at address $%08X - $%08X", data, data2, Start, (Start | 0x0001));
                    1665   ; */
                    1666   ; }
                    1667   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1668   ; //LongWord_func//
                    1669   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1670   ; void longword_func(void){
                    1671   _longword_func:
08000C4E  4E56 FFCC 1672          link      A6,#-52
08000C52  48E7 3F38 1673          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4,-(A7)
08000C56  45F9 0800 1674          lea       _printf.L,A2
08000C5A  1CBA      
08000C5C  47F9 0800 1675          lea       _scanf.L,A3
08000C60  1C88      
08000C62  49EE FFE6 1676          lea       -26(A6),A4
                    1677   ; unsigned char data1a, data1b, data2a, data2b, data3a, data3b, data4a, data4b;
                    1678   ; int lworddata1, lworddata2, lworddata3, lworddata4;
                    1679   ; int *Start_hold, *End_hold;
                    1680   ; int *Start, *End;
                    1681   ; int *idk;
                    1682   ; short test, test1;
                    1683   ; int count3, count4;
                    1684   ; int count1 = 0;
08000C66  4284      1685          clr.l     D4
                    1686   ; int count2 = 0;
08000C68  4285      1687          clr.l     D5
                    1688   ; unsigned char add1, add2;
                    1689   ; short add3;
                    1690   ; char choice;
                    1691   ; printf("\r\nEnter 4 long words (4 bytes) of Hexidecimal test data.");
08000C6A  4879 0800 1692          pea       @m68kus~1_30.L
08000C6E  3482      
08000C70  4E92      1693          jsr       (A2)
08000C72  584F      1694          addq.w    #4,A7
                    1695   ; printf("\r\nEnter First long word: ");
08000C74  4879 0800 1696          pea       @m68kus~1_31.L
08000C78  34BC      
08000C7A  4E92      1697          jsr       (A2)
08000C7C  584F      1698          addq.w    #4,A7
                    1699   ; scanf("%x", &lworddata1) ;
08000C7E  486E FFD2 1700          pea       -46(A6)
08000C82  4879 0800 1701          pea       @m68kus~1_3.L
08000C86  3056      
08000C88  4E93      1702          jsr       (A3)
08000C8A  504F      1703          addq.w    #8,A7
                    1704   ; //lworddata1 = Get8HexDigits(0) ;
                    1705   ; //data1a = lworddata1 & 0xFFFF;
                    1706   ; //data1b = (lworddata1 >> 16) & 0xFFFF;
                    1707   ; printf("Enter Second long word: ");
08000C8C  4879 0800 1708          pea       @m68kus~1_32.L
08000C90  34D6      
08000C92  4E92      1709          jsr       (A2)
08000C94  584F      1710          addq.w    #4,A7
                    1711   ; scanf("%x", &lworddata2) ;
08000C96  486E FFD6 1712          pea       -42(A6)
08000C9A  4879 0800 1713          pea       @m68kus~1_3.L
08000C9E  3056      
08000CA0  4E93      1714          jsr       (A3)
08000CA2  504F      1715          addq.w    #8,A7
                    1716   ; //lworddata2 = Get8HexDigits(0) ;
                    1717   ; printf("Enter Third long word: ");
08000CA4  4879 0800 1718          pea       @m68kus~1_33.L
08000CA8  34F0      
08000CAA  4E92      1719          jsr       (A2)
08000CAC  584F      1720          addq.w    #4,A7
                    1721   ; scanf("%x", &lworddata3) ;
08000CAE  486E FFDA 1722          pea       -38(A6)
08000CB2  4879 0800 1723          pea       @m68kus~1_3.L
08000CB6  3056      
08000CB8  4E93      1724          jsr       (A3)
08000CBA  504F      1725          addq.w    #8,A7
                    1726   ; //lworddata3 = Get8HexDigits(0) ;
                    1727   ; printf("Enter Fourth long word: ");
08000CBC  4879 0800 1728          pea       @m68kus~1_34.L
08000CC0  3508      
08000CC2  4E92      1729          jsr       (A2)
08000CC4  584F      1730          addq.w    #4,A7
                    1731   ; scanf("%x", &lworddata4) ;
08000CC6  486E FFDE 1732          pea       -34(A6)
08000CCA  4879 0800 1733          pea       @m68kus~1_3.L
08000CCE  3056      
08000CD0  4E93      1734          jsr       (A3)
08000CD2  504F      1735          addq.w    #8,A7
                    1736   ; //lworddata4 = Get8HexDigits(0) ;
                    1737   ; // printf("\r\n%04x   %04x", data1a, data1b);
                    1738   ; printf("Valid addresses for this program are: $0900 0000 - $097F FFFF");
08000CD4  4879 0800 1739          pea       @m68kus~1_24.L
08000CD8  3324      
08000CDA  4E92      1740          jsr       (A2)
08000CDC  584F      1741          addq.w    #4,A7
                    1742   ; printf("\r\nFor this test, the start and end addresses must align to an even address");
08000CDE  4879 0800 1743          pea       @m68kus~1_25.L
08000CE2  3362      
08000CE4  4E92      1744          jsr       (A2)
08000CE6  584F      1745          addq.w    #4,A7
                    1746   ; printf("\r\nEnter Start Address: ") ;
08000CE8  4879 0800 1747          pea       @m68kus~1_8.L
08000CEC  30D6      
08000CEE  4E92      1748          jsr       (A2)
08000CF0  584F      1749          addq.w    #4,A7
                    1750   ; scanf("%x", &Start_hold) ;
08000CF2  486E FFE2 1751          pea       -30(A6)
08000CF6  4879 0800 1752          pea       @m68kus~1_3.L
08000CFA  3056      
08000CFC  4E93      1753          jsr       (A3)
08000CFE  504F      1754          addq.w    #8,A7
                    1755   ; //Start_hold = Get8HexDigits(0) ;
                    1756   ; printf("Enter End Address: ") ;
08000D00  4879 0800 1757          pea       @m68kus~1_9.L
08000D04  30EE      
08000D06  4E92      1758          jsr       (A2)
08000D08  584F      1759          addq.w    #4,A7
                    1760   ; scanf("%x", &End_hold) ;
08000D0A  2F0C      1761          move.l    A4,-(A7)
08000D0C  4879 0800 1762          pea       @m68kus~1_3.L
08000D10  3056      
08000D12  4E93      1763          jsr       (A3)
08000D14  504F      1764          addq.w    #8,A7
                    1765   ; //End_hold = Get8HexDigits(0) ;
                    1766   ; while ((Start_hold < 0x09000000) || (Start_hold > 0x097FFFFF) || ((Start_hold % 2) != 0)){
                    1767   longword_func_1:
08000D16  202E FFE2 1768          move.l    -30(A6),D0
08000D1A  0C80 0900 1769          cmp.l     #150994944,D0
08000D1E  0000      
08000D20  6524      1770          blo.s     longword_func_4
08000D22  202E FFE2 1771          move.l    -30(A6),D0
08000D26  0C80 097F 1772          cmp.l     #159383551,D0
08000D2A  FFFF      
08000D2C  6218      1773          bhi.s     longword_func_4
08000D2E  2F2E FFE2 1774          move.l    -30(A6),-(A7)
08000D32  4878 0002 1775          pea       2
08000D36  4EB9 0800 1776          jsr       ULDIV
08000D3A  1BAA      
08000D3C  202F 0004 1777          move.l    4(A7),D0
08000D40  504F      1778          addq.w    #8,A7
08000D42  4A80      1779          tst.l     D0
08000D44  671A      1780          beq.s     longword_func_3
                    1781   longword_func_4:
                    1782   ; printf("ERROR. Please Enter a valid Start Address: ");
08000D46  4879 0800 1783          pea       @m68kus~1_10.L
08000D4A  3102      
08000D4C  4E92      1784          jsr       (A2)
08000D4E  584F      1785          addq.w    #4,A7
                    1786   ; scanf("%x", &Start_hold) ;
08000D50  486E FFE2 1787          pea       -30(A6)
08000D54  4879 0800 1788          pea       @m68kus~1_3.L
08000D58  3056      
08000D5A  4E93      1789          jsr       (A3)
08000D5C  504F      1790          addq.w    #8,A7
08000D5E  60B6      1791          bra       longword_func_1
                    1792   longword_func_3:
                    1793   ; //Start_hold = Get8HexDigits(0) ;
                    1794   ; }
                    1795   ; while ((End_hold < 0x09000000) || (End_hold > 0x097FFFFF) || ((End_hold % 2) != 0)){
                    1796   longword_func_5:
08000D60  2014      1797          move.l    (A4),D0
08000D62  0C80 0900 1798          cmp.l     #150994944,D0
08000D66  0000      
08000D68  6520      1799          blo.s     longword_func_8
08000D6A  2014      1800          move.l    (A4),D0
08000D6C  0C80 097F 1801          cmp.l     #159383551,D0
08000D70  FFFF      
08000D72  6216      1802          bhi.s     longword_func_8
08000D74  2F14      1803          move.l    (A4),-(A7)
08000D76  4878 0002 1804          pea       2
08000D7A  4EB9 0800 1805          jsr       ULDIV
08000D7E  1BAA      
08000D80  202F 0004 1806          move.l    4(A7),D0
08000D84  504F      1807          addq.w    #8,A7
08000D86  4A80      1808          tst.l     D0
08000D88  6718      1809          beq.s     longword_func_7
                    1810   longword_func_8:
                    1811   ; printf("ERROR. Please Enter a valid End Address: ");
08000D8A  4879 0800 1812          pea       @m68kus~1_26.L
08000D8E  33AE      
08000D90  4E92      1813          jsr       (A2)
08000D92  584F      1814          addq.w    #4,A7
                    1815   ; scanf("%x", &End_hold) ;
08000D94  2F0C      1816          move.l    A4,-(A7)
08000D96  4879 0800 1817          pea       @m68kus~1_3.L
08000D9A  3056      
08000D9C  4E93      1818          jsr       (A3)
08000D9E  504F      1819          addq.w    #8,A7
08000DA0  60BE      1820          bra       longword_func_5
                    1821   longword_func_7:
                    1822   ; //End_hold = Get8HexDigits(0) ;
                    1823   ; }
                    1824   ; while (End_hold <= Start_hold){
                    1825   longword_func_9:
08000DA2  2014      1826          move.l    (A4),D0
08000DA4  B0AE FFE2 1827          cmp.l     -30(A6),D0
08000DA8  6222      1828          bhi.s     longword_func_11
                    1829   ; printf("ERROR. Please enter an End Address larger than the Start Address");
08000DAA  4879 0800 1830          pea       @m68kus~1_27.L
08000DAE  33D8      
08000DB0  4E92      1831          jsr       (A2)
08000DB2  584F      1832          addq.w    #4,A7
                    1833   ; //printf("\r\nEnter Start Address: ") ;
                    1834   ; //Start_hold = Get8HexDigits(0) ;
                    1835   ; printf("\r\nEnter End Address: ") ;
08000DB4  4879 0800 1836          pea       @m68kus~1_13.L
08000DB8  319E      
08000DBA  4E92      1837          jsr       (A2)
08000DBC  584F      1838          addq.w    #4,A7
                    1839   ; scanf("%x", &End_hold) ;
08000DBE  2F0C      1840          move.l    A4,-(A7)
08000DC0  4879 0800 1841          pea       @m68kus~1_3.L
08000DC4  3056      
08000DC6  4E93      1842          jsr       (A3)
08000DC8  504F      1843          addq.w    #8,A7
08000DCA  60D6      1844          bra       longword_func_9
                    1845   longword_func_11:
                    1846   ; //End_hold = Get8HexDigits(0) ;
                    1847   ; }
                    1848   ; Start = Start_hold;
08000DCC  262E FFE2 1849          move.l    -30(A6),D3
                    1850   ; End = End_hold;
08000DD0  2D54 FFEA 1851          move.l    (A4),-22(A6)
                    1852   ; while (Start < End){
                    1853   longword_func_12:
08000DD4  B6AE FFEA 1854          cmp.l     -22(A6),D3
08000DD8  6400 01A0 1855          bhs       longword_func_14
                    1856   ; if ((count1 == 0) || ((count1 % 4)) ==0 ){
08000DDC  4A84      1857          tst.l     D4
08000DDE  6718      1858          beq.s     longword_func_17
08000DE0  2F04      1859          move.l    D4,-(A7)
08000DE2  4878 0004 1860          pea       4
08000DE6  4EB9 0800 1861          jsr       LDIV
08000DEA  1BBC      
08000DEC  202F 0004 1862          move.l    4(A7),D0
08000DF0  504F      1863          addq.w    #8,A7
08000DF2  4A80      1864          tst.l     D0
08000DF4  6600 0040 1865          bne       longword_func_15
                    1866   longword_func_17:
                    1867   ; *Start = lworddata1;
08000DF8  2043      1868          move.l    D3,A0
08000DFA  20AE FFD2 1869          move.l    -46(A6),(A0)
                    1870   ; idk = Start;
08000DFE  2403      1871          move.l    D3,D2
                    1872   ; idk = (int *)((char *)idk + 3);
08000E00  2002      1873          move.l    D2,D0
08000E02  5680      1874          addq.l    #3,D0
08000E04  2400      1875          move.l    D0,D2
                    1876   ; if ((count1 == 0) || ((count1 % 1000)==0)){
08000E06  4A84      1877          tst.l     D4
08000E08  6716      1878          beq.s     longword_func_20
08000E0A  2F04      1879          move.l    D4,-(A7)
08000E0C  4878 03E8 1880          pea       1000
08000E10  4EB9 0800 1881          jsr       LDIV
08000E14  1BBC      
08000E16  202F 0004 1882          move.l    4(A7),D0
08000E1A  504F      1883          addq.w    #8,A7
08000E1C  4A80      1884          tst.l     D0
08000E1E  6614      1885          bne.s     longword_func_18
                    1886   longword_func_20:
                    1887   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata1);
08000E20  2F2E FFD2 1888          move.l    -46(A6),-(A7)
08000E24  2F02      1889          move.l    D2,-(A7)
08000E26  2F03      1890          move.l    D3,-(A7)
08000E28  4879 0800 1891          pea       @m68kus~1_35.L
08000E2C  3522      
08000E2E  4E92      1892          jsr       (A2)
08000E30  DEFC 0010 1893          add.w     #16,A7
                    1894   longword_func_18:
                    1895   ; }
                    1896   ; Start++;
08000E34  5883      1897          addq.l    #4,D3
                    1898   longword_func_15:
                    1899   ; }
                    1900   ; if ((count1 == 1) || (((count1 - 1) % 4)) ==0 ){
08000E36  0C84 0000 1901          cmp.l     #1,D4
08000E3A  0001      
08000E3C  671C      1902          beq.s     longword_func_23
08000E3E  2004      1903          move.l    D4,D0
08000E40  5380      1904          subq.l    #1,D0
08000E42  2F00      1905          move.l    D0,-(A7)
08000E44  4878 0004 1906          pea       4
08000E48  4EB9 0800 1907          jsr       LDIV
08000E4C  1BBC      
08000E4E  202F 0004 1908          move.l    4(A7),D0
08000E52  504F      1909          addq.w    #8,A7
08000E54  4A80      1910          tst.l     D0
08000E56  6600 0048 1911          bne       longword_func_21
                    1912   longword_func_23:
                    1913   ; *Start = lworddata2;
08000E5A  2043      1914          move.l    D3,A0
08000E5C  20AE FFD6 1915          move.l    -42(A6),(A0)
                    1916   ; idk = Start;
08000E60  2403      1917          move.l    D3,D2
                    1918   ; idk = (int *)((char *)idk + 3);
08000E62  2002      1919          move.l    D2,D0
08000E64  5680      1920          addq.l    #3,D0
08000E66  2400      1921          move.l    D0,D2
                    1922   ; if ((count1 == 1) || (((count1 -1) % 1000)==0)){
08000E68  0C84 0000 1923          cmp.l     #1,D4
08000E6C  0001      
08000E6E  671A      1924          beq.s     longword_func_26
08000E70  2004      1925          move.l    D4,D0
08000E72  5380      1926          subq.l    #1,D0
08000E74  2F00      1927          move.l    D0,-(A7)
08000E76  4878 03E8 1928          pea       1000
08000E7A  4EB9 0800 1929          jsr       LDIV
08000E7E  1BBC      
08000E80  202F 0004 1930          move.l    4(A7),D0
08000E84  504F      1931          addq.w    #8,A7
08000E86  4A80      1932          tst.l     D0
08000E88  6614      1933          bne.s     longword_func_24
                    1934   longword_func_26:
                    1935   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata2);
08000E8A  2F2E FFD6 1936          move.l    -42(A6),-(A7)
08000E8E  2F02      1937          move.l    D2,-(A7)
08000E90  2F03      1938          move.l    D3,-(A7)
08000E92  4879 0800 1939          pea       @m68kus~1_35.L
08000E96  3522      
08000E98  4E92      1940          jsr       (A2)
08000E9A  DEFC 0010 1941          add.w     #16,A7
                    1942   longword_func_24:
                    1943   ; }
                    1944   ; Start++;
08000E9E  5883      1945          addq.l    #4,D3
                    1946   longword_func_21:
                    1947   ; }
                    1948   ; if ((count1 == 2) || (((count1 - 2) % 4)) ==0 ){
08000EA0  0C84 0000 1949          cmp.l     #2,D4
08000EA4  0002      
08000EA6  671C      1950          beq.s     longword_func_29
08000EA8  2004      1951          move.l    D4,D0
08000EAA  5580      1952          subq.l    #2,D0
08000EAC  2F00      1953          move.l    D0,-(A7)
08000EAE  4878 0004 1954          pea       4
08000EB2  4EB9 0800 1955          jsr       LDIV
08000EB6  1BBC      
08000EB8  202F 0004 1956          move.l    4(A7),D0
08000EBC  504F      1957          addq.w    #8,A7
08000EBE  4A80      1958          tst.l     D0
08000EC0  6600 0048 1959          bne       longword_func_27
                    1960   longword_func_29:
                    1961   ; *Start = lworddata3;
08000EC4  2043      1962          move.l    D3,A0
08000EC6  20AE FFDA 1963          move.l    -38(A6),(A0)
                    1964   ; idk = Start;
08000ECA  2403      1965          move.l    D3,D2
                    1966   ; idk = (int *)((char *)idk + 3);
08000ECC  2002      1967          move.l    D2,D0
08000ECE  5680      1968          addq.l    #3,D0
08000ED0  2400      1969          move.l    D0,D2
                    1970   ; if ((count1 == 2) || (((count1 -2) % 1000)==0)){
08000ED2  0C84 0000 1971          cmp.l     #2,D4
08000ED6  0002      
08000ED8  671A      1972          beq.s     longword_func_32
08000EDA  2004      1973          move.l    D4,D0
08000EDC  5580      1974          subq.l    #2,D0
08000EDE  2F00      1975          move.l    D0,-(A7)
08000EE0  4878 03E8 1976          pea       1000
08000EE4  4EB9 0800 1977          jsr       LDIV
08000EE8  1BBC      
08000EEA  202F 0004 1978          move.l    4(A7),D0
08000EEE  504F      1979          addq.w    #8,A7
08000EF0  4A80      1980          tst.l     D0
08000EF2  6614      1981          bne.s     longword_func_30
                    1982   longword_func_32:
                    1983   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata3);
08000EF4  2F2E FFDA 1984          move.l    -38(A6),-(A7)
08000EF8  2F02      1985          move.l    D2,-(A7)
08000EFA  2F03      1986          move.l    D3,-(A7)
08000EFC  4879 0800 1987          pea       @m68kus~1_35.L
08000F00  3522      
08000F02  4E92      1988          jsr       (A2)
08000F04  DEFC 0010 1989          add.w     #16,A7
                    1990   longword_func_30:
                    1991   ; }
                    1992   ; Start++;
08000F08  5883      1993          addq.l    #4,D3
                    1994   longword_func_27:
                    1995   ; }
                    1996   ; if ((count1 == 3) || (((count1 - 3) % 4)) ==0 ){
08000F0A  0C84 0000 1997          cmp.l     #3,D4
08000F0E  0003      
08000F10  671C      1998          beq.s     longword_func_35
08000F12  2004      1999          move.l    D4,D0
08000F14  5780      2000          subq.l    #3,D0
08000F16  2F00      2001          move.l    D0,-(A7)
08000F18  4878 0004 2002          pea       4
08000F1C  4EB9 0800 2003          jsr       LDIV
08000F20  1BBC      
08000F22  202F 0004 2004          move.l    4(A7),D0
08000F26  504F      2005          addq.w    #8,A7
08000F28  4A80      2006          tst.l     D0
08000F2A  6600 0048 2007          bne       longword_func_33
                    2008   longword_func_35:
                    2009   ; *Start = lworddata4;
08000F2E  2043      2010          move.l    D3,A0
08000F30  20AE FFDE 2011          move.l    -34(A6),(A0)
                    2012   ; idk = Start;
08000F34  2403      2013          move.l    D3,D2
                    2014   ; idk = (int *)((char *)idk + 3);
08000F36  2002      2015          move.l    D2,D0
08000F38  5680      2016          addq.l    #3,D0
08000F3A  2400      2017          move.l    D0,D2
                    2018   ; if ((count1 == 3) || (((count1 - 3) % 1000)==0)){
08000F3C  0C84 0000 2019          cmp.l     #3,D4
08000F40  0003      
08000F42  671A      2020          beq.s     longword_func_38
08000F44  2004      2021          move.l    D4,D0
08000F46  5780      2022          subq.l    #3,D0
08000F48  2F00      2023          move.l    D0,-(A7)
08000F4A  4878 03E8 2024          pea       1000
08000F4E  4EB9 0800 2025          jsr       LDIV
08000F52  1BBC      
08000F54  202F 0004 2026          move.l    4(A7),D0
08000F58  504F      2027          addq.w    #8,A7
08000F5A  4A80      2028          tst.l     D0
08000F5C  6614      2029          bne.s     longword_func_36
                    2030   longword_func_38:
                    2031   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata4);
08000F5E  2F2E FFDE 2032          move.l    -34(A6),-(A7)
08000F62  2F02      2033          move.l    D2,-(A7)
08000F64  2F03      2034          move.l    D3,-(A7)
08000F66  4879 0800 2035          pea       @m68kus~1_35.L
08000F6A  3522      
08000F6C  4E92      2036          jsr       (A2)
08000F6E  DEFC 0010 2037          add.w     #16,A7
                    2038   longword_func_36:
                    2039   ; }
                    2040   ; Start++;
08000F72  5883      2041          addq.l    #4,D3
                    2042   longword_func_33:
                    2043   ; }
                    2044   ; count1++;
08000F74  5284      2045          addq.l    #1,D4
08000F76  6000 FE5C 2046          bra       longword_func_12
                    2047   longword_func_14:
                    2048   ; }
                    2049   ; printf("\r\nWriting to memory Complete.\r\nEnter '1' to read back the memory. Enter '0' to exit program.");
08000F7A  4879 0800 2050          pea       @m68kus~1_16.L
08000F7E  3210      
08000F80  4E92      2051          jsr       (A2)
08000F82  584F      2052          addq.w    #4,A7
                    2053   ; choice = _getch();
08000F84  4EB9 0800 2054          jsr       __getch
08000F88  0124      
08000F8A  1D40 FFFF 2055          move.b    D0,-1(A6)
                    2056   ; if (choice == '1'){
08000F8E  102E FFFF 2057          move.b    -1(A6),D0
08000F92  0C00 0031 2058          cmp.b     #49,D0
08000F96  6600 01E8 2059          bne       longword_func_39
                    2060   ; //printf("\r\nwill continue");
                    2061   ; while (Start_hold < End_hold){
                    2062   longword_func_41:
08000F9A  202E FFE2 2063          move.l    -30(A6),D0
08000F9E  B094      2064          cmp.l     (A4),D0
08000FA0  6400 01DC 2065          bhs       longword_func_43
                    2066   ; data1a = (*Start_hold >> 8) & 0xFF;
08000FA4  206E FFE2 2067          move.l    -30(A6),A0
08000FA8  2010      2068          move.l    (A0),D0
08000FAA  E080      2069          asr.l     #8,D0
08000FAC  C0BC 0000 2070          and.l     #255,D0
08000FB0  00FF      
08000FB2  1D40 FFCC 2071          move.b    D0,-52(A6)
                    2072   ; data1b = *Start_hold & 0xFF;
08000FB6  206E FFE2 2073          move.l    -30(A6),A0
08000FBA  2010      2074          move.l    (A0),D0
08000FBC  C0BC 0000 2075          and.l     #255,D0
08000FC0  00FF      
08000FC2  1D40 FFCD 2076          move.b    D0,-51(A6)
                    2077   ; data2a = (*Start_hold >> 24) & 0xFF;
08000FC6  206E FFE2 2078          move.l    -30(A6),A0
08000FCA  2010      2079          move.l    (A0),D0
08000FCC  E080      2080          asr.l     #8,D0
08000FCE  E080      2081          asr.l     #8,D0
08000FD0  E080      2082          asr.l     #8,D0
08000FD2  C0BC 0000 2083          and.l     #255,D0
08000FD6  00FF      
08000FD8  1E00      2084          move.b    D0,D7
                    2085   ; data2b = (*Start_hold >> 16) & 0xFF;
08000FDA  206E FFE2 2086          move.l    -30(A6),A0
08000FDE  2010      2087          move.l    (A0),D0
08000FE0  E080      2088          asr.l     #8,D0
08000FE2  E080      2089          asr.l     #8,D0
08000FE4  C0BC 0000 2090          and.l     #255,D0
08000FE8  00FF      
08000FEA  1C00      2091          move.b    D0,D6
                    2092   ; idk = Start_hold;
08000FEC  242E FFE2 2093          move.l    -30(A6),D2
                    2094   ; idk = (int *)((char *)idk + 3);
08000FF0  2002      2095          move.l    D2,D0
08000FF2  5680      2096          addq.l    #3,D0
08000FF4  2400      2097          move.l    D0,D2
                    2098   ; //data = (*Start_hold >> 8) & 0xFF;
                    2099   ; //data2 = *Start_hold & 0xFF;
                    2100   ; if ((count2 == 0) || (count2 % 1000)==0){
08000FF6  4A85      2101          tst.l     D5
08000FF8  6718      2102          beq.s     longword_func_46
08000FFA  2F05      2103          move.l    D5,-(A7)
08000FFC  4878 03E8 2104          pea       1000
08001000  4EB9 0800 2105          jsr       LDIV
08001004  1BBC      
08001006  202F 0004 2106          move.l    4(A7),D0
0800100A  504F      2107          addq.w    #8,A7
0800100C  4A80      2108          tst.l     D0
0800100E  6600 0040 2109          bne       longword_func_44
                    2110   longword_func_46:
                    2111   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
08001012  2F02      2112          move.l    D2,-(A7)
08001014  2F2E FFE2 2113          move.l    -30(A6),-(A7)
08001018  122E FFCD 2114          move.b    -51(A6),D1
0800101C  C2BC 0000 2115          and.l     #255,D1
08001020  00FF      
08001022  2F01      2116          move.l    D1,-(A7)
08001024  122E FFCC 2117          move.b    -52(A6),D1
08001028  C2BC 0000 2118          and.l     #255,D1
0800102C  00FF      
0800102E  2F01      2119          move.l    D1,-(A7)
08001030  CCBC 0000 2120          and.l     #255,D6
08001034  00FF      
08001036  2F06      2121          move.l    D6,-(A7)
08001038  CEBC 0000 2122          and.l     #255,D7
0800103C  00FF      
0800103E  2F07      2123          move.l    D7,-(A7)
08001040  4879 0800 2124          pea       @m68kus~1_36.L
08001044  3554      
08001046  4E92      2125          jsr       (A2)
08001048  DEFC 001C 2126          add.w     #28,A7
0800104C  6000 0122 2127          bra       longword_func_53
                    2128   longword_func_44:
                    2129   ; //printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_hold, (Start_hold | 0x0001));
                    2130   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    2131   ; }
                    2132   ; else if ((count2 == 1) || ((count2 - 1) % 1000)==0){
08001050  0C85 0000 2133          cmp.l     #1,D5
08001054  0001      
08001056  671C      2134          beq.s     longword_func_49
08001058  2005      2135          move.l    D5,D0
0800105A  5380      2136          subq.l    #1,D0
0800105C  2F00      2137          move.l    D0,-(A7)
0800105E  4878 03E8 2138          pea       1000
08001062  4EB9 0800 2139          jsr       LDIV
08001066  1BBC      
08001068  202F 0004 2140          move.l    4(A7),D0
0800106C  504F      2141          addq.w    #8,A7
0800106E  4A80      2142          tst.l     D0
08001070  6600 0040 2143          bne       longword_func_47
                    2144   longword_func_49:
                    2145   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
08001074  2F02      2146          move.l    D2,-(A7)
08001076  2F2E FFE2 2147          move.l    -30(A6),-(A7)
0800107A  122E FFCD 2148          move.b    -51(A6),D1
0800107E  C2BC 0000 2149          and.l     #255,D1
08001082  00FF      
08001084  2F01      2150          move.l    D1,-(A7)
08001086  122E FFCC 2151          move.b    -52(A6),D1
0800108A  C2BC 0000 2152          and.l     #255,D1
0800108E  00FF      
08001090  2F01      2153          move.l    D1,-(A7)
08001092  CCBC 0000 2154          and.l     #255,D6
08001096  00FF      
08001098  2F06      2155          move.l    D6,-(A7)
0800109A  CEBC 0000 2156          and.l     #255,D7
0800109E  00FF      
080010A0  2F07      2157          move.l    D7,-(A7)
080010A2  4879 0800 2158          pea       @m68kus~1_36.L
080010A6  3554      
080010A8  4E92      2159          jsr       (A2)
080010AA  DEFC 001C 2160          add.w     #28,A7
080010AE  6000 00C0 2161          bra       longword_func_53
                    2162   longword_func_47:
                    2163   ; //printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_hold, (Start_hold | 0x0001));
                    2164   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    2165   ; }
                    2166   ; else if ((count2 == 2) || ((count2 - 2) % 1000)==0){
080010B2  0C85 0000 2167          cmp.l     #2,D5
080010B6  0002      
080010B8  671C      2168          beq.s     longword_func_52
080010BA  2005      2169          move.l    D5,D0
080010BC  5580      2170          subq.l    #2,D0
080010BE  2F00      2171          move.l    D0,-(A7)
080010C0  4878 03E8 2172          pea       1000
080010C4  4EB9 0800 2173          jsr       LDIV
080010C8  1BBC      
080010CA  202F 0004 2174          move.l    4(A7),D0
080010CE  504F      2175          addq.w    #8,A7
080010D0  4A80      2176          tst.l     D0
080010D2  6600 0040 2177          bne       longword_func_50
                    2178   longword_func_52:
                    2179   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
080010D6  2F02      2180          move.l    D2,-(A7)
080010D8  2F2E FFE2 2181          move.l    -30(A6),-(A7)
080010DC  122E FFCD 2182          move.b    -51(A6),D1
080010E0  C2BC 0000 2183          and.l     #255,D1
080010E4  00FF      
080010E6  2F01      2184          move.l    D1,-(A7)
080010E8  122E FFCC 2185          move.b    -52(A6),D1
080010EC  C2BC 0000 2186          and.l     #255,D1
080010F0  00FF      
080010F2  2F01      2187          move.l    D1,-(A7)
080010F4  CCBC 0000 2188          and.l     #255,D6
080010F8  00FF      
080010FA  2F06      2189          move.l    D6,-(A7)
080010FC  CEBC 0000 2190          and.l     #255,D7
08001100  00FF      
08001102  2F07      2191          move.l    D7,-(A7)
08001104  4879 0800 2192          pea       @m68kus~1_36.L
08001108  3554      
0800110A  4E92      2193          jsr       (A2)
0800110C  DEFC 001C 2194          add.w     #28,A7
08001110  6000 005E 2195          bra       longword_func_53
                    2196   longword_func_50:
                    2197   ; }
                    2198   ; else if ((count2 == 3) || ((count2 - 3) % 1000)==0){
08001114  0C85 0000 2199          cmp.l     #3,D5
08001118  0003      
0800111A  671A      2200          beq.s     longword_func_55
0800111C  2005      2201          move.l    D5,D0
0800111E  5780      2202          subq.l    #3,D0
08001120  2F00      2203          move.l    D0,-(A7)
08001122  4878 03E8 2204          pea       1000
08001126  4EB9 0800 2205          jsr       LDIV
0800112A  1BBC      
0800112C  202F 0004 2206          move.l    4(A7),D0
08001130  504F      2207          addq.w    #8,A7
08001132  4A80      2208          tst.l     D0
08001134  663A      2209          bne.s     longword_func_53
                    2210   longword_func_55:
                    2211   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
08001136  2F02      2212          move.l    D2,-(A7)
08001138  2F2E FFE2 2213          move.l    -30(A6),-(A7)
0800113C  122E FFCD 2214          move.b    -51(A6),D1
08001140  C2BC 0000 2215          and.l     #255,D1
08001144  00FF      
08001146  2F01      2216          move.l    D1,-(A7)
08001148  122E FFCC 2217          move.b    -52(A6),D1
0800114C  C2BC 0000 2218          and.l     #255,D1
08001150  00FF      
08001152  2F01      2219          move.l    D1,-(A7)
08001154  CCBC 0000 2220          and.l     #255,D6
08001158  00FF      
0800115A  2F06      2221          move.l    D6,-(A7)
0800115C  CEBC 0000 2222          and.l     #255,D7
08001160  00FF      
08001162  2F07      2223          move.l    D7,-(A7)
08001164  4879 0800 2224          pea       @m68kus~1_36.L
08001168  3554      
0800116A  4E92      2225          jsr       (A2)
0800116C  DEFC 001C 2226          add.w     #28,A7
                    2227   longword_func_53:
                    2228   ; }
                    2229   ; count2++;
08001170  5285      2230          addq.l    #1,D5
                    2231   ; *Start_hold++;
08001172  206E FFE2 2232          move.l    -30(A6),A0
08001176  58AE FFE2 2233          addq.l    #4,-30(A6)
0800117A  6000 FE1E 2234          bra       longword_func_41
                    2235   longword_func_43:
0800117E  6014      2236          bra.s     longword_func_56
                    2237   longword_func_39:
                    2238   ; }
                    2239   ; }
                    2240   ; else if (choice == '0'){
08001180  102E FFFF 2241          move.b    -1(A6),D0
08001184  0C00 0030 2242          cmp.b     #48,D0
08001188  660A      2243          bne.s     longword_func_56
                    2244   ; printf("\r\nProgram Ended");
0800118A  4879 0800 2245          pea       @m68kus~1_18.L
0800118E  328E      
08001190  4E92      2246          jsr       (A2)
08001192  584F      2247          addq.w    #4,A7
                    2248   longword_func_56:
08001194  4CDF 1CFC 2249          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4
08001198  4E5E      2250          unlk      A6
0800119A  4E75      2251          rts
                    2252   ; }
                    2253   ; }
                    2254   ; //////////////////////////////////////////////////////////
                    2255   ; //******IIC Program Functions Begin Here***************///
                    2256   ; //////////////////////////////////////////////////////////
                    2257   ; void IIC_Init(void)
                    2258   ; {
                    2259   _IIC_Init:
                    2260   ; IIC_Prescale_Low = 0x31; //31
0800119C  13FC 0031 2261          move.b    #49,4227072
080011A0  0040 8000 
                    2262   ; //IIC_Prescale_Low = 0x63;
                    2263   ; IIC_Prescale_High = 0x00; //0xFF for reset
080011A4  4239 0040 2264          clr.b     4227074
080011A8  8002      
                    2265   ; IIC_Control = 0x80; // core enabled, interupts disabled
080011AA  13FC 0080 2266          move.b    #128,4227076
080011AE  0040 8004 
                    2267   ; //IIC_Control = 0xC0;
                    2268   ; //IIC_Transmit_Receive = 0x00;
                    2269   ; //IIC_Command_Status = 0x00;
                    2270   ; printf("\r\n%x",IIC_Command_Status);
080011B2  1239 0040 2271          move.b    4227080,D1
080011B6  8008      
080011B8  C2BC 0000 2272          and.l     #255,D1
080011BC  00FF      
080011BE  2F01      2273          move.l    D1,-(A7)
080011C0  4879 0800 2274          pea       @m68kus~1_37.L
080011C4  3596      
080011C6  4EB9 0800 2275          jsr       _printf
080011CA  1CBA      
080011CC  504F      2276          addq.w    #8,A7
080011CE  4E75      2277          rts
                    2278   ; }
                    2279   ; void PollTIPFlag(void){
                    2280   _PollTIPFlag:
080011D0  4E56 FFFC 2281          link      A6,#-4
                    2282   ; char status;
                    2283   ; status = IIC_Command_Status;
080011D4  1D79 0040 2284          move.b    4227080,-1(A6)
080011D8  8008 FFFF 
                    2285   ; //Check that TIP flag is negated
                    2286   ; while ((status & 0x02) != 0){
                    2287   PollTIPFlag_1:
080011DC  102E FFFF 2288          move.b    -1(A6),D0
080011E0  C03C 0002 2289          and.b     #2,D0
080011E4  6702      2290          beq.s     PollTIPFlag_3
                    2291   ; 1;
080011E6  60F4      2292          bra       PollTIPFlag_1
                    2293   PollTIPFlag_3:
080011E8  4E5E      2294          unlk      A6
080011EA  4E75      2295          rts
                    2296   ; //printf("%x",status);
                    2297   ; //printf("TIP ");
                    2298   ; }
                    2299   ; }
                    2300   ; void IIC_StartCommand(int block_sel){
                    2301   _IIC_StartCommand:
080011EC  4E56 FFFC 2302          link      A6,#-4
080011F0  48E7 3020 2303          movem.l   D2/D3/A2,-(A7)
080011F4  45F9 0800 2304          lea       _printf.L,A2
080011F8  1CBA      
                    2305   ; char dog;
                    2306   ; int cat*;
                    2307   ; int slave_addr = 0x00;
080011FA  4283      2308          clr.l     D3
                    2309   ; if (block_sel == 0){
080011FC  202E 0008 2310          move.l    8(A6),D0
08001200  6612      2311          bne.s     IIC_StartCommand_1
                    2312   ; printf("\r\nBlock is set to 0");
08001202  4879 0800 2313          pea       @m68kus~1_38.L
08001206  359C      
08001208  4E92      2314          jsr       (A2)
0800120A  584F      2315          addq.w    #4,A7
                    2316   ; slave_addr = 0xA0;
0800120C  263C 0000 2317          move.l    #160,D3
08001210  00A0      
08001212  601C      2318          bra.s     IIC_StartCommand_3
                    2319   IIC_StartCommand_1:
                    2320   ; }
                    2321   ; else if (block_sel == 1){
08001214  202E 0008 2322          move.l    8(A6),D0
08001218  0C80 0000 2323          cmp.l     #1,D0
0800121C  0001      
0800121E  6610      2324          bne.s     IIC_StartCommand_3
                    2325   ; printf("\r\nBlock is set to 1");
08001220  4879 0800 2326          pea       @m68kus~1_39.L
08001224  35B0      
08001226  4E92      2327          jsr       (A2)
08001228  584F      2328          addq.w    #4,A7
                    2329   ; slave_addr = 0xA2;
0800122A  263C 0000 2330          move.l    #162,D3
0800122E  00A2      
                    2331   IIC_StartCommand_3:
                    2332   ; }
                    2333   ; printf("\r\nSending Start Command...");
08001230  4879 0800 2334          pea       @m68kus~1_40.L
08001234  35C4      
08001236  4E92      2335          jsr       (A2)
08001238  584F      2336          addq.w    #4,A7
                    2337   ; printf("\r\nControl Register is %x", IIC_Control);
0800123A  1239 0040 2338          move.b    4227076,D1
0800123E  8004      
08001240  C2BC 0000 2339          and.l     #255,D1
08001244  00FF      
08001246  2F01      2340          move.l    D1,-(A7)
08001248  4879 0800 2341          pea       @m68kus~1_41.L
0800124C  35E0      
0800124E  4E92      2342          jsr       (A2)
08001250  504F      2343          addq.w    #8,A7
                    2344   ; //Check that no transmit is in progress
                    2345   ; //IIC_Command_Status = 0x80;
                    2346   ; //PollTIPFlag();
                    2347   ; dog = IIC_Command_Status;
08001252  1439 0040 2348          move.b    4227080,D2
08001256  8008      
                    2349   ; printf("\r\n%x", dog);
08001258  4882      2350          ext.w     D2
0800125A  48C2      2351          ext.l     D2
0800125C  2F02      2352          move.l    D2,-(A7)
0800125E  4879 0800 2353          pea       @m68kus~1_37.L
08001262  3596      
08001264  4E92      2354          jsr       (A2)
08001266  504F      2355          addq.w    #8,A7
                    2356   ; IIC_Transmit_Receive = slave_addr; //Slave Adress and write bit
08001268  13C3 0040 2357          move.b    D3,4227078
0800126C  8006      
                    2358   ; //IIC_Command_Status = 0x10; //Set STA and WR bit
                    2359   ; IIC_Command_Status = 0x90;
0800126E  13FC 0090 2360          move.b    #144,4227080
08001272  0040 8008 
                    2361   ; dog = IIC_Command_Status;
08001276  1439 0040 2362          move.b    4227080,D2
0800127A  8008      
                    2363   ; printf("\r\n%x", dog);
0800127C  4882      2364          ext.w     D2
0800127E  48C2      2365          ext.l     D2
08001280  2F02      2366          move.l    D2,-(A7)
08001282  4879 0800 2367          pea       @m68kus~1_37.L
08001286  3596      
08001288  4E92      2368          jsr       (A2)
0800128A  504F      2369          addq.w    #8,A7
                    2370   ; //Wait for transmit to complete
                    2371   ; PollTIPFlag();
0800128C  4EB9 0800 2372          jsr       _PollTIPFlag
08001290  11D0      
                    2373   ; WaitForAck();
08001292  4EB9 0800 2374          jsr       _WaitForAck
08001296  156E      
                    2375   ; printf("\r\nStart Command Received");
08001298  4879 0800 2376          pea       @m68kus~1_42.L
0800129C  35FA      
0800129E  4E92      2377          jsr       (A2)
080012A0  584F      2378          addq.w    #4,A7
080012A2  4CDF 040C 2379          movem.l   (A7)+,D2/D3/A2
080012A6  4E5E      2380          unlk      A6
080012A8  4E75      2381          rts
                    2382   ; }
                    2383   ; void IIC_RepeatedStartCommand(int block_sel){
                    2384   _IIC_RepeatedStartCommand:
080012AA  4E56 0000 2385          link      A6,#0
080012AE  48E7 2020 2386          movem.l   D2/A2,-(A7)
080012B2  45F9 0800 2387          lea       _printf.L,A2
080012B6  1CBA      
                    2388   ; int slave_addr = 0x00;
080012B8  4282      2389          clr.l     D2
                    2390   ; if (block_sel == 0){
080012BA  202E 0008 2391          move.l    8(A6),D0
080012BE  6612      2392          bne.s     IIC_RepeatedStartCommand_1
                    2393   ; printf("\r\nBlock is set to 0");
080012C0  4879 0800 2394          pea       @m68kus~1_38.L
080012C4  359C      
080012C6  4E92      2395          jsr       (A2)
080012C8  584F      2396          addq.w    #4,A7
                    2397   ; slave_addr = 0xA1;
080012CA  243C 0000 2398          move.l    #161,D2
080012CE  00A1      
080012D0  601C      2399          bra.s     IIC_RepeatedStartCommand_3
                    2400   IIC_RepeatedStartCommand_1:
                    2401   ; }
                    2402   ; else if (block_sel == 1){
080012D2  202E 0008 2403          move.l    8(A6),D0
080012D6  0C80 0000 2404          cmp.l     #1,D0
080012DA  0001      
080012DC  6610      2405          bne.s     IIC_RepeatedStartCommand_3
                    2406   ; printf("\r\nBlock is set to 1");
080012DE  4879 0800 2407          pea       @m68kus~1_39.L
080012E2  35B0      
080012E4  4E92      2408          jsr       (A2)
080012E6  584F      2409          addq.w    #4,A7
                    2410   ; slave_addr = 0xA3;
080012E8  243C 0000 2411          move.l    #163,D2
080012EC  00A3      
                    2412   IIC_RepeatedStartCommand_3:
                    2413   ; }
                    2414   ; printf("\r\nSending Start Command...");
080012EE  4879 0800 2415          pea       @m68kus~1_40.L
080012F2  35C4      
080012F4  4E92      2416          jsr       (A2)
080012F6  584F      2417          addq.w    #4,A7
                    2418   ; printf("\r\nControl Register is %x", IIC_Control);
080012F8  1239 0040 2419          move.b    4227076,D1
080012FC  8004      
080012FE  C2BC 0000 2420          and.l     #255,D1
08001302  00FF      
08001304  2F01      2421          move.l    D1,-(A7)
08001306  4879 0800 2422          pea       @m68kus~1_41.L
0800130A  35E0      
0800130C  4E92      2423          jsr       (A2)
0800130E  504F      2424          addq.w    #8,A7
                    2425   ; //Check that no transmit is in progress
                    2426   ; //IIC_Command_Status = 0x80;
                    2427   ; //PollTIPFlag();
                    2428   ; IIC_Transmit_Receive = slave_addr; //Slave Adress and write bit
08001310  13C2 0040 2429          move.b    D2,4227078
08001314  8006      
                    2430   ; //IIC_Command_Status = 0x10; //Set STA and WR bit
                    2431   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
08001316  1239 0040 2432          move.b    4227078,D1
0800131A  8006      
0800131C  C2BC 0000 2433          and.l     #255,D1
08001320  00FF      
08001322  2F01      2434          move.l    D1,-(A7)
08001324  4879 0800 2435          pea       @m68kus~1_43.L
08001328  3614      
0800132A  4E92      2436          jsr       (A2)
0800132C  504F      2437          addq.w    #8,A7
                    2438   ; IIC_Command_Status = 0x90; //
0800132E  13FC 0090 2439          move.b    #144,4227080
08001332  0040 8008 
                    2440   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
08001336  1239 0040 2441          move.b    4227078,D1
0800133A  8006      
0800133C  C2BC 0000 2442          and.l     #255,D1
08001340  00FF      
08001342  2F01      2443          move.l    D1,-(A7)
08001344  4879 0800 2444          pea       @m68kus~1_44.L
08001348  3632      
0800134A  4E92      2445          jsr       (A2)
0800134C  504F      2446          addq.w    #8,A7
                    2447   ; //Wait for transmit to complete
                    2448   ; PollTIPFlag();
0800134E  4EB9 0800 2449          jsr       _PollTIPFlag
08001352  11D0      
                    2450   ; WaitForAck();
08001354  4EB9 0800 2451          jsr       _WaitForAck
08001358  156E      
                    2452   ; printf("\r\nStart Command Received");
0800135A  4879 0800 2453          pea       @m68kus~1_42.L
0800135E  35FA      
08001360  4E92      2454          jsr       (A2)
08001362  584F      2455          addq.w    #4,A7
08001364  4CDF 0404 2456          movem.l   (A7)+,D2/A2
08001368  4E5E      2457          unlk      A6
0800136A  4E75      2458          rts
                    2459   ; }
                    2460   ; void IIC_SendAddress(int address_high, int address_low){
                    2461   _IIC_SendAddress:
0800136C  4E56 0000 2462          link      A6,#0
08001370  2F0A      2463          move.l    A2,-(A7)
08001372  45F9 0800 2464          lea       _printf.L,A2
08001376  1CBA      
                    2465   ; printf("\r\nSending address");
08001378  4879 0800 2466          pea       @m68kus~1_45.L
0800137C  3650      
0800137E  4E92      2467          jsr       (A2)
08001380  584F      2468          addq.w    #4,A7
                    2469   ; //IIC_Command_Status = 0x10;
                    2470   ; IIC_Transmit_Receive = address_high; //High byte internal address
08001382  202E 0008 2471          move.l    8(A6),D0
08001386  13C0 0040 2472          move.b    D0,4227078
0800138A  8006      
                    2473   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
0800138C  1239 0040 2474          move.b    4227078,D1
08001390  8006      
08001392  C2BC 0000 2475          and.l     #255,D1
08001396  00FF      
08001398  2F01      2476          move.l    D1,-(A7)
0800139A  4879 0800 2477          pea       @m68kus~1_43.L
0800139E  3614      
080013A0  4E92      2478          jsr       (A2)
080013A2  504F      2479          addq.w    #8,A7
                    2480   ; IIC_Command_Status = 0x10; //set WR bit
080013A4  13FC 0010 2481          move.b    #16,4227080
080013A8  0040 8008 
                    2482   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
080013AC  1239 0040 2483          move.b    4227078,D1
080013B0  8006      
080013B2  C2BC 0000 2484          and.l     #255,D1
080013B6  00FF      
080013B8  2F01      2485          move.l    D1,-(A7)
080013BA  4879 0800 2486          pea       @m68kus~1_44.L
080013BE  3632      
080013C0  4E92      2487          jsr       (A2)
080013C2  504F      2488          addq.w    #8,A7
                    2489   ; //Wait for transmit to complete
                    2490   ; PollTIPFlag();
080013C4  4EB9 0800 2491          jsr       _PollTIPFlag
080013C8  11D0      
                    2492   ; WaitForAck();
080013CA  4EB9 0800 2493          jsr       _WaitForAck
080013CE  156E      
                    2494   ; printf("\r\nHigh byte address sent");
080013D0  4879 0800 2495          pea       @m68kus~1_46.L
080013D4  3662      
080013D6  4E92      2496          jsr       (A2)
080013D8  584F      2497          addq.w    #4,A7
                    2498   ; //IIC_Command_Status = 0x10;
                    2499   ; IIC_Transmit_Receive = address_low; //Low byte internal address
080013DA  202E 000C 2500          move.l    12(A6),D0
080013DE  13C0 0040 2501          move.b    D0,4227078
080013E2  8006      
                    2502   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
080013E4  1239 0040 2503          move.b    4227078,D1
080013E8  8006      
080013EA  C2BC 0000 2504          and.l     #255,D1
080013EE  00FF      
080013F0  2F01      2505          move.l    D1,-(A7)
080013F2  4879 0800 2506          pea       @m68kus~1_43.L
080013F6  3614      
080013F8  4E92      2507          jsr       (A2)
080013FA  504F      2508          addq.w    #8,A7
                    2509   ; IIC_Command_Status = 0x10; //set WR bit
080013FC  13FC 0010 2510          move.b    #16,4227080
08001400  0040 8008 
                    2511   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
08001404  1239 0040 2512          move.b    4227078,D1
08001408  8006      
0800140A  C2BC 0000 2513          and.l     #255,D1
0800140E  00FF      
08001410  2F01      2514          move.l    D1,-(A7)
08001412  4879 0800 2515          pea       @m68kus~1_44.L
08001416  3632      
08001418  4E92      2516          jsr       (A2)
0800141A  504F      2517          addq.w    #8,A7
                    2518   ; //Wait for transmit to complete
                    2519   ; PollTIPFlag();
0800141C  4EB9 0800 2520          jsr       _PollTIPFlag
08001420  11D0      
                    2521   ; WaitForAck();
08001422  4EB9 0800 2522          jsr       _WaitForAck
08001426  156E      
                    2523   ; printf("\r\nLow byte address sent");
08001428  4879 0800 2524          pea       @m68kus~1_47.L
0800142C  367C      
0800142E  4E92      2525          jsr       (A2)
08001430  584F      2526          addq.w    #4,A7
08001432  245F      2527          move.l    (A7)+,A2
08001434  4E5E      2528          unlk      A6
08001436  4E75      2529          rts
                    2530   ; }
                    2531   ; void IIC_WriteData(int data){
                    2532   _IIC_WriteData:
08001438  4E56 0000 2533          link      A6,#0
0800143C  2F0A      2534          move.l    A2,-(A7)
0800143E  45F9 0800 2535          lea       _printf.L,A2
08001442  1CBA      
                    2536   ; //IIC_Command_Status = 0x10;
                    2537   ; IIC_Transmit_Receive = data; //High byte internal address
08001444  202E 0008 2538          move.l    8(A6),D0
08001448  13C0 0040 2539          move.b    D0,4227078
0800144C  8006      
                    2540   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
0800144E  1239 0040 2541          move.b    4227078,D1
08001452  8006      
08001454  C2BC 0000 2542          and.l     #255,D1
08001458  00FF      
0800145A  2F01      2543          move.l    D1,-(A7)
0800145C  4879 0800 2544          pea       @m68kus~1_43.L
08001460  3614      
08001462  4E92      2545          jsr       (A2)
08001464  504F      2546          addq.w    #8,A7
                    2547   ; IIC_Command_Status = 0x10; //set WR bit
08001466  13FC 0010 2548          move.b    #16,4227080
0800146A  0040 8008 
                    2549   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
0800146E  1239 0040 2550          move.b    4227078,D1
08001472  8006      
08001474  C2BC 0000 2551          and.l     #255,D1
08001478  00FF      
0800147A  2F01      2552          move.l    D1,-(A7)
0800147C  4879 0800 2553          pea       @m68kus~1_44.L
08001480  3632      
08001482  4E92      2554          jsr       (A2)
08001484  504F      2555          addq.w    #8,A7
                    2556   ; //Wait for transmit to complete
                    2557   ; PollTIPFlag();
08001486  4EB9 0800 2558          jsr       _PollTIPFlag
0800148A  11D0      
                    2559   ; WaitForAck();
0800148C  4EB9 0800 2560          jsr       _WaitForAck
08001490  156E      
                    2561   ; IIC_Command_Status = 0x40; //Set STO bit
08001492  13FC 0040 2562          move.b    #64,4227080
08001496  0040 8008 
                    2563   ; PollTIPFlag();
0800149A  4EB9 0800 2564          jsr       _PollTIPFlag
0800149E  11D0      
                    2565   ; printf("\r\nData Writen");
080014A0  4879 0800 2566          pea       @m68kus~1_48.L
080014A4  3694      
080014A6  4E92      2567          jsr       (A2)
080014A8  584F      2568          addq.w    #4,A7
080014AA  245F      2569          move.l    (A7)+,A2
080014AC  4E5E      2570          unlk      A6
080014AE  4E75      2571          rts
                    2572   ; }
                    2573   ; void IIC_ReadData(void){
                    2574   _IIC_ReadData:
080014B0  48E7 2020 2575          movem.l   D2/A2,-(A7)
080014B4  45F9 0800 2576          lea       _printf.L,A2
080014B8  1CBA      
                    2577   ; int recieved;
                    2578   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
080014BA  1239 0040 2579          move.b    4227078,D1
080014BE  8006      
080014C0  C2BC 0000 2580          and.l     #255,D1
080014C4  00FF      
080014C6  2F01      2581          move.l    D1,-(A7)
080014C8  4879 0800 2582          pea       @m68kus~1_43.L
080014CC  3614      
080014CE  4E92      2583          jsr       (A2)
080014D0  504F      2584          addq.w    #8,A7
                    2585   ; IIC_Command_Status = 0x20; //set WR bit
080014D2  13FC 0020 2586          move.b    #32,4227080
080014D6  0040 8008 
                    2587   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
080014DA  1239 0040 2588          move.b    4227078,D1
080014DE  8006      
080014E0  C2BC 0000 2589          and.l     #255,D1
080014E4  00FF      
080014E6  2F01      2590          move.l    D1,-(A7)
080014E8  4879 0800 2591          pea       @m68kus~1_44.L
080014EC  3632      
080014EE  4E92      2592          jsr       (A2)
080014F0  504F      2593          addq.w    #8,A7
                    2594   ; PollTIPFlag();
080014F2  4EB9 0800 2595          jsr       _PollTIPFlag
080014F6  11D0      
                    2596   ; while ((IIC_Command_Status & 0x01) != 1){
                    2597   IIC_ReadData_1:
080014F8  1039 0040 2598          move.b    4227080,D0
080014FC  8008      
080014FE  C03C 0001 2599          and.b     #1,D0
08001502  0C00 0001 2600          cmp.b     #1,D0
08001506  6702      2601          beq.s     IIC_ReadData_3
                    2602   ; 1;
08001508  60EE      2603          bra       IIC_ReadData_1
                    2604   IIC_ReadData_3:
                    2605   ; }
                    2606   ; //IIC_Command_Status &= 0xFE;
                    2607   ; recieved = IIC_Transmit_Receive;
0800150A  1039 0040 2608          move.b    4227078,D0
0800150E  8006      
08001510  C0BC 0000 2609          and.l     #255,D0
08001514  00FF      
08001516  2400      2610          move.l    D0,D2
                    2611   ; printf("\r\nDATA READ IS: %02X", recieved);
08001518  2F02      2612          move.l    D2,-(A7)
0800151A  4879 0800 2613          pea       @m68kus~1_49.L
0800151E  36A2      
08001520  4E92      2614          jsr       (A2)
08001522  504F      2615          addq.w    #8,A7
                    2616   ; //IIC_Command_Status |= 0x48; //set STO bit, ACK bit
                    2617   ; IIC_Command_Status = 0x48;
08001524  13FC 0048 2618          move.b    #72,4227080
08001528  0040 8008 
                    2619   ; recieved = IIC_Transmit_Receive;
0800152C  1039 0040 2620          move.b    4227078,D0
08001530  8006      
08001532  C0BC 0000 2621          and.l     #255,D0
08001536  00FF      
08001538  2400      2622          move.l    D0,D2
0800153A  4CDF 0404 2623          movem.l   (A7)+,D2/A2
0800153E  4E75      2624          rts
                    2625   ; }
                    2626   ; int CheckAck(void){
                    2627   _CheckAck:
08001540  4E56 FFF8 2628          link      A6,#-8
                    2629   ; int val;
                    2630   ; char test;
                    2631   ; test = IIC_Command_Status;
08001544  1D79 0040 2632          move.b    4227080,-1(A6)
08001548  8008 FFFF 
                    2633   ; val = (test & 0x80);
0800154C  102E FFFF 2634          move.b    -1(A6),D0
08001550  4880      2635          ext.w     D0
08001552  48C0      2636          ext.l     D0
08001554  C0BC 0000 2637          and.l     #128,D0
08001558  0080      
0800155A  2D40 FFFA 2638          move.l    D0,-6(A6)
                    2639   ; if (val == 0){
0800155E  202E FFFA 2640          move.l    -6(A6),D0
08001562  6604      2641          bne.s     CheckAck_1
                    2642   ; return 0;
08001564  4280      2643          clr.l     D0
08001566  6002      2644          bra.s     CheckAck_3
                    2645   CheckAck_1:
                    2646   ; }
                    2647   ; else{
                    2648   ; return 1;
08001568  7001      2649          moveq     #1,D0
                    2650   CheckAck_3:
0800156A  4E5E      2651          unlk      A6
0800156C  4E75      2652          rts
                    2653   ; }
                    2654   ; }
                    2655   ; void WaitForAck(void){
                    2656   _WaitForAck:
                    2657   ; while (CheckAck() == 1){
                    2658   WaitForAck_1:
0800156E  4EB9 0800 2659          jsr       _CheckAck
08001572  1540      
08001574  0C80 0000 2660          cmp.l     #1,D0
08001578  0001      
0800157A  6602      2661          bne.s     WaitForAck_3
                    2662   ; 1;
0800157C  60F0      2663          bra       WaitForAck_1
                    2664   WaitForAck_3:
0800157E  4E75      2665          rts
                    2666   ; }
                    2667   ; }
                    2668   ; void IIC_WriteDataByte(int data, int address){
                    2669   _IIC_WriteDataByte:
08001580  4E56 FFF4 2670          link      A6,#-12
08001584  2F02      2671          move.l    D2,-(A7)
08001586  242E 000C 2672          move.l    12(A6),D2
                    2673   ; int block_sel = (address >> 16) & 0xF;  // extract most significant byte
0800158A  2002      2674          move.l    D2,D0
0800158C  E080      2675          asr.l     #8,D0
0800158E  E080      2676          asr.l     #8,D0
08001590  C0BC 0000 2677          and.l     #15,D0
08001594  000F      
08001596  2D40 FFF4 2678          move.l    D0,-12(A6)
                    2679   ; int address_high = (address >> 8) & 0xFF;  // extract high byte
0800159A  2002      2680          move.l    D2,D0
0800159C  E080      2681          asr.l     #8,D0
0800159E  C0BC 0000 2682          and.l     #255,D0
080015A2  00FF      
080015A4  2D40 FFF8 2683          move.l    D0,-8(A6)
                    2684   ; int address_low = address & 0xFF;  // extract low byte
080015A8  2002      2685          move.l    D2,D0
080015AA  C0BC 0000 2686          and.l     #255,D0
080015AE  00FF      
080015B0  2D40 FFFC 2687          move.l    D0,-4(A6)
                    2688   ; //Send start command
                    2689   ; IIC_StartCommand(block_sel);
080015B4  2F2E FFF4 2690          move.l    -12(A6),-(A7)
080015B8  4EB9 0800 2691          jsr       _IIC_StartCommand
080015BC  11EC      
080015BE  584F      2692          addq.w    #4,A7
                    2693   ; IIC_SendAddress(address_high, address_low);
080015C0  2F2E FFFC 2694          move.l    -4(A6),-(A7)
080015C4  2F2E FFF8 2695          move.l    -8(A6),-(A7)
080015C8  4EB9 0800 2696          jsr       _IIC_SendAddress
080015CC  136C      
080015CE  504F      2697          addq.w    #8,A7
                    2698   ; IIC_WriteData(data);
080015D0  2F2E 0008 2699          move.l    8(A6),-(A7)
080015D4  4EB9 0800 2700          jsr       _IIC_WriteData
080015D8  1438      
080015DA  584F      2701          addq.w    #4,A7
080015DC  241F      2702          move.l    (A7)+,D2
080015DE  4E5E      2703          unlk      A6
080015E0  4E75      2704          rts
                    2705   ; }
                    2706   ; void IIC_ReadDataByte(int address){
                    2707   _IIC_ReadDataByte:
080015E2  4E56 FFF8 2708          link      A6,#-8
080015E6  48E7 3000 2709          movem.l   D2/D3,-(A7)
080015EA  242E 0008 2710          move.l    8(A6),D2
                    2711   ; int block_sel = (address >> 16) & 0xF;  // extract most significant byte
080015EE  2002      2712          move.l    D2,D0
080015F0  E080      2713          asr.l     #8,D0
080015F2  E080      2714          asr.l     #8,D0
080015F4  C0BC 0000 2715          and.l     #15,D0
080015F8  000F      
080015FA  2600      2716          move.l    D0,D3
                    2717   ; int address_high = (address >> 8) & 0xFF;  // extract high byte
080015FC  2002      2718          move.l    D2,D0
080015FE  E080      2719          asr.l     #8,D0
08001600  C0BC 0000 2720          and.l     #255,D0
08001604  00FF      
08001606  2D40 FFF8 2721          move.l    D0,-8(A6)
                    2722   ; int address_low = address & 0xFF;  // extract low byte
0800160A  2002      2723          move.l    D2,D0
0800160C  C0BC 0000 2724          and.l     #255,D0
08001610  00FF      
08001612  2D40 FFFC 2725          move.l    D0,-4(A6)
                    2726   ; //Send start command
                    2727   ; IIC_StartCommand(block_sel);
08001616  2F03      2728          move.l    D3,-(A7)
08001618  4EB9 0800 2729          jsr       _IIC_StartCommand
0800161C  11EC      
0800161E  584F      2730          addq.w    #4,A7
                    2731   ; IIC_SendAddress(address_high, address_low);
08001620  2F2E FFFC 2732          move.l    -4(A6),-(A7)
08001624  2F2E FFF8 2733          move.l    -8(A6),-(A7)
08001628  4EB9 0800 2734          jsr       _IIC_SendAddress
0800162C  136C      
0800162E  504F      2735          addq.w    #8,A7
                    2736   ; IIC_RepeatedStartCommand(block_sel);
08001630  2F03      2737          move.l    D3,-(A7)
08001632  4EB9 0800 2738          jsr       _IIC_RepeatedStartCommand
08001636  12AA      
08001638  584F      2739          addq.w    #4,A7
                    2740   ; IIC_ReadData();
0800163A  4EB9 0800 2741          jsr       _IIC_ReadData
0800163E  14B0      
08001640  4CDF 000C 2742          movem.l   (A7)+,D2/D3
08001644  4E5E      2743          unlk      A6
08001646  4E75      2744          rts
                    2745   ; }
                    2746   ; void IIC_WriteDataBlock(int address, int blocksize, int blockstart){
                    2747   _IIC_WriteDataBlock:
08001648  4E56 0000 2748          link      A6,#0
0800164C  48E7 3C20 2749          movem.l   D2/D3/D4/D5/A2,-(A7)
08001650  45F9 0800 2750          lea       _printf.L,A2
08001654  1CBA      
08001656  282E 0008 2751          move.l    8(A6),D4
                    2752   ; int block_sel = (address >> 16) & 0xF;  // extract most significant byte
0800165A  2004      2753          move.l    D4,D0
0800165C  E080      2754          asr.l     #8,D0
0800165E  E080      2755          asr.l     #8,D0
08001660  C0BC 0000 2756          and.l     #15,D0
08001664  000F      
08001666  2A00      2757          move.l    D0,D5
                    2758   ; int address_high = (address >> 8) & 0xFF;  // extract high byte
08001668  2004      2759          move.l    D4,D0
0800166A  E080      2760          asr.l     #8,D0
0800166C  C0BC 0000 2761          and.l     #255,D0
08001670  00FF      
08001672  2600      2762          move.l    D0,D3
                    2763   ; int address_low = address & 0xFF;  // extract low byte
08001674  2004      2764          move.l    D4,D0
08001676  C0BC 0000 2765          and.l     #255,D0
0800167A  00FF      
0800167C  2400      2766          move.l    D0,D2
                    2767   ; // print the results
                    2768   ; printf("\r\nBlock Sel: %X", block_sel);
0800167E  2F05      2769          move.l    D5,-(A7)
08001680  4879 0800 2770          pea       @m68kus~1_50.L
08001684  36B8      
08001686  4E92      2771          jsr       (A2)
08001688  504F      2772          addq.w    #8,A7
                    2773   ; printf("\r\nAddress High: %X", address_high);
0800168A  2F03      2774          move.l    D3,-(A7)
0800168C  4879 0800 2775          pea       @m68kus~1_51.L
08001690  36C8      
08001692  4E92      2776          jsr       (A2)
08001694  504F      2777          addq.w    #8,A7
                    2778   ; printf("\r\nAddress Low: %X", address_low);
08001696  2F02      2779          move.l    D2,-(A7)
08001698  4879 0800 2780          pea       @m68kus~1_52.L
0800169C  36DC      
0800169E  4E92      2781          jsr       (A2)
080016A0  504F      2782          addq.w    #8,A7
                    2783   ; //Send start command
                    2784   ; IIC_StartCommand(block_sel);
080016A2  2F05      2785          move.l    D5,-(A7)
080016A4  4EB9 0800 2786          jsr       _IIC_StartCommand
080016A8  11EC      
080016AA  584F      2787          addq.w    #4,A7
                    2788   ; IIC_SendAddress(address_high, address_low);
080016AC  2F02      2789          move.l    D2,-(A7)
080016AE  2F03      2790          move.l    D3,-(A7)
080016B0  4EB9 0800 2791          jsr       _IIC_SendAddress
080016B4  136C      
080016B6  504F      2792          addq.w    #8,A7
080016B8  4CDF 043C 2793          movem.l   (A7)+,D2/D3/D4/D5/A2
080016BC  4E5E      2794          unlk      A6
080016BE  4E75      2795          rts
                    2796   ; }
                    2797   ; void Wait500ms(void)
                    2798   ; {
                    2799   _Wait500ms:
080016C0  2F02      2800          move.l    D2,-(A7)
                    2801   ; int i;
                    2802   ; for (i = 0; i < 500; i++)
080016C2  4282      2803          clr.l     D2
                    2804   Wait500ms_1:
080016C4  0C82 0000 2805          cmp.l     #500,D2
080016C8  01F4      
080016CA  6C0A      2806          bge.s     Wait500ms_3
                    2807   ; Wait1ms();
080016CC  4EB9 0800 2808          jsr       _Wait1ms
080016D0  0098      
080016D2  5282      2809          addq.l    #1,D2
080016D4  60EE      2810          bra       Wait500ms_1
                    2811   Wait500ms_3:
080016D6  241F      2812          move.l    (A7)+,D2
080016D8  4E75      2813          rts
                    2814   ; }
                    2815   ; void Wait1s(void)
                    2816   ; {
                    2817   _Wait1s:
080016DA  2F02      2818          move.l    D2,-(A7)
                    2819   ; int i;
                    2820   ; for (i = 0; i < 1000; i++)
080016DC  4282      2821          clr.l     D2
                    2822   Wait1s_1:
080016DE  0C82 0000 2823          cmp.l     #1000,D2
080016E2  03E8      
080016E4  6C0A      2824          bge.s     Wait1s_3
                    2825   ; Wait1ms();
080016E6  4EB9 0800 2826          jsr       _Wait1ms
080016EA  0098      
080016EC  5282      2827          addq.l    #1,D2
080016EE  60EE      2828          bra       Wait1s_1
                    2829   Wait1s_3:
080016F0  241F      2830          move.l    (A7)+,D2
080016F2  4E75      2831          rts
                    2832   ; }
                    2833   ; void SendI2C(char byte, char cmd) {
                    2834   _SendI2C:
080016F4  4E56 0000 2835          link      A6,#0
                    2836   ; IIC_Transmit_Receive = byte;
080016F8  13EE 000B 2837          move.b    11(A6),4227078
080016FC  0040 8006 
                    2838   ; IIC_Command_Status = cmd;
08001700  13EE 000F 2839          move.b    15(A6),4227080
08001704  0040 8008 
08001708  4E5E      2840          unlk      A6
0800170A  4E75      2841          rts
                    2842   ; }
                    2843   ; void DAC_Blinky() {
                    2844   _DAC_Blinky:
0800170C  2F0A      2845          move.l    A2,-(A7)
0800170E  45F9 0800 2846          lea       _SendI2C.L,A2
08001712  16F4      
                    2847   ; // Write Address
                    2848   ; printf("\r\nSending Slave Address");
08001714  4879 0800 2849          pea       @m68kus~1_53.L
08001718  36EE      
0800171A  4EB9 0800 2850          jsr       _printf
0800171E  1CBA      
08001720  584F      2851          addq.w    #4,A7
                    2852   ; PollTIPFlag();
08001722  4EB9 0800 2853          jsr       _PollTIPFlag
08001726  11D0      
                    2854   ; SendI2C(0x90, 0x91);    // ADC/DAC Slave Address at 0x92, Start writing 0x91
08001728  4878 0091 2855          pea       145
0800172C  4878 0090 2856          pea       144
08001730  4E92      2857          jsr       (A2)
08001732  504F      2858          addq.w    #8,A7
                    2859   ; WaitForAck();
08001734  4EB9 0800 2860          jsr       _WaitForAck
08001738  156E      
                    2861   ; // Set Control
                    2862   ; printf("\r\nSending Control Byte");
0800173A  4879 0800 2863          pea       @m68kus~1_54.L
0800173E  3706      
08001740  4EB9 0800 2864          jsr       _printf
08001744  1CBA      
08001746  584F      2865          addq.w    #4,A7
                    2866   ; SendI2C(0x40, WRITE);     // DAC Output, Write cmd 0x10
08001748  4878 0010 2867          pea       16
0800174C  4878 0040 2868          pea       64
08001750  4E92      2869          jsr       (A2)
08001752  504F      2870          addq.w    #8,A7
                    2871   ; WaitForAck();
08001754  4EB9 0800 2872          jsr       _WaitForAck
08001758  156E      
                    2873   ; // Continuous data stream w/ Blinky until reset
                    2874   ; while (1) {
                    2875   DAC_Blinky_1:
                    2876   ; SendI2C(0xFF, WRITE);
0800175A  4878 0010 2877          pea       16
0800175E  4878 00FF 2878          pea       255
08001762  4E92      2879          jsr       (A2)
08001764  504F      2880          addq.w    #8,A7
                    2881   ; Wait500ms();
08001766  4EB9 0800 2882          jsr       _Wait500ms
0800176A  16C0      
                    2883   ; SendI2C(0x00, WRITE);
0800176C  4878 0010 2884          pea       16
08001770  42A7      2885          clr.l     -(A7)
08001772  4E92      2886          jsr       (A2)
08001774  504F      2887          addq.w    #8,A7
                    2888   ; Wait1s();
08001776  4EB9 0800 2889          jsr       _Wait1s
0800177A  16DA      
                    2890   ; SendI2C(0xFF, WRITE);
0800177C  4878 0010 2891          pea       16
08001780  4878 00FF 2892          pea       255
08001784  4E92      2893          jsr       (A2)
08001786  504F      2894          addq.w    #8,A7
                    2895   ; Wait500ms();
08001788  4EB9 0800 2896          jsr       _Wait500ms
0800178C  16C0      
                    2897   ; SendI2C(0x00, WRITE);
0800178E  4878 0010 2898          pea       16
08001792  42A7      2899          clr.l     -(A7)
08001794  4E92      2900          jsr       (A2)
08001796  504F      2901          addq.w    #8,A7
                    2902   ; Wait1s();
08001798  4EB9 0800 2903          jsr       _Wait1s
0800179C  16DA      
0800179E  60BA      2904          bra       DAC_Blinky_1
                    2905   ; }
                    2906   ; }
                    2907   ; /******************************************************************************************************************************
                    2908   ; * Start of user program
                    2909   ; ******************************************************************************************************************************/
                    2910   ; void main()
                    2911   ; {
                    2912   _main:
080017A0  4E56 FF30 2913          link      A6,#-208
080017A4  48E7 3838 2914          movem.l   D2/D3/D4/A2/A3/A4,-(A7)
080017A8  45F9 0800 2915          lea       _printf.L,A2
080017AC  1CBA      
080017AE  47F9 0800 2916          lea       _scanf.L,A3
080017B2  1C88      
080017B4  49F9 0800 2917          lea       _InstallExceptionHandler.L,A4
080017B8  0220      
                    2918   ; unsigned int row, i=0, count=0, counter1=1;
080017BA  42AE FF34 2919          clr.l     -204(A6)
080017BE  42AE FF38 2920          clr.l     -200(A6)
080017C2  2D7C 0000 2921          move.l    #1,-196(A6)
080017C6  0001 FF3C 
                    2922   ; char c, text[150] ;
                    2923   ; int PassFailFlag = 1 ;
080017CA  2D7C 0000 2924          move.l    #1,-40(A6)
080017CE  0001 FFD8 
                    2925   ; //IIC variables
                    2926   ; char choice = '0';
080017D2  7430      2927          moveq     #48,D2
                    2928   ; int WriteData;
                    2929   ; int WriteAddress;
                    2930   ; int ReadAddress;
                    2931   ; int WriteBlockAddress;
                    2932   ; int WriteBlockSize;
                    2933   ; int WriteBlockMaxSize;
                    2934   ; int WriteBlockDataStart;
                    2935   ; int ReadBlockAddress;
                    2936   ; int ReadBlockMaxSize;
                    2937   ; int ReadBlockSize;
                    2938   ; int num;
                    2939   ; /////Mem Test Variables
                    2940   ; // unsigned int *RamPtr;
                    2941   ; // unsigned int Start, End ;
                    2942   ; // unsigned int data_byte1, data_byte2, data_byte3, data_byte4; //Test data recieved from user (bytes)
                    2943   ; // unsigned int data_word1, data_word2, data_word3, data_word4;
                    2944   ; // unsigned int data_Lword1, data_Lword2, data_Lword3, data_Lword4;
                    2945   ; // char type;
                    2946   ; // int testnum = 1;
                    2947   ; /////Mem Test Variables
                    2948   ; i = x = y = z = PortA_Count =0;
080017D4  42B9 0800 2949          clr.l     _PortA_Count.L
080017D8  3BE2      
080017DA  42B9 0800 2950          clr.l     _z.L
080017DE  3BDE      
080017E0  42B9 0800 2951          clr.l     _y.L
080017E4  3BDA      
080017E6  42B9 0800 2952          clr.l     _x.L
080017EA  3BD6      
080017EC  42AE FF34 2953          clr.l     -204(A6)
                    2954   ; Timer1Count = Timer2Count = Timer3Count = Timer4Count = 0;
080017F0  4239 0800 2955          clr.b     _Timer4Count.L
080017F4  3BEC      
080017F6  4239 0800 2956          clr.b     _Timer3Count.L
080017FA  3BEA      
080017FC  4239 0800 2957          clr.b     _Timer2Count.L
08001800  3BE8      
08001802  4239 0800 2958          clr.b     _Timer1Count.L
08001806  3BE6      
                    2959   ; InstallExceptionHandler(PIA_ISR, 25) ;          // install interrupt handler for PIAs 1 and 2 on level 1 IRQ
08001808  4878 0019 2960          pea       25
0800180C  4879 0800 2961          pea       _PIA_ISR.L
08001810  0092      
08001812  4E94      2962          jsr       (A4)
08001814  504F      2963          addq.w    #8,A7
                    2964   ; InstallExceptionHandler(ACIA_ISR, 26) ;		    // install interrupt handler for ACIA on level 2 IRQ
08001816  4878 001A 2965          pea       26
0800181A  4879 0800 2966          pea       _ACIA_ISR.L
0800181E  0090      
08001820  4E94      2967          jsr       (A4)
08001822  504F      2968          addq.w    #8,A7
                    2969   ; InstallExceptionHandler(Timer_ISR, 27) ;		// install interrupt handler for Timers 1-4 on level 3 IRQ
08001824  4878 001B 2970          pea       27
08001828  4879 0800 2971          pea       _Timer_ISR.L
0800182C  003E      
0800182E  4E94      2972          jsr       (A4)
08001830  504F      2973          addq.w    #8,A7
                    2974   ; InstallExceptionHandler(Key2PressISR, 28) ;	    // install interrupt handler for Key Press 2 on DE1 board for level 4 IRQ
08001832  4878 001C 2975          pea       28
08001836  4879 0800 2976          pea       _Key2PressISR.L
0800183A  0094      
0800183C  4E94      2977          jsr       (A4)
0800183E  504F      2978          addq.w    #8,A7
                    2979   ; InstallExceptionHandler(Key1PressISR, 29) ;	    // install interrupt handler for Key Press 1 on DE1 board for level 5 IRQ
08001840  4878 001D 2980          pea       29
08001844  4879 0800 2981          pea       _Key1PressISR.L
08001848  0096      
0800184A  4E94      2982          jsr       (A4)
0800184C  504F      2983          addq.w    #8,A7
                    2984   ; Timer1Data = 0x10;		// program time delay into timers 1-4
0800184E  13FC 0010 2985          move.b    #16,4194352
08001852  0040 0030 
                    2986   ; Timer2Data = 0x20;
08001856  13FC 0020 2987          move.b    #32,4194356
0800185A  0040 0034 
                    2988   ; Timer3Data = 0x15;
0800185E  13FC 0015 2989          move.b    #21,4194360
08001862  0040 0038 
                    2990   ; Timer4Data = 0x25;
08001866  13FC 0025 2991          move.b    #37,4194364
0800186A  0040 003C 
                    2992   ; Timer1Control = 3;		// write 3 to control register to Bit0 = 1 (enable interrupt from timers) 1 - 4 and allow them to count Bit 1 = 1
0800186E  13FC 0003 2993          move.b    #3,4194354
08001872  0040 0032 
                    2994   ; Timer2Control = 3;
08001876  13FC 0003 2995          move.b    #3,4194358
0800187A  0040 0036 
                    2996   ; Timer3Control = 3;
0800187E  13FC 0003 2997          move.b    #3,4194362
08001882  0040 003A 
                    2998   ; Timer4Control = 3;
08001886  13FC 0003 2999          move.b    #3,4194366
0800188A  0040 003E 
                    3000   ; Init_LCD();             // initialise the LCD display to use a parallel data interface and 2 lines of display
0800188E  4EB9 0800 3001          jsr       _Init_LCD
08001892  00C6      
                    3002   ; Init_RS232() ;          // initialise the RS232 port for use with hyper terminal
08001894  4EB9 0800 3003          jsr       _Init_RS232
08001898  00E4      
                    3004   ; /*************************************************************************************************
                    3005   ; **  User Program
                    3006   ; *************************************************************************************************/
                    3007   ; printf("\r\nIIC program will begin");
0800189A  4879 0800 3008          pea       @m68kus~1_55.L
0800189E  371E      
080018A0  4E92      3009          jsr       (A2)
080018A2  584F      3010          addq.w    #4,A7
                    3011   ; printf("\r\nEnter 0 ... Write Single Byte");
080018A4  4879 0800 3012          pea       @m68kus~1_56.L
080018A8  3738      
080018AA  4E92      3013          jsr       (A2)
080018AC  584F      3014          addq.w    #4,A7
                    3015   ; printf("\r\nEnter 1 ... Read Single Byte");
080018AE  4879 0800 3016          pea       @m68kus~1_57.L
080018B2  3758      
080018B4  4E92      3017          jsr       (A2)
080018B6  584F      3018          addq.w    #4,A7
                    3019   ; printf("\r\nEnter 2 ... Write Data Block");
080018B8  4879 0800 3020          pea       @m68kus~1_58.L
080018BC  3778      
080018BE  4E92      3021          jsr       (A2)
080018C0  584F      3022          addq.w    #4,A7
                    3023   ; printf("\r\nEnter 3 ... Read Data Block");
080018C2  4879 0800 3024          pea       @m68kus~1_59.L
080018C6  3798      
080018C8  4E92      3025          jsr       (A2)
080018CA  584F      3026          addq.w    #4,A7
                    3027   ; printf("\r\nEnter 4 ... Waveform DAC and LED Blinky");
080018CC  4879 0800 3028          pea       @m68kus~1_60.L
080018D0  37B6      
080018D2  4E92      3029          jsr       (A2)
080018D4  584F      3030          addq.w    #4,A7
                    3031   ; printf("\r\nEnter 5 ... Read Analog input from ADC Channel\r\n");
080018D6  4879 0800 3032          pea       @m68kus~1_61.L
080018DA  37E0      
080018DC  4E92      3033          jsr       (A2)
080018DE  584F      3034          addq.w    #4,A7
                    3035   ; choice = _getch();
080018E0  4EB9 0800 3036          jsr       __getch
080018E4  0124      
080018E6  1400      3037          move.b    D0,D2
                    3038   ; IIC_Init();
080018E8  4EB9 0800 3039          jsr       _IIC_Init
080018EC  119C      
                    3040   ; while (1) {
                    3041   main_1:
                    3042   ; if (choice == '0') {
080018EE  0C02 0030 3043          cmp.b     #48,D2
080018F2  6600 009C 3044          bne       main_4
                    3045   ; printf("Single Byte Write Initiated\r\nEnter Data Byte: ");
080018F6  4879 0800 3046          pea       @m68kus~1_62.L
080018FA  3814      
080018FC  4E92      3047          jsr       (A2)
080018FE  584F      3048          addq.w    #4,A7
                    3049   ; scanf("%x", &WriteData);
08001900  486E FFDC 3050          pea       -36(A6)
08001904  4879 0800 3051          pea       @m68kus~1_3.L
08001908  3056      
0800190A  4E93      3052          jsr       (A3)
0800190C  504F      3053          addq.w    #8,A7
                    3054   ; while (WriteData > 0xFF) {
                    3055   main_6:
0800190E  202E FFDC 3056          move.l    -36(A6),D0
08001912  0C80 0000 3057          cmp.l     #255,D0
08001916  00FF      
08001918  6F1A      3058          ble.s     main_8
                    3059   ; printf("Enter Valid Data Byte: ");
0800191A  4879 0800 3060          pea       @m68kus~1_63.L
0800191E  3844      
08001920  4E92      3061          jsr       (A2)
08001922  584F      3062          addq.w    #4,A7
                    3063   ; scanf("%x", &WriteData);
08001924  486E FFDC 3064          pea       -36(A6)
08001928  4879 0800 3065          pea       @m68kus~1_3.L
0800192C  3056      
0800192E  4E93      3066          jsr       (A3)
08001930  504F      3067          addq.w    #8,A7
08001932  60DA      3068          bra       main_6
                    3069   main_8:
                    3070   ; }
                    3071   ; printf("Enter Address (00000 - 1FFFF): ");
08001934  4879 0800 3072          pea       @m68kus~1_64.L
08001938  385C      
0800193A  4E92      3073          jsr       (A2)
0800193C  584F      3074          addq.w    #4,A7
                    3075   ; scanf("%x", &WriteAddress);
0800193E  486E FFE0 3076          pea       -32(A6)
08001942  4879 0800 3077          pea       @m68kus~1_3.L
08001946  3056      
08001948  4E93      3078          jsr       (A3)
0800194A  504F      3079          addq.w    #8,A7
                    3080   ; while (WriteAddress > 0x1FFFF) {
                    3081   main_9:
0800194C  202E FFE0 3082          move.l    -32(A6),D0
08001950  0C80 0001 3083          cmp.l     #131071,D0
08001954  FFFF      
08001956  6F1A      3084          ble.s     main_11
                    3085   ; printf("Enter Valid Address: ");
08001958  4879 0800 3086          pea       @m68kus~1_65.L
0800195C  387C      
0800195E  4E92      3087          jsr       (A2)
08001960  584F      3088          addq.w    #4,A7
                    3089   ; scanf("%x", WriteAddress);
08001962  2F2E FFE0 3090          move.l    -32(A6),-(A7)
08001966  4879 0800 3091          pea       @m68kus~1_3.L
0800196A  3056      
0800196C  4E93      3092          jsr       (A3)
0800196E  504F      3093          addq.w    #8,A7
08001970  60DA      3094          bra       main_9
                    3095   main_11:
                    3096   ; }
                    3097   ; printf("\r\nWriting Data Byte ...");
08001972  4879 0800 3098          pea       @m68kus~1_66.L
08001976  3892      
08001978  4E92      3099          jsr       (A2)
0800197A  584F      3100          addq.w    #4,A7
                    3101   ; IIC_WriteDataByte(WriteData, WriteAddress);
0800197C  2F2E FFE0 3102          move.l    -32(A6),-(A7)
08001980  2F2E FFDC 3103          move.l    -36(A6),-(A7)
08001984  4EB9 0800 3104          jsr       _IIC_WriteDataByte
08001988  1580      
0800198A  504F      3105          addq.w    #8,A7
0800198C  6000 020E 3106          bra       main_39
                    3107   main_4:
                    3108   ; }
                    3109   ; else if (choice == '1') {
08001990  0C02 0031 3110          cmp.b     #49,D2
08001994  6600 005A 3111          bne       main_12
                    3112   ; printf("\r\nSingle Byte Read Initiated\r\nEnter Address (00000 - 1FFFF): ");
08001998  4879 0800 3113          pea       @m68kus~1_67.L
0800199C  38AA      
0800199E  4E92      3114          jsr       (A2)
080019A0  584F      3115          addq.w    #4,A7
                    3116   ; scanf("%x", &ReadAddress);
080019A2  486E FFE4 3117          pea       -28(A6)
080019A6  4879 0800 3118          pea       @m68kus~1_3.L
080019AA  3056      
080019AC  4E93      3119          jsr       (A3)
080019AE  504F      3120          addq.w    #8,A7
                    3121   ; while (ReadAddress > 0x1FFFF) {
                    3122   main_14:
080019B0  202E FFE4 3123          move.l    -28(A6),D0
080019B4  0C80 0001 3124          cmp.l     #131071,D0
080019B8  FFFF      
080019BA  6F1A      3125          ble.s     main_16
                    3126   ; printf("Enter Valid Address: ");
080019BC  4879 0800 3127          pea       @m68kus~1_65.L
080019C0  387C      
080019C2  4E92      3128          jsr       (A2)
080019C4  584F      3129          addq.w    #4,A7
                    3130   ; scanf("%x", &ReadAddress);
080019C6  486E FFE4 3131          pea       -28(A6)
080019CA  4879 0800 3132          pea       @m68kus~1_3.L
080019CE  3056      
080019D0  4E93      3133          jsr       (A3)
080019D2  504F      3134          addq.w    #8,A7
080019D4  60DA      3135          bra       main_14
                    3136   main_16:
                    3137   ; }
                    3138   ; printf("\r\nReading Data Byte ...");
080019D6  4879 0800 3139          pea       @m68kus~1_68.L
080019DA  38E8      
080019DC  4E92      3140          jsr       (A2)
080019DE  584F      3141          addq.w    #4,A7
                    3142   ; IIC_ReadDataByte(ReadAddress);
080019E0  2F2E FFE4 3143          move.l    -28(A6),-(A7)
080019E4  4EB9 0800 3144          jsr       _IIC_ReadDataByte
080019E8  15E2      
080019EA  584F      3145          addq.w    #4,A7
080019EC  6000 01AE 3146          bra       main_39
                    3147   main_12:
                    3148   ; }
                    3149   ; else if (choice == '2') {
080019F0  0C02 0032 3150          cmp.b     #50,D2
080019F4  6600 00E0 3151          bne       main_17
                    3152   ; printf("\r\nData Block Write Initiated\r\nEnter Starting Address (00000 - 1FFFF): ");
080019F8  4879 0800 3153          pea       @m68kus~1_69.L
080019FC  3900      
080019FE  4E92      3154          jsr       (A2)
08001A00  584F      3155          addq.w    #4,A7
                    3156   ; scanf("%x", &WriteBlockAddress);
08001A02  486E FFE8 3157          pea       -24(A6)
08001A06  4879 0800 3158          pea       @m68kus~1_3.L
08001A0A  3056      
08001A0C  4E93      3159          jsr       (A3)
08001A0E  504F      3160          addq.w    #8,A7
                    3161   ; while (WriteBlockAddress > 0x1FFFF) {
                    3162   main_19:
08001A10  202E FFE8 3163          move.l    -24(A6),D0
08001A14  0C80 0001 3164          cmp.l     #131071,D0
08001A18  FFFF      
08001A1A  6F1A      3165          ble.s     main_21
                    3166   ; printf("Enter Valid Address: ");
08001A1C  4879 0800 3167          pea       @m68kus~1_65.L
08001A20  387C      
08001A22  4E92      3168          jsr       (A2)
08001A24  584F      3169          addq.w    #4,A7
                    3170   ; scanf("%x", &WriteBlockAddress);
08001A26  486E FFE8 3171          pea       -24(A6)
08001A2A  4879 0800 3172          pea       @m68kus~1_3.L
08001A2E  3056      
08001A30  4E93      3173          jsr       (A3)
08001A32  504F      3174          addq.w    #8,A7
08001A34  60DA      3175          bra       main_19
                    3176   main_21:
                    3177   ; }
                    3178   ; WriteBlockMaxSize = (0x1FFFF - WriteBlockAddress);
08001A36  203C 0001 3179          move.l    #131071,D0
08001A3A  FFFF      
08001A3C  90AE FFE8 3180          sub.l     -24(A6),D0
08001A40  2800      3181          move.l    D0,D4
                    3182   ; printf("Enter Data Block Size (00000 - %05X): ", WriteBlockMaxSize);
08001A42  2F04      3183          move.l    D4,-(A7)
08001A44  4879 0800 3184          pea       @m68kus~1_70.L
08001A48  3948      
08001A4A  4E92      3185          jsr       (A2)
08001A4C  504F      3186          addq.w    #8,A7
                    3187   ; scanf("%x", &WriteBlockSize);
08001A4E  486E FFEC 3188          pea       -20(A6)
08001A52  4879 0800 3189          pea       @m68kus~1_3.L
08001A56  3056      
08001A58  4E93      3190          jsr       (A3)
08001A5A  504F      3191          addq.w    #8,A7
                    3192   ; while (WriteBlockSize > WriteBlockMaxSize) {
                    3193   main_22:
08001A5C  B8AE FFEC 3194          cmp.l     -20(A6),D4
08001A60  6C1C      3195          bge.s     main_24
                    3196   ; printf("Enter Valid Block Size (00000 - %05X): ", WriteBlockMaxSize);
08001A62  2F04      3197          move.l    D4,-(A7)
08001A64  4879 0800 3198          pea       @m68kus~1_71.L
08001A68  3970      
08001A6A  4E92      3199          jsr       (A2)
08001A6C  504F      3200          addq.w    #8,A7
                    3201   ; scanf("%x", &WriteBlockSize);
08001A6E  486E FFEC 3202          pea       -20(A6)
08001A72  4879 0800 3203          pea       @m68kus~1_3.L
08001A76  3056      
08001A78  4E93      3204          jsr       (A3)
08001A7A  504F      3205          addq.w    #8,A7
08001A7C  60DE      3206          bra       main_22
                    3207   main_24:
                    3208   ; }
                    3209   ; printf("Enter Starting Data Byte: ");
08001A7E  4879 0800 3210          pea       @m68kus~1_72.L
08001A82  3998      
08001A84  4E92      3211          jsr       (A2)
08001A86  584F      3212          addq.w    #4,A7
                    3213   ; scanf("%x", &WriteBlockDataStart);
08001A88  486E FFF0 3214          pea       -16(A6)
08001A8C  4879 0800 3215          pea       @m68kus~1_3.L
08001A90  3056      
08001A92  4E93      3216          jsr       (A3)
08001A94  504F      3217          addq.w    #8,A7
                    3218   ; while (WriteBlockDataStart > 0xFF) {
                    3219   main_25:
08001A96  202E FFF0 3220          move.l    -16(A6),D0
08001A9A  0C80 0000 3221          cmp.l     #255,D0
08001A9E  00FF      
08001AA0  6F1A      3222          ble.s     main_27
                    3223   ; printf("Enter Valid Data Byte: ");
08001AA2  4879 0800 3224          pea       @m68kus~1_63.L
08001AA6  3844      
08001AA8  4E92      3225          jsr       (A2)
08001AAA  584F      3226          addq.w    #4,A7
                    3227   ; scanf("%x", &WriteBlockDataStart);
08001AAC  486E FFF0 3228          pea       -16(A6)
08001AB0  4879 0800 3229          pea       @m68kus~1_3.L
08001AB4  3056      
08001AB6  4E93      3230          jsr       (A3)
08001AB8  504F      3231          addq.w    #8,A7
08001ABA  60DA      3232          bra       main_25
                    3233   main_27:
                    3234   ; }
                    3235   ; IIC_WriteDataBlock(WriteBlockAddress, WriteBlockSize, WriteBlockDataStart);
08001ABC  2F2E FFF0 3236          move.l    -16(A6),-(A7)
08001AC0  2F2E FFEC 3237          move.l    -20(A6),-(A7)
08001AC4  2F2E FFE8 3238          move.l    -24(A6),-(A7)
08001AC8  4EB9 0800 3239          jsr       _IIC_WriteDataBlock
08001ACC  1648      
08001ACE  DEFC 000C 3240          add.w     #12,A7
08001AD2  6000 00C8 3241          bra       main_39
                    3242   main_17:
                    3243   ; }
                    3244   ; else if (choice == '3') {
08001AD6  0C02 0033 3245          cmp.b     #51,D2
08001ADA  6600 008C 3246          bne       main_28
                    3247   ; printf("\r\nData Block Read Initiated\r\nEnter Starting Address (00000 - 1FFFF): ");
08001ADE  4879 0800 3248          pea       @m68kus~1_73.L
08001AE2  39B4      
08001AE4  4E92      3249          jsr       (A2)
08001AE6  584F      3250          addq.w    #4,A7
                    3251   ; scanf("%x", &ReadBlockAddress);
08001AE8  486E FFF4 3252          pea       -12(A6)
08001AEC  4879 0800 3253          pea       @m68kus~1_3.L
08001AF0  3056      
08001AF2  4E93      3254          jsr       (A3)
08001AF4  504F      3255          addq.w    #8,A7
                    3256   ; while (ReadBlockAddress > 0x1FFFF) {
                    3257   main_30:
08001AF6  202E FFF4 3258          move.l    -12(A6),D0
08001AFA  0C80 0001 3259          cmp.l     #131071,D0
08001AFE  FFFF      
08001B00  6F1A      3260          ble.s     main_32
                    3261   ; printf("Enter Valid Address");
08001B02  4879 0800 3262          pea       @m68kus~1_74.L
08001B06  39FA      
08001B08  4E92      3263          jsr       (A2)
08001B0A  584F      3264          addq.w    #4,A7
                    3265   ; scanf("%x", &ReadBlockAddress);
08001B0C  486E FFF4 3266          pea       -12(A6)
08001B10  4879 0800 3267          pea       @m68kus~1_3.L
08001B14  3056      
08001B16  4E93      3268          jsr       (A3)
08001B18  504F      3269          addq.w    #8,A7
08001B1A  60DA      3270          bra       main_30
                    3271   main_32:
                    3272   ; }
                    3273   ; ReadBlockMaxSize = (0x1FFFF - ReadBlockAddress);
08001B1C  203C 0001 3274          move.l    #131071,D0
08001B20  FFFF      
08001B22  90AE FFF4 3275          sub.l     -12(A6),D0
08001B26  2600      3276          move.l    D0,D3
                    3277   ; printf("Enter Data Block Size (00000 - %05X): ", ReadBlockMaxSize);
08001B28  2F03      3278          move.l    D3,-(A7)
08001B2A  4879 0800 3279          pea       @m68kus~1_70.L
08001B2E  3948      
08001B30  4E92      3280          jsr       (A2)
08001B32  504F      3281          addq.w    #8,A7
                    3282   ; scanf("%x", &ReadBlockSize);
08001B34  486E FFF8 3283          pea       -8(A6)
08001B38  4879 0800 3284          pea       @m68kus~1_3.L
08001B3C  3056      
08001B3E  4E93      3285          jsr       (A3)
08001B40  504F      3286          addq.w    #8,A7
                    3287   ; while (ReadBlockSize > ReadBlockMaxSize) {
                    3288   main_33:
08001B42  B6AE FFF8 3289          cmp.l     -8(A6),D3
08001B46  6C1C      3290          bge.s     main_35
                    3291   ; printf("Enter Valid Block Size (00000 - %05X): ", ReadBlockMaxSize);
08001B48  2F03      3292          move.l    D3,-(A7)
08001B4A  4879 0800 3293          pea       @m68kus~1_71.L
08001B4E  3970      
08001B50  4E92      3294          jsr       (A2)
08001B52  504F      3295          addq.w    #8,A7
                    3296   ; scanf("%x", &ReadBlockSize);
08001B54  486E FFF8 3297          pea       -8(A6)
08001B58  4879 0800 3298          pea       @m68kus~1_3.L
08001B5C  3056      
08001B5E  4E93      3299          jsr       (A3)
08001B60  504F      3300          addq.w    #8,A7
08001B62  60DE      3301          bra       main_33
                    3302   main_35:
08001B64  6000 0036 3303          bra       main_39
                    3304   main_28:
                    3305   ; }
                    3306   ; }
                    3307   ; else if (choice == '4') {
08001B68  0C02 0034 3308          cmp.b     #52,D2
08001B6C  6612      3309          bne.s     main_36
                    3310   ; printf("\r\nWaveform DAC and LED Blinky Initiated\r\n");
08001B6E  4879 0800 3311          pea       @m68kus~1_75.L
08001B72  3A0E      
08001B74  4E92      3312          jsr       (A2)
08001B76  584F      3313          addq.w    #4,A7
                    3314   ; DAC_Blinky();
08001B78  4EB9 0800 3315          jsr       _DAC_Blinky
08001B7C  170C      
08001B7E  601C      3316          bra.s     main_39
                    3317   main_36:
                    3318   ; }
                    3319   ; else if (choice == '5') {
08001B80  0C02 0035 3320          cmp.b     #53,D2
08001B84  660C      3321          bne.s     main_38
                    3322   ; printf("\r\nRead Analog input from ADC Channel Initiated");
08001B86  4879 0800 3323          pea       @m68kus~1_76.L
08001B8A  3A38      
08001B8C  4E92      3324          jsr       (A2)
08001B8E  584F      3325          addq.w    #4,A7
08001B90  600A      3326          bra.s     main_39
                    3327   main_38:
                    3328   ; }
                    3329   ; else {
                    3330   ; printf("\r\nInvalid Selection, Please Select an Option Between 0-5.");
08001B92  4879 0800 3331          pea       @m68kus~1_77.L
08001B96  3A68      
08001B98  4E92      3332          jsr       (A2)
08001B9A  584F      3333          addq.w    #4,A7
                    3334   main_39:
                    3335   ; }
                    3336   ; printf("\r\nProgram ended");
08001B9C  4879 0800 3337          pea       @m68kus~1_78.L
08001BA0  3AA2      
08001BA2  4E92      3338          jsr       (A2)
08001BA4  584F      3339          addq.w    #4,A7
08001BA6  6000 FD46 3340          bra       main_1
                    3341   ; }
                    3342   ; }
                    3343   ULDIV:
08001BAA  4E56 0000 3344          link    A6,#0
08001BAE  48E7 C000 3345          movem.l D0/D1,-(A7)
08001BB2  222E 0008 3346          move.l  8(A6),D1
08001BB6  202E 000C 3347          move.l  12(A6),D0
08001BBA  6036      3348          bra.s   ldiv_3
                    3349   LDIV:
08001BBC  4E56 0000 3350          link    A6,#0
08001BC0  48E7 C000 3351          movem.l D0/D1,-(A7)
08001BC4  222E 0008 3352          move.l  8(A6),D1
08001BC8  202E 000C 3353          move.l  12(A6),D0
08001BCC  4A80      3354          tst.l   D0
08001BCE  6A0E      3355          bpl.s   ldiv_1
08001BD0  4480      3356          neg.l   D0
08001BD2  4A81      3357          tst.l   D1
08001BD4  6A14      3358          bpl.s   ldiv_2
08001BD6  4481      3359          neg.l   D1
08001BD8  612A      3360          bsr.s   dodiv
08001BDA  4481      3361          neg.l   D1
08001BDC  6016      3362          bra.s   ldiv_4
                    3363   ldiv_1:
08001BDE  4A81      3364          tst.l   D1
08001BE0  6A10      3365          bpl.s   ldiv_3
08001BE2  4481      3366          neg.l   D1
08001BE4  611E      3367          bsr.s   dodiv
08001BE6  4480      3368          neg.l   D0
08001BE8  600A      3369          bra.s   ldiv_4
                    3370   ldiv_2:
08001BEA  6118      3371          bsr.s   dodiv
08001BEC  4480      3372          neg.l   D0
08001BEE  4481      3373          neg.l   D1
08001BF0  6002      3374          bra.s   ldiv_4
                    3375   ldiv_3:
08001BF2  6110      3376          bsr.s   dodiv
                    3377   ldiv_4:
08001BF4  2D40 0008 3378          move.l  D0,8(A6)
08001BF8  2D41 000C 3379          move.l  D1,12(A6)
08001BFC  4CDF 0003 3380          movem.l (A7)+,D0/D1
08001C00  4E5E      3381          unlk    A6
08001C02  4E75      3382          rts
                    3383   dodiv:
08001C04  0C81 0000 3384          cmpi.l  #$FFFF,D1
08001C08  FFFF      
08001C0A  6236      3385          bhi.s   dodiv_2
08001C0C  0C80 0000 3386          cmpi.l  #$FFFF,D0
08001C10  FFFF      
08001C12  6210      3387          bhi.s   dodiv_1
08001C14  80C1      3388          divu    D1,D0
08001C16  2200      3389          move.l  D0,D1
08001C18  4241      3390          clr.w   D1
08001C1A  4841      3391          swap    D1
08001C1C  0280 0000 3392          andi.l  #$FFFF,D0
08001C20  FFFF      
08001C22  4E75      3393          rts
                    3394   dodiv_1:
08001C24  48A7 A000 3395          movem.w D0/D2,-(A7)
08001C28  4240      3396          clr.w   D0
08001C2A  4840      3397          swap    D0
08001C2C  80C1      3398          divu    D1,D0
08001C2E  3400      3399          move.w  D0,D2
08001C30  301F      3400          move.w  (A7)+,D0
08001C32  80C1      3401          divu    D1,D0
08001C34  4840      3402          swap    D0
08001C36  4281      3403          clr.l   D1
08001C38  3200      3404          move.w  D0,D1
08001C3A  3002      3405          move.w  D2,D0
08001C3C  4840      3406          swap    D0
08001C3E  341F      3407          move.w  (A7)+,D2
08001C40  4E75      3408          rts
                    3409   dodiv_2:
08001C42  48E7 3800 3410          movem.l D2/D3/D4,-(A7)
08001C46  2401      3411          move.l  D1,D2
08001C48  4242      3412          clr.w   D2
08001C4A  4842      3413          swap    D2
08001C4C  5282      3414          addq.l  #1,D2
08001C4E  2600      3415          move.l  D0,D3
08001C50  2801      3416          move.l  D1,D4
08001C52  2202      3417          move.l  D2,D1
08001C54  61CE      3418          bsr.s   dodiv_1
08001C56  2204      3419          move.l  D4,D1
08001C58  82C2      3420          divu    D2,D1
08001C5A  80C1      3421          divu    D1,D0
08001C5C  0280 0000 3422          andi.l  #$FFFF,D0
08001C60  FFFF      
                    3423   dodiv_3:
08001C62  2204      3424          move.l  D4,D1
08001C64  2404      3425          move.l  D4,D2
08001C66  4842      3426          swap    D2
08001C68  C2C0      3427          mulu    D0,D1
08001C6A  C4C0      3428          mulu    D0,D2
08001C6C  4842      3429          swap    D2
08001C6E  D282      3430          add.l   D2,D1
08001C70  9283      3431          sub.l   D3,D1
08001C72  620A      3432          bhi.s   dodiv_4
08001C74  4481      3433          neg.l   D1
08001C76  B881      3434          cmp.l   D1,D4
08001C78  6208      3435          bhi.s   dodiv_5
08001C7A  5280      3436          addq.l  #1,D0
08001C7C  60E4      3437          bra.s   dodiv_3
                    3438   dodiv_4:
08001C7E  5380      3439          subq.l  #1,D0
08001C80  60E0      3440          bra.s   dodiv_3
                    3441   dodiv_5:
08001C82  4CDF 001C 3442          movem.l (A7)+,D2/D3/D4
08001C86  4E75      3443          rts
                    3444   _scanf:
08001C88  4E56 FFFC 3445          link      A6,#-4
08001C8C  48E7 2000 3446          movem.l   D2,-(A7)
08001C90  41EE 0008 3447          lea       8(A6),A0
08001C94  5848      3448          addq.w    #4,A0
08001C96  2408      3449          move.l    A0,D2
08001C98  2F02      3450          move.l    D2,-(A7)
08001C9A  2F2E 0008 3451          move.l    8(A6),-(A7)
08001C9E  42A7      3452          clr.l     -(A7)
08001CA0  6100 02F4 3453          bsr       _vsscanf
08001CA4  DEFC 000C 3454          add.w     #12,A7
08001CA8  2D40 FFFC 3455          move.l    D0,-4(A6)
08001CAC  4282      3456          clr.l     D2
08001CAE  202E FFFC 3457          move.l    -4(A6),D0
08001CB2  4CDF 0004 3458          movem.l   (A7)+,D2
08001CB6  4E5E      3459          unlk      A6
08001CB8  4E75      3460          rts
                    3461   _printf:
08001CBA  4E56 FFFC 3462          link      A6,#-4
08001CBE  48E7 2000 3463          movem.l   D2,-(A7)
08001CC2  41EE 0008 3464          lea       8(A6),A0
08001CC6  5848      3465          addq.w    #4,A0
08001CC8  2408      3466          move.l    A0,D2
08001CCA  2F02      3467          move.l    D2,-(A7)
08001CCC  2F2E 0008 3468          move.l    8(A6),-(A7)
08001CD0  42A7      3469          clr.l     -(A7)
08001CD2  6100 0962 3470          bsr       _vsprintf
08001CD6  DEFC 000C 3471          add.w     #12,A7
08001CDA  2D40 FFFC 3472          move.l    D0,-4(A6)
08001CDE  4282      3473          clr.l     D2
08001CE0  202E FFFC 3474          move.l    -4(A6),D0
08001CE4  4CDF 0004 3475          movem.l   (A7)+,D2
08001CE8  4E5E      3476          unlk      A6
08001CEA  4E75      3477          rts
                    3478   @vsscanf_scanread:
08001CEC  4E56 FFFC 3479          link      A6,#-4
08001CF0  48E7 0020 3480          movem.l   A2,-(A7)
08001CF4  45F9 0800 3481          lea       @vsscanf_bufx,A2
08001CF8  3ABE      
08001CFA  4AAE 0008 3482          tst.l     8(A6)
08001CFE  6722      3483          beq.s     @vsscanf_scanread_1
08001D00  206E 0008 3484          move.l    8(A6),A0
08001D04  58AE 0008 3485          addq.l    #4,8(A6)
08001D08  2050      3486          move.l    (A0),A0
08001D0A  1010      3487          move.b    (A0),D0
08001D0C  4880      3488          ext.w     D0
08001D0E  48C0      3489          ext.l     D0
08001D10  2D40 FFFC 3490          move.l    D0,-4(A6)
08001D14  6706      3491          beq.s     @vsscanf_scanread_3
08001D16  202E FFFC 3492          move.l    -4(A6),D0
08001D1A  6002      3493          bra.s     @vsscanf_scanread_4
                    3494   @vsscanf_scanread_3:
08001D1C  70FF      3495          moveq     #-1,D0
                    3496   @vsscanf_scanread_4:
08001D1E  6000 0032 3497          bra       @vsscanf_scanread_5
                    3498   @vsscanf_scanread_1:
08001D22  2052      3499          move.l    (A2),A0
08001D24  1010      3500          move.b    (A0),D0
08001D26  6620      3501          bne.s     @vsscanf_scanread_6
08001D28  4879 0800 3502          pea       @vsscanf_buf
08001D2C  3BEE      
08001D2E  6100 100A 3503          bsr       _gets
08001D32  584F      3504          addq.w    #4,A7
08001D34  2480      3505          move.l    D0,(A2)
08001D36  4879 0800 3506          pea       @vsscanf_1
08001D3A  3AC2      
08001D3C  4879 0800 3507          pea       @vsscanf_buf
08001D40  3BEE      
08001D42  6100 1096 3508          bsr       _strcat
08001D46  504F      3509          addq.w    #8,A7
                    3510   @vsscanf_scanread_6:
08001D48  2052      3511          move.l    (A2),A0
08001D4A  5292      3512          addq.l    #1,(A2)
08001D4C  1010      3513          move.b    (A0),D0
08001D4E  4880      3514          ext.w     D0
08001D50  48C0      3515          ext.l     D0
                    3516   @vsscanf_scanread_5:
08001D52  4CDF 0400 3517          movem.l   (A7)+,A2
08001D56  4E5E      3518          unlk      A6
08001D58  4E75      3519          rts
                    3520   @vsscanf_scanputback:
08001D5A  4E56 0000 3521          link      A6,#0
08001D5E  48E7 3000 3522          movem.l   D2/D3,-(A7)
08001D62  242E 000C 3523          move.l    12(A6),D2
08001D66  262E 0008 3524          move.l    8(A6),D3
08001D6A  6718      3525          beq.s     @vsscanf_scanputback_1
08001D6C  0C82 FFFF 3526          cmp.l     #-1,D2
08001D70  FFFF      
08001D72  670A      3527          beq.s     @vsscanf_scanputback_3
08001D74  5983      3528          subq.l    #4,D3
08001D76  2043      3529          move.l    D3,A0
08001D78  2050      3530          move.l    (A0),A0
08001D7A  1082      3531          move.b    D2,(A0)
08001D7C  6004      3532          bra.s     @vsscanf_scanputback_4
                    3533   @vsscanf_scanputback_3:
08001D7E  2043      3534          move.l    D3,A0
08001D80  5390      3535          subq.l    #1,(A0)
                    3536   @vsscanf_scanputback_4:
08001D82  602E      3537          bra.s     @vsscanf_scanputback_6
                    3538   @vsscanf_scanputback_1:
08001D84  41F9 0800 3539          lea       @vsscanf_buf,A0
08001D88  3BEE      
08001D8A  2008      3540          move.l    A0,D0
08001D8C  B0B9 0800 3541          cmp.l     @vsscanf_bufx,D0
08001D90  3ABE      
08001D92  6610      3542          bne.s     @vsscanf_scanputback_5
08001D94  4239 0800 3543          clr.b     @vsscanf_buf
08001D98  3BEE      
08001D9A  2F02      3544          move.l    D2,-(A7)
08001D9C  6100 107E 3545          bsr       _ungetch
08001DA0  584F      3546          addq.w    #4,A7
08001DA2  600E      3547          bra.s     @vsscanf_scanputback_6
                    3548   @vsscanf_scanputback_5:
08001DA4  53B9 0800 3549          subq.l    #1,@vsscanf_bufx
08001DA8  3ABE      
08001DAA  2079 0800 3550          move.l    @vsscanf_bufx,A0
08001DAE  3ABE      
08001DB0  1082      3551          move.b    D2,(A0)
                    3552   @vsscanf_scanputback_6:
08001DB2  2002      3553          move.l    D2,D0
08001DB4  4CDF 000C 3554          movem.l   (A7)+,D2/D3
08001DB8  4E5E      3555          unlk      A6
08001DBA  4E75      3556          rts
                    3557   @vsscanf_scanspace:
08001DBC  4E56 0000 3558          link      A6,#0
08001DC0  48E7 2000 3559          movem.l   D2,-(A7)
                    3560   @vsscanf_scanspace_1:
08001DC4  2F2E 0008 3561          move.l    8(A6),-(A7)
08001DC8  6100 FF22 3562          bsr       @vsscanf_scanread
08001DCC  584F      3563          addq.w    #4,A7
08001DCE  2400      3564          move.l    D0,D2
08001DD0  206E 000C 3565          move.l    12(A6),A0
08001DD4  5290      3566          addq.l    #1,(A0)
08001DD6  2042      3567          move.l    D2,A0
08001DD8  43F9 0800 3568          lea       __ctype,A1
08001DDC  3AC4      
08001DDE  1030 9801 3569          move.b    1(A0,A1.L),D0
08001DE2  C03C 0010 3570          and.b     #16,D0
08001DE6  66DC      3571          bne       @vsscanf_scanspace_1
08001DE8  2002      3572          move.l    D2,D0
08001DEA  4CDF 0004 3573          movem.l   (A7)+,D2
08001DEE  4E5E      3574          unlk      A6
08001DF0  4E75      3575          rts
                    3576   @vsscanf_scanselect:
08001DF2  4E56 0000 3577          link      A6,#0
08001DF6  48E7 3F20 3578          movem.l   D2/D3/D4/D5/D6/D7/A2,-(A7)
08001DFA  262E 000C 3579          move.l    12(A6),D3
08001DFE  2C2E 0018 3580          move.l    24(A6),D6
08001E02  2E2E 0014 3581          move.l    20(A6),D7
08001E06  2043      3582          move.l    D3,A0
08001E08  1010      3583          move.b    (A0),D0
08001E0A  4880      3584          ext.w     D0
08001E0C  48C0      3585          ext.l     D0
08001E0E  0C80 0000 3586          cmp.l     #94,D0
08001E12  005E      
08001E14  6608      3587          bne.s     @vsscanf_scanselect_1
08001E16  347C 0001 3588          move.w    #1,A2
08001E1A  5283      3589          addq.l    #1,D3
08001E1C  6004      3590          bra.s     @vsscanf_scanselect_2
                    3591   @vsscanf_scanselect_1:
08001E1E  347C 0000 3592          move.w    #0,A2
                    3593   @vsscanf_scanselect_2:
08001E22  202E 0010 3594          move.l    16(A6),D0
08001E26  53AE 0010 3595          subq.l    #1,16(A6)
08001E2A  4A80      3596          tst.l     D0
08001E2C  6700 0108 3597          beq       @vsscanf_scanselect_5
08001E30  2F2E 0008 3598          move.l    8(A6),-(A7)
08001E34  6100 FEB6 3599          bsr       @vsscanf_scanread
08001E38  584F      3600          addq.w    #4,A7
08001E3A  2800      3601          move.l    D0,D4
08001E3C  0C84 FFFF 3602          cmp.l     #-1,D4
08001E40  FFFF      
08001E42  6604      3603          bne.s     @vsscanf_scanselect_6
08001E44  6000 00F0 3604          bra       @vsscanf_scanselect_5
                    3605   @vsscanf_scanselect_6:
08001E48  206E 001C 3606          move.l    28(A6),A0
08001E4C  5290      3607          addq.l    #1,(A0)
08001E4E  4285      3608          clr.l     D5
08001E50  4282      3609          clr.l     D2
                    3610   @vsscanf_scanselect_8:
08001E52  2043      3611          move.l    D3,A0
08001E54  1030 2800 3612          move.b    0(A0,D2.L),D0
08001E58  4880      3613          ext.w     D0
08001E5A  48C0      3614          ext.l     D0
08001E5C  0C80 0000 3615          cmp.l     #93,D0
08001E60  005D      
08001E62  6700 008E 3616          beq       @vsscanf_scanselect_10
08001E66  4A82      3617          tst.l     D2
08001E68  6716      3618          beq.s     @vsscanf_scanselect_11
08001E6A  2043      3619          move.l    D3,A0
08001E6C  1030 2800 3620          move.b    0(A0,D2.L),D0
08001E70  4880      3621          ext.w     D0
08001E72  48C0      3622          ext.l     D0
08001E74  0C80 0000 3623          cmp.l     #93,D0
08001E78  005D      
08001E7A  6604      3624          bne.s     @vsscanf_scanselect_11
08001E7C  6000 0074 3625          bra       @vsscanf_scanselect_10
                    3626   @vsscanf_scanselect_11:
08001E80  4A82      3627          tst.l     D2
08001E82  6700 0058 3628          beq       @vsscanf_scanselect_15
08001E86  2043      3629          move.l    D3,A0
08001E88  1030 2800 3630          move.b    0(A0,D2.L),D0
08001E8C  4880      3631          ext.w     D0
08001E8E  48C0      3632          ext.l     D0
08001E90  0C80 0000 3633          cmp.l     #45,D0
08001E94  002D      
08001E96  6600 0044 3634          bne       @vsscanf_scanselect_15
08001E9A  2043      3635          move.l    D3,A0
08001E9C  2002      3636          move.l    D2,D0
08001E9E  5380      3637          subq.l    #1,D0
08001EA0  2243      3638          move.l    D3,A1
08001EA2  2F08      3639          move.l    A0,-(A7)
08001EA4  2042      3640          move.l    D2,A0
08001EA6  1230 0800 3641          move.b    0(A0,D0.L),D1
08001EAA  B230 9801 3642          cmp.b     1(A0,A1.L),D1
08001EAE  6C00 002C 3643          bge       @vsscanf_scanselect_15
08001EB2  205F      3644          move.l    (A7)+,A0
08001EB4  2043      3645          move.l    D3,A0
08001EB6  2002      3646          move.l    D2,D0
08001EB8  5380      3647          subq.l    #1,D0
08001EBA  1030 0800 3648          move.b    0(A0,D0.L),D0
08001EBE  4880      3649          ext.w     D0
08001EC0  48C0      3650          ext.l     D0
08001EC2  B880      3651          cmp.l     D0,D4
08001EC4  6D12      3652          blt.s     @vsscanf_scanselect_17
08001EC6  2043      3653          move.l    D3,A0
08001EC8  2242      3654          move.l    D2,A1
08001ECA  1031 8801 3655          move.b    1(A1,A0.L),D0
08001ECE  4880      3656          ext.w     D0
08001ED0  48C0      3657          ext.l     D0
08001ED2  B880      3658          cmp.l     D0,D4
08001ED4  6E02      3659          bgt.s     @vsscanf_scanselect_17
08001ED6  601A      3660          bra.s     @vsscanf_scanselect_10
                    3661   @vsscanf_scanselect_17:
08001ED8  5282      3662          addq.l    #1,D2
08001EDA  6010      3663          bra.s     @vsscanf_scanselect_19
                    3664   @vsscanf_scanselect_15:
08001EDC  2043      3665          move.l    D3,A0
08001EDE  1030 2800 3666          move.b    0(A0,D2.L),D0
08001EE2  4880      3667          ext.w     D0
08001EE4  48C0      3668          ext.l     D0
08001EE6  B880      3669          cmp.l     D0,D4
08001EE8  6602      3670          bne.s     @vsscanf_scanselect_19
08001EEA  6006      3671          bra.s     @vsscanf_scanselect_10
                    3672   @vsscanf_scanselect_19:
08001EEC  5282      3673          addq.l    #1,D2
08001EEE  6000 FF62 3674          bra       @vsscanf_scanselect_8
                    3675   @vsscanf_scanselect_10:
08001EF2  4A82      3676          tst.l     D2
08001EF4  6712      3677          beq.s     @vsscanf_scanselect_23
08001EF6  2043      3678          move.l    D3,A0
08001EF8  1030 2800 3679          move.b    0(A0,D2.L),D0
08001EFC  4880      3680          ext.w     D0
08001EFE  48C0      3681          ext.l     D0
08001F00  0C80 0000 3682          cmp.l     #93,D0
08001F04  005D      
08001F06  6702      3683          beq.s     @vsscanf_scanselect_21
                    3684   @vsscanf_scanselect_23:
08001F08  7A01      3685          moveq     #1,D5
                    3686   @vsscanf_scanselect_21:
08001F0A  200A      3687          move.l    A2,D0
08001F0C  6712      3688          beq.s     @vsscanf_scanselect_24
08001F0E  4A85      3689          tst.l     D5
08001F10  660C      3690          bne.s     @vsscanf_scanselect_26
08001F12  4A87      3691          tst.l     D7
08001F14  6606      3692          bne.s     @vsscanf_scanselect_28
08001F16  2046      3693          move.l    D6,A0
08001F18  5286      3694          addq.l    #1,D6
08001F1A  1084      3695          move.b    D4,(A0)
                    3696   @vsscanf_scanselect_28:
08001F1C  6014      3697          bra.s     @vsscanf_scanselect_4
                    3698   @vsscanf_scanselect_26:
08001F1E  6016      3699          bra.s     @vsscanf_scanselect_5
                    3700   @vsscanf_scanselect_24:
08001F20  4A85      3701          tst.l     D5
08001F22  670C      3702          beq.s     @vsscanf_scanselect_30
08001F24  4A87      3703          tst.l     D7
08001F26  6606      3704          bne.s     @vsscanf_scanselect_32
08001F28  2046      3705          move.l    D6,A0
08001F2A  5286      3706          addq.l    #1,D6
08001F2C  1084      3707          move.b    D4,(A0)
                    3708   @vsscanf_scanselect_32:
08001F2E  6002      3709          bra.s     @vsscanf_scanselect_4
                    3710   @vsscanf_scanselect_30:
08001F30  6004      3711          bra.s     @vsscanf_scanselect_5
                    3712   @vsscanf_scanselect_4:
08001F32  6000 FEEE 3713          bra       @vsscanf_scanselect_2
                    3714   @vsscanf_scanselect_5:
08001F36  0C84 FFFF 3715          cmp.l     #-1,D4
08001F3A  FFFF      
08001F3C  6712      3716          beq.s     @vsscanf_scanselect_34
08001F3E  2F04      3717          move.l    D4,-(A7)
08001F40  2F2E 0008 3718          move.l    8(A6),-(A7)
08001F44  6100 FE14 3719          bsr       @vsscanf_scanputback
08001F48  504F      3720          addq.w    #8,A7
08001F4A  206E 001C 3721          move.l    28(A6),A0
08001F4E  5390      3722          subq.l    #1,(A0)
                    3723   @vsscanf_scanselect_34:
08001F50  4A87      3724          tst.l     D7
08001F52  6604      3725          bne.s     @vsscanf_scanselect_36
08001F54  2046      3726          move.l    D6,A0
08001F56  4210      3727          clr.b     (A0)
                    3728   @vsscanf_scanselect_36:
08001F58  5283      3729          addq.l    #1,D3
08001F5A  2043      3730          move.l    D3,A0
08001F5C  1010      3731          move.b    (A0),D0
08001F5E  4880      3732          ext.w     D0
08001F60  48C0      3733          ext.l     D0
08001F62  0C80 0000 3734          cmp.l     #93,D0
08001F66  005D      
08001F68  6702      3735          beq.s     @vsscanf_scanselect_40
08001F6A  60EC      3736          bra       @vsscanf_scanselect_36
                    3737   @vsscanf_scanselect_40:
08001F6C  5283      3738          addq.l    #1,D3
08001F6E  2003      3739          move.l    D3,D0
08001F70  4CDF 04FC 3740          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2
08001F74  4E5E      3741          unlk      A6
08001F76  4E75      3742          rts
                    3743   _scanflush:
08001F78  41F9 0800 3744          lea       @vsscanf_buf,A0
08001F7C  3BEE      
08001F7E  23C8 0800 3745          move.l    A0,@vsscanf_bufx
08001F82  3ABE      
08001F84  4239 0800 3746          clr.b     @vsscanf_buf
08001F88  3BEE      
08001F8A  4878 FFFF 3747          pea       -1
08001F8E  6100 0E8C 3748          bsr       _ungetch
08001F92  584F      3749          addq.w    #4,A7
08001F94  4E75      3750          rts
                    3751   _vsscanf:
08001F96  4E56 FF88 3752          link      A6,#-120
08001F9A  48E7 3F3C 3753          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08001F9E  47F9 0800 3754          lea       @vsscanf_scanread,A3
08001FA2  1CEC      
08001FA4  4AAE 0008 3755          tst.l     8(A6)
08001FA8  6706      3756          beq.s     vsscanf_1
08001FAA  41EE 0008 3757          lea       8(A6),A0
08001FAE  6004      3758          bra.s     vsscanf_2
                    3759   vsscanf_1:
08001FB0  4280      3760          clr.l     D0
08001FB2  2040      3761          move.l    D0,A0
                    3762   vsscanf_2:
08001FB4  2A08      3763          move.l    A0,D5
08001FB6  42AE FFE4 3764          clr.l     -28(A6)
08001FBA  4284      3765          clr.l     D4
                    3766   vsscanf_3:
08001FBC  206E 000C 3767          move.l    12(A6),A0
08001FC0  52AE 000C 3768          addq.l    #1,12(A6)
08001FC4  1010      3769          move.b    (A0),D0
08001FC6  4880      3770          ext.w     D0
08001FC8  48C0      3771          ext.l     D0
08001FCA  2600      3772          move.l    D0,D3
08001FCC  6700 05AC 3773          beq       vsscanf_5
08001FD0  4286      3774          clr.l     D6
08001FD2  387C 0000 3775          move.w    #0,A4
08001FD6  0C83 0000 3776          cmp.l     #32,D3
08001FDA  0020      
08001FDC  6712      3777          beq.s     vsscanf_8
08001FDE  0C83 0000 3778          cmp.l     #9,D3
08001FE2  0009      
08001FE4  670A      3779          beq.s     vsscanf_8
08001FE6  0C83 0000 3780          cmp.l     #10,D3
08001FEA  000A      
08001FEC  6600 0048 3781          bne       vsscanf_6
                    3782   vsscanf_8:
08001FF0  2F05      3783          move.l    D5,-(A7)
08001FF2  4E93      3784          jsr       (A3)
08001FF4  584F      3785          addq.w    #4,A7
08001FF6  2400      3786          move.l    D0,D2
08001FF8  52AE FFE4 3787          addq.l    #1,-28(A6)
08001FFC  0C82 FFFF 3788          cmp.l     #-1,D2
08002000  FFFF      
08002002  660E      3789          bne.s     vsscanf_11
08002004  4A84      3790          tst.l     D4
08002006  6704      3791          beq.s     vsscanf_13
08002008  2004      3792          move.l    D4,D0
0800200A  6002      3793          bra.s     vsscanf_14
                    3794   vsscanf_13:
0800200C  70FF      3795          moveq     #-1,D0
                    3796   vsscanf_14:
0800200E  6000 056C 3797          bra       vsscanf_15
                    3798   vsscanf_11:
08002012  2042      3799          move.l    D2,A0
08002014  43F9 0800 3800          lea       __ctype,A1
08002018  3AC4      
0800201A  1030 9801 3801          move.b    1(A0,A1.L),D0
0800201E  C03C 0010 3802          and.b     #16,D0
08002022  66CC      3803          bne       vsscanf_8
08002024  53AE FFE4 3804          subq.l    #1,-28(A6)
08002028  2F02      3805          move.l    D2,-(A7)
0800202A  2F05      3806          move.l    D5,-(A7)
0800202C  6100 FD2C 3807          bsr       @vsscanf_scanputback
08002030  504F      3808          addq.w    #8,A7
08002032  6000 0542 3809          bra       vsscanf_139
                    3810   vsscanf_6:
08002036  0C83 0000 3811          cmp.l     #37,D3
0800203A  0025      
0800203C  6600 0502 3812          bne       vsscanf_127
08002040  206E 000C 3813          move.l    12(A6),A0
08002044  52AE 000C 3814          addq.l    #1,12(A6)
08002048  1010      3815          move.b    (A0),D0
0800204A  4880      3816          ext.w     D0
0800204C  48C0      3817          ext.l     D0
0800204E  2600      3818          move.l    D0,D3
08002050  42AE FFEC 3819          clr.l     -20(A6)
08002054  4286      3820          clr.l     D6
08002056  42AE FFE8 3821          clr.l     -24(A6)
0800205A  347C 7FFF 3822          move.w    #32767,A2
0800205E  0C83 0000 3823          cmp.l     #42,D3
08002062  002A      
08002064  6612      3824          bne.s     vsscanf_18
08002066  7C01      3825          moveq     #1,D6
08002068  206E 000C 3826          move.l    12(A6),A0
0800206C  52AE 000C 3827          addq.l    #1,12(A6)
08002070  1010      3828          move.b    (A0),D0
08002072  4880      3829          ext.w     D0
08002074  48C0      3830          ext.l     D0
08002076  2600      3831          move.l    D0,D3
                    3832   vsscanf_18:
08002078  2043      3833          move.l    D3,A0
0800207A  43F9 0800 3834          lea       __ctype,A1
0800207E  3AC4      
08002080  1030 9801 3835          move.b    1(A0,A1.L),D0
08002084  C03C 0004 3836          and.b     #4,D0
08002088  6700 004E 3837          beq       vsscanf_24
0800208C  2003      3838          move.l    D3,D0
0800208E  0480 0000 3839          sub.l     #48,D0
08002092  0030      
08002094  2440      3840          move.l    D0,A2
                    3841   vsscanf_22:
08002096  206E 000C 3842          move.l    12(A6),A0
0800209A  52AE 000C 3843          addq.l    #1,12(A6)
0800209E  1010      3844          move.b    (A0),D0
080020A0  4880      3845          ext.w     D0
080020A2  48C0      3846          ext.l     D0
080020A4  2600      3847          move.l    D0,D3
080020A6  2040      3848          move.l    D0,A0
080020A8  43F9 0800 3849          lea       __ctype,A1
080020AC  3AC4      
080020AE  1030 9801 3850          move.b    1(A0,A1.L),D0
080020B2  C0BC 0000 3851          and.l     #255,D0
080020B6  00FF      
080020B8  C0BC 0000 3852          and.l     #4,D0
080020BC  0004      
080020BE  6718      3853          beq.s     vsscanf_24
080020C0  70D0      3854          moveq     #-48,D0
080020C2  2F0A      3855          move.l    A2,-(A7)
080020C4  4878 000A 3856          pea       10
080020C8  6100 0BE2 3857          bsr       LMUL
080020CC  2217      3858          move.l    (A7),D1
080020CE  504F      3859          addq.w    #8,A7
080020D0  D283      3860          add.l     D3,D1
080020D2  D081      3861          add.l     D1,D0
080020D4  2440      3862          move.l    D0,A2
080020D6  60BE      3863          bra       vsscanf_22
                    3864   vsscanf_24:
080020D8  0C83 0000 3865          cmp.l     #108,D3
080020DC  006C      
080020DE  6708      3866          beq.s     vsscanf_27
080020E0  0C83 0000 3867          cmp.l     #76,D3
080020E4  004C      
080020E6  661A      3868          bne.s     vsscanf_25
                    3869   vsscanf_27:
080020E8  2D7C 0000 3870          move.l    #1,-24(A6)
080020EC  0001 FFE8 
080020F0  206E 000C 3871          move.l    12(A6),A0
080020F4  52AE 000C 3872          addq.l    #1,12(A6)
080020F8  1010      3873          move.b    (A0),D0
080020FA  4880      3874          ext.w     D0
080020FC  48C0      3875          ext.l     D0
080020FE  2600      3876          move.l    D0,D3
08002100  6020      3877          bra.s     vsscanf_28
                    3878   vsscanf_25:
08002102  0C83 0000 3879          cmp.l     #104,D3
08002106  0068      
08002108  6618      3880          bne.s     vsscanf_28
0800210A  2D7C 0000 3881          move.l    #1,-20(A6)
0800210E  0001 FFEC 
08002112  206E 000C 3882          move.l    12(A6),A0
08002116  52AE 000C 3883          addq.l    #1,12(A6)
0800211A  1010      3884          move.b    (A0),D0
0800211C  4880      3885          ext.w     D0
0800211E  48C0      3886          ext.l     D0
08002120  2600      3887          move.l    D0,D3
                    3888   vsscanf_28:
08002122  0C83 0000 3889          cmp.l     #91,D3
08002126  005B      
08002128  6600 0036 3890          bne       vsscanf_30
0800212C  4A86      3891          tst.l     D6
0800212E  660A      3892          bne.s     vsscanf_32
08002130  206E 0010 3893          move.l    16(A6),A0
08002134  58AE 0010 3894          addq.l    #4,16(A6)
08002138  2E10      3895          move.l    (A0),D7
                    3896   vsscanf_32:
0800213A  486E FFE4 3897          pea       -28(A6)
0800213E  2F07      3898          move.l    D7,-(A7)
08002140  2F06      3899          move.l    D6,-(A7)
08002142  2F0A      3900          move.l    A2,-(A7)
08002144  2F2E 000C 3901          move.l    12(A6),-(A7)
08002148  2F05      3902          move.l    D5,-(A7)
0800214A  6100 FCA6 3903          bsr       @vsscanf_scanselect
0800214E  DEFC 0018 3904          add.w     #24,A7
08002152  2D40 000C 3905          move.l    D0,12(A6)
08002156  4A86      3906          tst.l     D6
08002158  6602      3907          bne.s     vsscanf_34
0800215A  5284      3908          addq.l    #1,D4
                    3909   vsscanf_34:
0800215C  6000 0418 3910          bra       vsscanf_139
                    3911   vsscanf_30:
08002160  0C83 0000 3912          cmp.l     #110,D3
08002164  006E      
08002166  661A      3913          bne.s     vsscanf_36
08002168  4A86      3914          tst.l     D6
0800216A  6612      3915          bne.s     vsscanf_38
0800216C  206E 0010 3916          move.l    16(A6),A0
08002170  58AE 0010 3917          addq.l    #4,16(A6)
08002174  2E10      3918          move.l    (A0),D7
08002176  2047      3919          move.l    D7,A0
08002178  20AE FFE4 3920          move.l    -28(A6),(A0)
0800217C  5284      3921          addq.l    #1,D4
                    3922   vsscanf_38:
0800217E  6000 03F6 3923          bra       vsscanf_139
                    3924   vsscanf_36:
08002182  0C83 0000 3925          cmp.l     #115,D3
08002186  0073      
08002188  6600 00AC 3926          bne       vsscanf_40
0800218C  486E FFE4 3927          pea       -28(A6)
08002190  2F05      3928          move.l    D5,-(A7)
08002192  6100 FC28 3929          bsr       @vsscanf_scanspace
08002196  504F      3930          addq.w    #8,A7
08002198  2400      3931          move.l    D0,D2
0800219A  4A86      3932          tst.l     D6
0800219C  660A      3933          bne.s     vsscanf_42
0800219E  206E 0010 3934          move.l    16(A6),A0
080021A2  58AE 0010 3935          addq.l    #4,16(A6)
080021A6  2E10      3936          move.l    (A0),D7
                    3937   vsscanf_42:
080021A8  52AE FFE4 3938          addq.l    #1,-28(A6)
                    3939   vsscanf_44:
080021AC  200A      3940          move.l    A2,D0
080021AE  534A      3941          subq.w    #1,A2
080021B0  4A80      3942          tst.l     D0
080021B2  6700 0038 3943          beq       vsscanf_46
080021B6  2042      3944          move.l    D2,A0
080021B8  43F9 0800 3945          lea       __ctype,A1
080021BC  3AC4      
080021BE  1030 9801 3946          move.b    1(A0,A1.L),D0
080021C2  C03C 0010 3947          and.b     #16,D0
080021C6  6624      3948          bne.s     vsscanf_46
080021C8  0C82 FFFF 3949          cmp.l     #-1,D2
080021CC  FFFF      
080021CE  671C      3950          beq.s     vsscanf_46
080021D0  387C 0001 3951          move.w    #1,A4
080021D4  4A86      3952          tst.l     D6
080021D6  6606      3953          bne.s     vsscanf_47
080021D8  2047      3954          move.l    D7,A0
080021DA  5287      3955          addq.l    #1,D7
080021DC  1082      3956          move.b    D2,(A0)
                    3957   vsscanf_47:
080021DE  2F05      3958          move.l    D5,-(A7)
080021E0  4E93      3959          jsr       (A3)
080021E2  584F      3960          addq.w    #4,A7
080021E4  2400      3961          move.l    D0,D2
080021E6  52AE FFE4 3962          addq.l    #1,-28(A6)
080021EA  60C0      3963          bra       vsscanf_44
                    3964   vsscanf_46:
080021EC  4A86      3965          tst.l     D6
080021EE  660A      3966          bne.s     vsscanf_51
080021F0  2047      3967          move.l    D7,A0
080021F2  4210      3968          clr.b     (A0)
080021F4  200C      3969          move.l    A4,D0
080021F6  6702      3970          beq.s     vsscanf_51
080021F8  5284      3971          addq.l    #1,D4
                    3972   vsscanf_51:
080021FA  0C82 FFFF 3973          cmp.l     #-1,D2
080021FE  FFFF      
08002200  6708      3974          beq.s     vsscanf_55
08002202  4A86      3975          tst.l     D6
08002204  661E      3976          bne.s     vsscanf_53
08002206  200C      3977          move.l    A4,D0
08002208  661A      3978          bne.s     vsscanf_53
                    3979   vsscanf_55:
0800220A  4A84      3980          tst.l     D4
0800220C  6704      3981          beq.s     vsscanf_56
0800220E  2004      3982          move.l    D4,D0
08002210  600E      3983          bra.s     vsscanf_59
                    3984   vsscanf_56:
08002212  0C82 FFFF 3985          cmp.l     #-1,D2
08002216  FFFF      
08002218  6604      3986          bne.s     vsscanf_58
0800221A  70FF      3987          moveq     #-1,D0
0800221C  6002      3988          bra.s     vsscanf_59
                    3989   vsscanf_58:
0800221E  2004      3990          move.l    D4,D0
                    3991   vsscanf_59:
08002220  6000 035A 3992          bra       vsscanf_15
                    3993   vsscanf_53:
08002224  53AE FFE4 3994          subq.l    #1,-28(A6)
08002228  2F02      3995          move.l    D2,-(A7)
0800222A  2F05      3996          move.l    D5,-(A7)
0800222C  6100 FB2C 3997          bsr       @vsscanf_scanputback
08002230  504F      3998          addq.w    #8,A7
08002232  6000 0342 3999          bra       vsscanf_139
                    4000   vsscanf_40:
08002236  0C83 0000 4001          cmp.l     #99,D3
0800223A  0063      
0800223C  6600 008E 4002          bne       vsscanf_60
08002240  4A86      4003          tst.l     D6
08002242  660A      4004          bne.s     vsscanf_62
08002244  206E 0010 4005          move.l    16(A6),A0
08002248  58AE 0010 4006          addq.l    #4,16(A6)
0800224C  2E10      4007          move.l    (A0),D7
                    4008   vsscanf_62:
0800224E  2F05      4009          move.l    D5,-(A7)
08002250  4E93      4010          jsr       (A3)
08002252  584F      4011          addq.w    #4,A7
08002254  2400      4012          move.l    D0,D2
08002256  52AE FFE4 4013          addq.l    #1,-28(A6)
0800225A  200A      4014          move.l    A2,D0
0800225C  0C80 0000 4015          cmp.l     #32767,D0
08002260  7FFF      
08002262  6604      4016          bne.s     vsscanf_64
08002264  347C 0001 4017          move.w    #1,A2
                    4018   vsscanf_64:
08002268  0C82 FFFF 4019          cmp.l     #-1,D2
0800226C  FFFF      
0800226E  6606      4020          bne.s     vsscanf_66
08002270  4A86      4021          tst.l     D6
08002272  6602      4022          bne.s     vsscanf_66
08002274  5384      4023          subq.l    #1,D4
                    4024   vsscanf_66:
08002276  200A      4025          move.l    A2,D0
08002278  534A      4026          subq.w    #1,A2
0800227A  4A80      4027          tst.l     D0
0800227C  6720      4028          beq.s     vsscanf_70
0800227E  0C82 FFFF 4029          cmp.l     #-1,D2
08002282  FFFF      
08002284  6718      4030          beq.s     vsscanf_70
08002286  4A86      4031          tst.l     D6
08002288  6606      4032          bne.s     vsscanf_71
0800228A  2047      4033          move.l    D7,A0
0800228C  5287      4034          addq.l    #1,D7
0800228E  1082      4035          move.b    D2,(A0)
                    4036   vsscanf_71:
08002290  2F05      4037          move.l    D5,-(A7)
08002292  4E93      4038          jsr       (A3)
08002294  584F      4039          addq.w    #4,A7
08002296  2400      4040          move.l    D0,D2
08002298  52AE FFE4 4041          addq.l    #1,-28(A6)
0800229C  60D8      4042          bra       vsscanf_66
                    4043   vsscanf_70:
0800229E  0C82 FFFF 4044          cmp.l     #-1,D2
080022A2  FFFF      
080022A4  660E      4045          bne.s     vsscanf_73
080022A6  4A84      4046          tst.l     D4
080022A8  6704      4047          beq.s     vsscanf_75
080022AA  2004      4048          move.l    D4,D0
080022AC  6002      4049          bra.s     vsscanf_76
                    4050   vsscanf_75:
080022AE  70FF      4051          moveq     #-1,D0
                    4052   vsscanf_76:
080022B0  6000 02CA 4053          bra       vsscanf_15
                    4054   vsscanf_73:
080022B4  4A86      4055          tst.l     D6
080022B6  6602      4056          bne.s     vsscanf_77
080022B8  5284      4057          addq.l    #1,D4
                    4058   vsscanf_77:
080022BA  53AE FFE4 4059          subq.l    #1,-28(A6)
080022BE  2F02      4060          move.l    D2,-(A7)
080022C0  2F05      4061          move.l    D5,-(A7)
080022C2  6100 FA96 4062          bsr       @vsscanf_scanputback
080022C6  504F      4063          addq.w    #8,A7
080022C8  6000 02AC 4064          bra       vsscanf_139
                    4065   vsscanf_60:
080022CC  0C83 0000 4066          cmp.l     #105,D3
080022D0  0069      
080022D2  6600 0060 4067          bne       vsscanf_82
080022D6  486E FFE4 4068          pea       -28(A6)
080022DA  2F05      4069          move.l    D5,-(A7)
080022DC  6100 FADE 4070          bsr       @vsscanf_scanspace
080022E0  504F      4071          addq.w    #8,A7
080022E2  2400      4072          move.l    D0,D2
080022E4  0C82 0000 4073          cmp.l     #48,D2
080022E8  0030      
080022EA  6600 0038 4074          bne       vsscanf_81
080022EE  387C 0001 4075          move.w    #1,A4
080022F2  2F05      4076          move.l    D5,-(A7)
080022F4  4E93      4077          jsr       (A3)
080022F6  584F      4078          addq.w    #4,A7
080022F8  2400      4079          move.l    D0,D2
080022FA  2F02      4080          move.l    D2,-(A7)
080022FC  6100 0AB0 4081          bsr       _tolower
08002300  584F      4082          addq.w    #4,A7
08002302  0C80 0000 4083          cmp.l     #120,D0
08002306  0078      
08002308  6604      4084          bne.s     vsscanf_83
0800230A  7678      4085          moveq     #120,D3
0800230C  6010      4086          bra.s     vsscanf_84
                    4087   vsscanf_83:
0800230E  53AE FFE4 4088          subq.l    #1,-28(A6)
08002312  2F02      4089          move.l    D2,-(A7)
08002314  2F05      4090          move.l    D5,-(A7)
08002316  6100 FA42 4091          bsr       @vsscanf_scanputback
0800231A  504F      4092          addq.w    #8,A7
0800231C  766F      4093          moveq     #111,D3
                    4094   vsscanf_84:
0800231E  52AE FFE4 4095          addq.l    #1,-28(A6)
08002322  6010      4096          bra.s     vsscanf_82
                    4097   vsscanf_81:
08002324  53AE FFE4 4098          subq.l    #1,-28(A6)
08002328  2F02      4099          move.l    D2,-(A7)
0800232A  2F05      4100          move.l    D5,-(A7)
0800232C  6100 FA2C 4101          bsr       @vsscanf_scanputback
08002330  504F      4102          addq.w    #8,A7
08002332  7664      4103          moveq     #100,D3
                    4104   vsscanf_82:
08002334  0C83 0000 4105          cmp.l     #100,D3
08002338  0064      
0800233A  671A      4106          beq.s     vsscanf_87
0800233C  0C83 0000 4107          cmp.l     #117,D3
08002340  0075      
08002342  6712      4108          beq.s     vsscanf_87
08002344  0C83 0000 4109          cmp.l     #120,D3
08002348  0078      
0800234A  670A      4110          beq.s     vsscanf_87
0800234C  0C83 0000 4111          cmp.l     #111,D3
08002350  006F      
08002352  6600 01A4 4112          bne       vsscanf_85
                    4113   vsscanf_87:
08002356  486E FFE4 4114          pea       -28(A6)
0800235A  2F05      4115          move.l    D5,-(A7)
0800235C  6100 FA5E 4116          bsr       @vsscanf_scanspace
08002360  504F      4117          addq.w    #8,A7
08002362  2400      4118          move.l    D0,D2
08002364  2D7C 0000 4119          move.l    #10,-4(A6)
08002368  000A FFFC 
0800236C  0C83 0000 4120          cmp.l     #120,D3
08002370  0078      
08002372  6608      4121          bne.s     vsscanf_88
08002374  2D7C 0000 4122          move.l    #16,-4(A6)
08002378  0010 FFFC 
                    4123   vsscanf_88:
0800237C  0C83 0000 4124          cmp.l     #111,D3
08002380  006F      
08002382  6608      4125          bne.s     vsscanf_90
08002384  2D7C 0000 4126          move.l    #8,-4(A6)
08002388  0008 FFFC 
                    4127   vsscanf_90:
0800238C  4A86      4128          tst.l     D6
0800238E  660A      4129          bne.s     vsscanf_92
08002390  206E 0010 4130          move.l    16(A6),A0
08002394  58AE 0010 4131          addq.l    #4,16(A6)
08002398  2E10      4132          move.l    (A0),D7
                    4133   vsscanf_92:
0800239A  42AE FFE0 4134          clr.l     -32(A6)
0800239E  52AE FFE4 4135          addq.l    #1,-28(A6)
080023A2  0C83 0000 4136          cmp.l     #117,D3
080023A6  0075      
080023A8  6720      4137          beq.s     vsscanf_94
080023AA  0C82 0000 4138          cmp.l     #45,D2
080023AE  002D      
080023B0  6618      4139          bne.s     vsscanf_94
080023B2  2F05      4140          move.l    D5,-(A7)
080023B4  4E93      4141          jsr       (A3)
080023B6  584F      4142          addq.w    #4,A7
080023B8  2400      4143          move.l    D0,D2
080023BA  52AE FFE4 4144          addq.l    #1,-28(A6)
080023BE  2D7C 0000 4145          move.l    #1,-32(A6)
080023C2  0001 FFE0 
080023C6  387C 0001 4146          move.w    #1,A4
                    4147   vsscanf_94:
080023CA  3A7C 0000 4148          move.w    #0,A5
080023CE  0C82 FFFF 4149          cmp.l     #-1,D2
080023D2  FFFF      
080023D4  660E      4150          bne.s     vsscanf_96
080023D6  4A84      4151          tst.l     D4
080023D8  6704      4152          beq.s     vsscanf_98
080023DA  2004      4153          move.l    D4,D0
080023DC  6002      4154          bra.s     vsscanf_99
                    4155   vsscanf_98:
080023DE  70FF      4156          moveq     #-1,D0
                    4157   vsscanf_99:
080023E0  6000 019A 4158          bra       vsscanf_15
                    4159   vsscanf_96:
080023E4  200A      4160          move.l    A2,D0
080023E6  534A      4161          subq.w    #1,A2
080023E8  4A80      4162          tst.l     D0
080023EA  6700 0090 4163          beq       vsscanf_102
080023EE  0C83 0000 4164          cmp.l     #120,D3
080023F2  0078      
080023F4  6620      4165          bne.s     vsscanf_104
080023F6  2F02      4166          move.l    D2,-(A7)
080023F8  6100 09F6 4167          bsr       _toupper
080023FC  584F      4168          addq.w    #4,A7
080023FE  0C80 0000 4169          cmp.l     #65,D0
08002402  0041      
08002404  6D10      4170          blt.s     vsscanf_104
08002406  2F02      4171          move.l    D2,-(A7)
08002408  6100 09E6 4172          bsr       _toupper
0800240C  584F      4173          addq.w    #4,A7
0800240E  0C80 0000 4174          cmp.l     #70,D0
08002412  0046      
08002414  6F14      4175          ble.s     vsscanf_103
                    4176   vsscanf_104:
08002416  2042      4177          move.l    D2,A0
08002418  43F9 0800 4178          lea       __ctype,A1
0800241C  3AC4      
0800241E  1030 9801 4179          move.b    1(A0,A1.L),D0
08002422  C03C 0004 4180          and.b     #4,D0
08002426  6700 0054 4181          beq       vsscanf_102
                    4182   vsscanf_103:
0800242A  2042      4183          move.l    D2,A0
0800242C  43F9 0800 4184          lea       __ctype,A1
08002430  3AC4      
08002432  1030 9801 4185          move.b    1(A0,A1.L),D0
08002436  C03C 0004 4186          and.b     #4,D0
0800243A  6614      4187          bne.s     vsscanf_105
0800243C  70F9      4188          moveq     #-7,D0
0800243E  2F00      4189          move.l    D0,-(A7)
08002440  2F02      4190          move.l    D2,-(A7)
08002442  6100 09AC 4191          bsr       _toupper
08002446  584F      4192          addq.w    #4,A7
08002448  2200      4193          move.l    D0,D1
0800244A  201F      4194          move.l    (A7)+,D0
0800244C  D081      4195          add.l     D1,D0
0800244E  2400      4196          move.l    D0,D2
                    4197   vsscanf_105:
08002450  2F0D      4198          move.l    A5,-(A7)
08002452  2F2E FFFC 4199          move.l    -4(A6),-(A7)
08002456  6100 0854 4200          bsr       LMUL
0800245A  2017      4201          move.l    (A7),D0
0800245C  504F      4202          addq.w    #8,A7
0800245E  D082      4203          add.l     D2,D0
08002460  0480 0000 4204          sub.l     #48,D0
08002464  0030      
08002466  2A40      4205          move.l    D0,A5
08002468  2F05      4206          move.l    D5,-(A7)
0800246A  4E93      4207          jsr       (A3)
0800246C  584F      4208          addq.w    #4,A7
0800246E  2400      4209          move.l    D0,D2
08002470  52AE FFE4 4210          addq.l    #1,-28(A6)
08002474  387C 0001 4211          move.w    #1,A4
08002478  6000 FF6A 4212          bra       vsscanf_96
                    4213   vsscanf_102:
0800247C  0C82 FFFF 4214          cmp.l     #-1,D2
08002480  FFFF      
08002482  671A      4215          beq.s     vsscanf_107
08002484  2F02      4216          move.l    D2,-(A7)
08002486  2F05      4217          move.l    D5,-(A7)
08002488  6100 F8D0 4218          bsr       @vsscanf_scanputback
0800248C  504F      4219          addq.w    #8,A7
0800248E  53AE FFE4 4220          subq.l    #1,-28(A6)
08002492  200C      4221          move.l    A4,D0
08002494  6606      4222          bne.s     vsscanf_109
08002496  2004      4223          move.l    D4,D0
08002498  6000 00E2 4224          bra       vsscanf_15
                    4225   vsscanf_109:
0800249C  6012      4226          bra.s     vsscanf_111
                    4227   vsscanf_107:
0800249E  200C      4228          move.l    A4,D0
080024A0  660E      4229          bne.s     vsscanf_111
080024A2  4A84      4230          tst.l     D4
080024A4  6704      4231          beq.s     vsscanf_113
080024A6  2004      4232          move.l    D4,D0
080024A8  6002      4233          bra.s     vsscanf_114
                    4234   vsscanf_113:
080024AA  70FF      4235          moveq     #-1,D0
                    4236   vsscanf_114:
080024AC  6000 00CE 4237          bra       vsscanf_15
                    4238   vsscanf_111:
080024B0  4AAE FFE0 4239          tst.l     -32(A6)
080024B4  6706      4240          beq.s     vsscanf_115
080024B6  200D      4241          move.l    A5,D0
080024B8  4480      4242          neg.l     D0
080024BA  2A40      4243          move.l    D0,A5
                    4244   vsscanf_115:
080024BC  4A86      4245          tst.l     D6
080024BE  661E      4246          bne.s     vsscanf_117
080024C0  4AAE FFE8 4247          tst.l     -24(A6)
080024C4  6706      4248          beq.s     vsscanf_119
080024C6  2047      4249          move.l    D7,A0
080024C8  208D      4250          move.l    A5,(A0)
080024CA  6010      4251          bra.s     vsscanf_122
                    4252   vsscanf_119:
080024CC  4AAE FFEC 4253          tst.l     -20(A6)
080024D0  6706      4254          beq.s     vsscanf_121
080024D2  2047      4255          move.l    D7,A0
080024D4  308D      4256          move.w    A5,(A0)
080024D6  6004      4257          bra.s     vsscanf_122
                    4258   vsscanf_121:
080024D8  2047      4259          move.l    D7,A0
080024DA  208D      4260          move.l    A5,(A0)
                    4261   vsscanf_122:
080024DC  5284      4262          addq.l    #1,D4
                    4263   vsscanf_117:
080024DE  0C82 FFFF 4264          cmp.l     #-1,D2
080024E2  FFFF      
080024E4  660E      4265          bne.s     vsscanf_123
080024E6  4A84      4266          tst.l     D4
080024E8  6704      4267          beq.s     vsscanf_125
080024EA  2004      4268          move.l    D4,D0
080024EC  6002      4269          bra.s     vsscanf_126
                    4270   vsscanf_125:
080024EE  70FF      4271          moveq     #-1,D0
                    4272   vsscanf_126:
080024F0  6000 008A 4273          bra       vsscanf_15
                    4274   vsscanf_123:
080024F4  6000 0080 4275          bra       vsscanf_139
                    4276   vsscanf_85:
080024F8  0C83 0000 4277          cmp.l     #37,D3
080024FC  0025      
080024FE  6600 0040 4278          bne       vsscanf_127
08002502  2F05      4279          move.l    D5,-(A7)
08002504  4E93      4280          jsr       (A3)
08002506  584F      4281          addq.w    #4,A7
08002508  2400      4282          move.l    D0,D2
0800250A  0C82 FFFF 4283          cmp.l     #-1,D2
0800250E  FFFF      
08002510  660E      4284          bne.s     vsscanf_129
08002512  4A84      4285          tst.l     D4
08002514  6704      4286          beq.s     vsscanf_131
08002516  2004      4287          move.l    D4,D0
08002518  6002      4288          bra.s     vsscanf_132
                    4289   vsscanf_131:
0800251A  70FF      4290          moveq     #-1,D0
                    4291   vsscanf_132:
0800251C  6000 005E 4292          bra       vsscanf_15
                    4293   vsscanf_129:
08002520  52AE FFE4 4294          addq.l    #1,-28(A6)
08002524  B483      4295          cmp.l     D3,D2
08002526  6714      4296          beq.s     vsscanf_133
08002528  2F02      4297          move.l    D2,-(A7)
0800252A  2F05      4298          move.l    D5,-(A7)
0800252C  6100 F82C 4299          bsr       @vsscanf_scanputback
08002530  504F      4300          addq.w    #8,A7
08002532  53AE FFE4 4301          subq.l    #1,-28(A6)
08002536  2004      4302          move.l    D4,D0
08002538  6000 0042 4303          bra       vsscanf_15
                    4304   vsscanf_133:
0800253C  6000 0038 4305          bra       vsscanf_139
                    4306   vsscanf_127:
08002540  2F05      4307          move.l    D5,-(A7)
08002542  4E93      4308          jsr       (A3)
08002544  584F      4309          addq.w    #4,A7
08002546  2400      4310          move.l    D0,D2
08002548  52AE FFE4 4311          addq.l    #1,-28(A6)
0800254C  0C82 FFFF 4312          cmp.l     #-1,D2
08002550  FFFF      
08002552  660C      4313          bne.s     vsscanf_135
08002554  4A84      4314          tst.l     D4
08002556  6704      4315          beq.s     vsscanf_137
08002558  2004      4316          move.l    D4,D0
0800255A  6002      4317          bra.s     vsscanf_138
                    4318   vsscanf_137:
0800255C  70FF      4319          moveq     #-1,D0
                    4320   vsscanf_138:
0800255E  601C      4321          bra.s     vsscanf_15
                    4322   vsscanf_135:
08002560  B483      4323          cmp.l     D3,D2
08002562  6712      4324          beq.s     vsscanf_139
08002564  2F02      4325          move.l    D2,-(A7)
08002566  2F05      4326          move.l    D5,-(A7)
08002568  6100 F7F0 4327          bsr       @vsscanf_scanputback
0800256C  504F      4328          addq.w    #8,A7
0800256E  53AE FFE4 4329          subq.l    #1,-28(A6)
08002572  2004      4330          move.l    D4,D0
08002574  6006      4331          bra.s     vsscanf_15
                    4332   vsscanf_139:
08002576  6000 FA44 4333          bra       vsscanf_3
                    4334   vsscanf_5:
0800257A  2004      4335          move.l    D4,D0
                    4336   vsscanf_15:
0800257C  4CDF 3CFC 4337          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08002580  4E5E      4338          unlk      A6
08002582  4E75      4339          rts
                    4340   @vsprintf_copy:
08002584  4E56 0000 4341          link      A6,#0
08002588  206E 0008 4342          move.l    8(A6),A0
0800258C  4A90      4343          tst.l     (A0)
0800258E  6710      4344          beq.s     @vsprintf_copy_1
08002590  202E 000C 4345          move.l    12(A6),D0
08002594  206E 0008 4346          move.l    8(A6),A0
08002598  2250      4347          move.l    (A0),A1
0800259A  5290      4348          addq.l    #1,(A0)
0800259C  1280      4349          move.b    D0,(A1)
0800259E  600A      4350          bra.s     @vsprintf_copy_2
                    4351   @vsprintf_copy_1:
080025A0  2F2E 000C 4352          move.l    12(A6),-(A7)
080025A4  6100 09F4 4353          bsr       _putch
080025A8  584F      4354          addq.w    #4,A7
                    4355   @vsprintf_copy_2:
080025AA  4E5E      4356          unlk      A6
080025AC  4E75      4357          rts
                    4358   @vsprintf_getval:
080025AE  4E56 0000 4359          link      A6,#0
080025B2  48E7 3000 4360          movem.l   D2/D3,-(A7)
080025B6  242E 0008 4361          move.l    8(A6),D2
080025BA  4283      4362          clr.l     D3
080025BC  2042      4363          move.l    D2,A0
080025BE  2050      4364          move.l    (A0),A0
080025C0  1010      4365          move.b    (A0),D0
080025C2  4880      4366          ext.w     D0
080025C4  48C0      4367          ext.l     D0
080025C6  0C80 0000 4368          cmp.l     #42,D0
080025CA  002A      
080025CC  6612      4369          bne.s     @vsprintf_getval_1
080025CE  206E 000C 4370          move.l    12(A6),A0
080025D2  2250      4371          move.l    (A0),A1
080025D4  5890      4372          addq.l    #4,(A0)
080025D6  2611      4373          move.l    (A1),D3
080025D8  2042      4374          move.l    D2,A0
080025DA  5290      4375          addq.l    #1,(A0)
080025DC  6000 004E 4376          bra       @vsprintf_getval_5
                    4377   @vsprintf_getval_1:
080025E0  2042      4378          move.l    D2,A0
080025E2  2050      4379          move.l    (A0),A0
080025E4  1010      4380          move.b    (A0),D0
080025E6  4880      4381          ext.w     D0
080025E8  48C0      4382          ext.l     D0
080025EA  0C80 0000 4383          cmp.l     #48,D0
080025EE  0030      
080025F0  6D00 003A 4384          blt       @vsprintf_getval_5
080025F4  2042      4385          move.l    D2,A0
080025F6  2050      4386          move.l    (A0),A0
080025F8  1010      4387          move.b    (A0),D0
080025FA  4880      4388          ext.w     D0
080025FC  48C0      4389          ext.l     D0
080025FE  0C80 0000 4390          cmp.l     #57,D0
08002602  0039      
08002604  6E26      4391          bgt.s     @vsprintf_getval_5
08002606  2F03      4392          move.l    D3,-(A7)
08002608  4878 000A 4393          pea       10
0800260C  6100 069E 4394          bsr       LMUL
08002610  2017      4395          move.l    (A7),D0
08002612  504F      4396          addq.w    #8,A7
08002614  2042      4397          move.l    D2,A0
08002616  2250      4398          move.l    (A0),A1
08002618  5290      4399          addq.l    #1,(A0)
0800261A  1211      4400          move.b    (A1),D1
0800261C  4881      4401          ext.w     D1
0800261E  48C1      4402          ext.l     D1
08002620  D081      4403          add.l     D1,D0
08002622  0480 0000 4404          sub.l     #48,D0
08002626  0030      
08002628  2600      4405          move.l    D0,D3
0800262A  60B4      4406          bra       @vsprintf_getval_1
                    4407   @vsprintf_getval_5:
0800262C  2003      4408          move.l    D3,D0
0800262E  4CDF 000C 4409          movem.l   (A7)+,D2/D3
08002632  4E5E      4410          unlk      A6
08002634  4E75      4411          rts
                    4412   _vsprintf:
08002636  4E56 FFCC 4413          link      A6,#-52
0800263A  48E7 3F3C 4414          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
0800263E  45EE 0008 4415          lea       8(A6),A2
08002642  47F9 0800 4416          lea       @vsprintf_copy,A3
08002646  2584      
08002648  49F9 0800 4417          lea       _ultoa,A4
0800264C  2F26      
0800264E  4286      4418          clr.l     D6
                    4419   vsprintf_1:
08002650  206E 000C 4420          move.l    12(A6),A0
08002654  4A10      4421          tst.b     (A0)
08002656  6700 0624 4422          beq       vsprintf_3
0800265A  206E 000C 4423          move.l    12(A6),A0
0800265E  1010      4424          move.b    (A0),D0
08002660  4880      4425          ext.w     D0
08002662  48C0      4426          ext.l     D0
08002664  0C80 0000 4427          cmp.l     #37,D0
08002668  0025      
0800266A  671C      4428          beq.s     vsprintf_4
0800266C  206E 000C 4429          move.l    12(A6),A0
08002670  52AE 000C 4430          addq.l    #1,12(A6)
08002674  1210      4431          move.b    (A0),D1
08002676  4881      4432          ext.w     D1
08002678  48C1      4433          ext.l     D1
0800267A  2F01      4434          move.l    D1,-(A7)
0800267C  2F0A      4435          move.l    A2,-(A7)
0800267E  4E93      4436          jsr       (A3)
08002680  504F      4437          addq.w    #8,A7
08002682  5286      4438          addq.l    #1,D6
08002684  6000 05F2 4439          bra       vsprintf_2
                    4440   vsprintf_4:
08002688  52AE 000C 4441          addq.l    #1,12(A6)
0800268C  422E FFD3 4442          clr.b     -45(A6)
08002690  422E FFD2 4443          clr.b     -46(A6)
08002694  422E FFD0 4444          clr.b     -48(A6)
08002698  422E FFCF 4445          clr.b     -49(A6)
0800269C  422E FFCE 4446          clr.b     -50(A6)
080026A0  422E FFCD 4447          clr.b     -51(A6)
080026A4  42AE FFFC 4448          clr.l     -4(A6)
080026A8  7AFF      4449          moveq     #-1,D5
080026AA  41EE FFDC 4450          lea       -36(A6),A0
080026AE  2608      4451          move.l    A0,D3
080026B0  2408      4452          move.l    A0,D2
                    4453   vsprintf_6:
080026B2  206E 000C 4454          move.l    12(A6),A0
080026B6  1010      4455          move.b    (A0),D0
080026B8  4880      4456          ext.w     D0
080026BA  48C0      4457          ext.l     D0
080026BC  0C80 0000 4458          cmp.l     #43,D0
080026C0  002B      
080026C2  6730      4459          beq.s     vsprintf_12
080026C4  6E18      4460          bgt.s     vsprintf_15
080026C6  0C80 0000 4461          cmp.l     #35,D0
080026CA  0023      
080026CC  6700 003E 4462          beq       vsprintf_14
080026D0  6E00 0046 4463          bgt       vsprintf_9
080026D4  0C80 0000 4464          cmp.l     #32,D0
080026D8  0020      
080026DA  6724      4465          beq.s     vsprintf_13
080026DC  603A      4466          bra.s     vsprintf_9
                    4467   vsprintf_15:
080026DE  0C80 0000 4468          cmp.l     #45,D0
080026E2  002D      
080026E4  6702      4469          beq.s     vsprintf_11
080026E6  6030      4470          bra.s     vsprintf_9
                    4471   vsprintf_11:
080026E8  1D7C 0001 4472          move.b    #1,-51(A6)
080026EC  FFCD      
080026EE  52AE 000C 4473          addq.l    #1,12(A6)
080026F2  6026      4474          bra.s     vsprintf_7
                    4475   vsprintf_12:
080026F4  1D7C 0001 4476          move.b    #1,-50(A6)
080026F8  FFCE      
080026FA  52AE 000C 4477          addq.l    #1,12(A6)
080026FE  601A      4478          bra.s     vsprintf_7
                    4479   vsprintf_13:
08002700  1D7C 0001 4480          move.b    #1,-49(A6)
08002704  FFCF      
08002706  52AE 000C 4481          addq.l    #1,12(A6)
0800270A  600E      4482          bra.s     vsprintf_7
                    4483   vsprintf_14:
0800270C  1D7C 0001 4484          move.b    #1,-48(A6)
08002710  FFD0      
08002712  52AE 000C 4485          addq.l    #1,12(A6)
08002716  6002      4486          bra.s     vsprintf_7
                    4487   vsprintf_9:
08002718  6002      4488          bra.s     vsprintf_8
                    4489   vsprintf_7:
0800271A  6096      4490          bra       vsprintf_6
                    4491   vsprintf_8:
0800271C  206E 000C 4492          move.l    12(A6),A0
08002720  1010      4493          move.b    (A0),D0
08002722  4880      4494          ext.w     D0
08002724  48C0      4495          ext.l     D0
08002726  0C80 0000 4496          cmp.l     #48,D0
0800272A  0030      
0800272C  660A      4497          bne.s     vsprintf_16
0800272E  52AE 000C 4498          addq.l    #1,12(A6)
08002732  1D7C 0001 4499          move.b    #1,-46(A6)
08002736  FFD2      
                    4500   vsprintf_16:
08002738  486E 0010 4501          pea       16(A6)
0800273C  486E 000C 4502          pea       12(A6)
08002740  6100 FE6C 4503          bsr       @vsprintf_getval
08002744  504F      4504          addq.w    #8,A7
08002746  2A40      4505          move.l    D0,A5
08002748  206E 000C 4506          move.l    12(A6),A0
0800274C  1010      4507          move.b    (A0),D0
0800274E  4880      4508          ext.w     D0
08002750  48C0      4509          ext.l     D0
08002752  0C80 0000 4510          cmp.l     #46,D0
08002756  002E      
08002758  6614      4511          bne.s     vsprintf_18
0800275A  52AE 000C 4512          addq.l    #1,12(A6)
0800275E  486E 0010 4513          pea       16(A6)
08002762  486E 000C 4514          pea       12(A6)
08002766  6100 FE46 4515          bsr       @vsprintf_getval
0800276A  504F      4516          addq.w    #8,A7
0800276C  2A00      4517          move.l    D0,D5
                    4518   vsprintf_18:
0800276E  206E 000C 4519          move.l    12(A6),A0
08002772  1010      4520          move.b    (A0),D0
08002774  4880      4521          ext.w     D0
08002776  48C0      4522          ext.l     D0
08002778  0C80 0000 4523          cmp.l     #108,D0
0800277C  006C      
0800277E  660A      4524          bne.s     vsprintf_20
08002780  52AE 000C 4525          addq.l    #1,12(A6)
08002784  1D7C 0001 4526          move.b    #1,-45(A6)
08002788  FFD3      
                    4527   vsprintf_20:
0800278A  206E 000C 4528          move.l    12(A6),A0
0800278E  1010      4529          move.b    (A0),D0
08002790  4880      4530          ext.w     D0
08002792  48C0      4531          ext.l     D0
08002794  0C80 0000 4532          cmp.l     #111,D0
08002798  006F      
0800279A  6700 00D4 4533          beq       vsprintf_27
0800279E  6E34      4534          bgt.s     vsprintf_33
080027A0  0C80 0000 4535          cmp.l     #100,D0
080027A4  0064      
080027A6  6700 0054 4536          beq       vsprintf_24
080027AA  6E1C      4537          bgt.s     vsprintf_34
080027AC  0C80 0000 4538          cmp.l     #99,D0
080027B0  0063      
080027B2  6700 012C 4539          beq       vsprintf_30
080027B6  6E00 016A 4540          bgt       vsprintf_22
080027BA  0C80 0000 4541          cmp.l     #88,D0
080027BE  0058      
080027C0  6700 00E6 4542          beq       vsprintf_28
080027C4  6000 015C 4543          bra       vsprintf_22
                    4544   vsprintf_34:
080027C8  0C80 0000 4545          cmp.l     #105,D0
080027CC  0069      
080027CE  672C      4546          beq.s     vsprintf_24
080027D0  6000 0150 4547          bra       vsprintf_22
                    4548   vsprintf_33:
080027D4  0C80 0000 4549          cmp.l     #117,D0
080027D8  0075      
080027DA  6700 005C 4550          beq       vsprintf_26
080027DE  6E0E      4551          bgt.s     vsprintf_35
080027E0  0C80 0000 4552          cmp.l     #115,D0
080027E4  0073      
080027E6  6700 011C 4553          beq       vsprintf_31
080027EA  6000 0136 4554          bra       vsprintf_22
                    4555   vsprintf_35:
080027EE  0C80 0000 4556          cmp.l     #120,D0
080027F2  0078      
080027F4  6700 00B2 4557          beq       vsprintf_28
080027F8  6000 0128 4558          bra       vsprintf_22
                    4559   vsprintf_24:
080027FC  4A2E FFD3 4560          tst.b     -45(A6)
08002800  671A      4561          beq.s     vsprintf_36
08002802  4878 000A 4562          pea       10
08002806  2F03      4563          move.l    D3,-(A7)
08002808  206E 0010 4564          move.l    16(A6),A0
0800280C  58AE 0010 4565          addq.l    #4,16(A6)
08002810  2F10      4566          move.l    (A0),-(A7)
08002812  6100 068E 4567          bsr       _ltoa
08002816  DEFC 000C 4568          add.w     #12,A7
0800281A  6018      4569          bra.s     vsprintf_37
                    4570   vsprintf_36:
0800281C  4878 000A 4571          pea       10
08002820  2F03      4572          move.l    D3,-(A7)
08002822  206E 0010 4573          move.l    16(A6),A0
08002826  58AE 0010 4574          addq.l    #4,16(A6)
0800282A  2F10      4575          move.l    (A0),-(A7)
0800282C  6100 0674 4576          bsr       _ltoa
08002830  DEFC 000C 4577          add.w     #12,A7
                    4578   vsprintf_37:
08002834  6000 00FA 4579          bra       vsprintf_23
                    4580   vsprintf_26:
08002838  4A2E FFD3 4581          tst.b     -45(A6)
0800283C  6718      4582          beq.s     vsprintf_38
0800283E  4878 000A 4583          pea       10
08002842  2F03      4584          move.l    D3,-(A7)
08002844  206E 0010 4585          move.l    16(A6),A0
08002848  58AE 0010 4586          addq.l    #4,16(A6)
0800284C  2F10      4587          move.l    (A0),-(A7)
0800284E  4E94      4588          jsr       (A4)
08002850  DEFC 000C 4589          add.w     #12,A7
08002854  6016      4590          bra.s     vsprintf_39
                    4591   vsprintf_38:
08002856  4878 000A 4592          pea       10
0800285A  2F03      4593          move.l    D3,-(A7)
0800285C  206E 0010 4594          move.l    16(A6),A0
08002860  58AE 0010 4595          addq.l    #4,16(A6)
08002864  2F10      4596          move.l    (A0),-(A7)
08002866  4E94      4597          jsr       (A4)
08002868  DEFC 000C 4598          add.w     #12,A7
                    4599   vsprintf_39:
0800286C  6000 00C2 4600          bra       vsprintf_23
                    4601   vsprintf_27:
08002870  4A2E FFD3 4602          tst.b     -45(A6)
08002874  6718      4603          beq.s     vsprintf_40
08002876  4878 0008 4604          pea       8
0800287A  2F03      4605          move.l    D3,-(A7)
0800287C  206E 0010 4606          move.l    16(A6),A0
08002880  58AE 0010 4607          addq.l    #4,16(A6)
08002884  2F10      4608          move.l    (A0),-(A7)
08002886  4E94      4609          jsr       (A4)
08002888  DEFC 000C 4610          add.w     #12,A7
0800288C  6016      4611          bra.s     vsprintf_41
                    4612   vsprintf_40:
0800288E  4878 0008 4613          pea       8
08002892  2F03      4614          move.l    D3,-(A7)
08002894  206E 0010 4615          move.l    16(A6),A0
08002898  58AE 0010 4616          addq.l    #4,16(A6)
0800289C  2F10      4617          move.l    (A0),-(A7)
0800289E  4E94      4618          jsr       (A4)
080028A0  DEFC 000C 4619          add.w     #12,A7
                    4620   vsprintf_41:
080028A4  6000 008A 4621          bra       vsprintf_23
                    4622   vsprintf_28:
080028A8  4A2E FFD3 4623          tst.b     -45(A6)
080028AC  6718      4624          beq.s     vsprintf_42
080028AE  4878 0010 4625          pea       16
080028B2  2F03      4626          move.l    D3,-(A7)
080028B4  206E 0010 4627          move.l    16(A6),A0
080028B8  58AE 0010 4628          addq.l    #4,16(A6)
080028BC  2F10      4629          move.l    (A0),-(A7)
080028BE  4E94      4630          jsr       (A4)
080028C0  DEFC 000C 4631          add.w     #12,A7
080028C4  6016      4632          bra.s     vsprintf_43
                    4633   vsprintf_42:
080028C6  4878 0010 4634          pea       16
080028CA  2F03      4635          move.l    D3,-(A7)
080028CC  206E 0010 4636          move.l    16(A6),A0
080028D0  58AE 0010 4637          addq.l    #4,16(A6)
080028D4  2F10      4638          move.l    (A0),-(A7)
080028D6  4E94      4639          jsr       (A4)
080028D8  DEFC 000C 4640          add.w     #12,A7
                    4641   vsprintf_43:
080028DC  6000 0052 4642          bra       vsprintf_23
                    4643   vsprintf_30:
080028E0  206E 0010 4644          move.l    16(A6),A0
080028E4  58AE 0010 4645          addq.l    #4,16(A6)
080028E8  2010      4646          move.l    (A0),D0
080028EA  2042      4647          move.l    D2,A0
080028EC  5282      4648          addq.l    #1,D2
080028EE  1080      4649          move.b    D0,(A0)
080028F0  2042      4650          move.l    D2,A0
080028F2  4210      4651          clr.b     (A0)
080028F4  200D      4652          move.l    A5,D0
080028F6  6704      4653          beq.s     vsprintf_44
080028F8  200D      4654          move.l    A5,D0
080028FA  6002      4655          bra.s     vsprintf_45
                    4656   vsprintf_44:
080028FC  7001      4657          moveq     #1,D0
                    4658   vsprintf_45:
080028FE  2A00      4659          move.l    D0,D5
08002900  6000 002E 4660          bra       vsprintf_23
                    4661   vsprintf_31:
08002904  206E 0010 4662          move.l    16(A6),A0
08002908  58AE 0010 4663          addq.l    #4,16(A6)
0800290C  2610      4664          move.l    (A0),D3
0800290E  0C85 FFFF 4665          cmp.l     #-1,D5
08002912  FFFF      
08002914  660A      4666          bne.s     vsprintf_46
08002916  2F03      4667          move.l    D3,-(A7)
08002918  6100 066E 4668          bsr       _strlen
0800291C  584F      4669          addq.w    #4,A7
0800291E  2A00      4670          move.l    D0,D5
                    4671   vsprintf_46:
08002920  600E      4672          bra.s     vsprintf_23
                    4673   vsprintf_22:
08002922  206E 000C 4674          move.l    12(A6),A0
08002926  2242      4675          move.l    D2,A1
08002928  5282      4676          addq.l    #1,D2
0800292A  1290      4677          move.b    (A0),(A1)
0800292C  2042      4678          move.l    D2,A0
0800292E  4210      4679          clr.b     (A0)
                    4680   vsprintf_23:
08002930  2F03      4681          move.l    D3,-(A7)
08002932  6100 0654 4682          bsr       _strlen
08002936  584F      4683          addq.w    #4,A7
08002938  1800      4684          move.b    D0,D4
0800293A  206E 000C 4685          move.l    12(A6),A0
0800293E  1010      4686          move.b    (A0),D0
08002940  4880      4687          ext.w     D0
08002942  48C0      4688          ext.l     D0
08002944  0C80 0000 4689          cmp.l     #115,D0
08002948  0073      
0800294A  6618      4690          bne.s     vsprintf_48
0800294C  0C85 0000 4691          cmp.l     #0,D5
08002950  0000      
08002952  6D10      4692          blt.s     vsprintf_48
08002954  4884      4693          ext.w     D4
08002956  48C4      4694          ext.l     D4
08002958  B885      4695          cmp.l     D5,D4
0800295A  6F04      4696          ble.s     vsprintf_50
0800295C  1005      4697          move.b    D5,D0
0800295E  6002      4698          bra.s     vsprintf_51
                    4699   vsprintf_50:
08002960  1004      4700          move.b    D4,D0
                    4701   vsprintf_51:
08002962  1800      4702          move.b    D0,D4
                    4703   vsprintf_48:
08002964  206E 000C 4704          move.l    12(A6),A0
08002968  1010      4705          move.b    (A0),D0
0800296A  4880      4706          ext.w     D0
0800296C  48C0      4707          ext.l     D0
0800296E  0C80 0000 4708          cmp.l     #88,D0
08002972  0058      
08002974  6600 0026 4709          bne       vsprintf_56
08002978  41EE FFDC 4710          lea       -36(A6),A0
0800297C  2408      4711          move.l    A0,D2
                    4712   vsprintf_54:
0800297E  2042      4713          move.l    D2,A0
08002980  4A10      4714          tst.b     (A0)
08002982  6718      4715          beq.s     vsprintf_56
08002984  2042      4716          move.l    D2,A0
08002986  1210      4717          move.b    (A0),D1
08002988  4881      4718          ext.w     D1
0800298A  48C1      4719          ext.l     D1
0800298C  2F01      4720          move.l    D1,-(A7)
0800298E  6100 0460 4721          bsr       _toupper
08002992  584F      4722          addq.w    #4,A7
08002994  2042      4723          move.l    D2,A0
08002996  1080      4724          move.b    D0,(A0)
08002998  5282      4725          addq.l    #1,D2
0800299A  60E2      4726          bra       vsprintf_54
                    4727   vsprintf_56:
0800299C  7E00      4728          moveq     #0,D7
0800299E  41EE FFD4 4729          lea       -44(A6),A0
080029A2  2408      4730          move.l    A0,D2
080029A4  206E 000C 4731          move.l    12(A6),A0
080029A8  1010      4732          move.b    (A0),D0
080029AA  4880      4733          ext.w     D0
080029AC  48C0      4734          ext.l     D0
080029AE  0C80 0000 4735          cmp.l     #100,D0
080029B2  0064      
080029B4  6714      4736          beq.s     vsprintf_59
080029B6  206E 000C 4737          move.l    12(A6),A0
080029BA  1010      4738          move.b    (A0),D0
080029BC  4880      4739          ext.w     D0
080029BE  48C0      4740          ext.l     D0
080029C0  0C80 0000 4741          cmp.l     #105,D0
080029C4  0069      
080029C6  6600 0076 4742          bne       vsprintf_65
                    4743   vsprintf_59:
080029CA  4A2E FFCE 4744          tst.b     -50(A6)
080029CE  6612      4745          bne.s     vsprintf_62
080029D0  2043      4746          move.l    D3,A0
080029D2  1010      4747          move.b    (A0),D0
080029D4  4880      4748          ext.w     D0
080029D6  48C0      4749          ext.l     D0
080029D8  0C80 0000 4750          cmp.l     #45,D0
080029DC  002D      
080029DE  6600 002E 4751          bne       vsprintf_60
                    4752   vsprintf_62:
080029E2  2043      4753          move.l    D3,A0
080029E4  1010      4754          move.b    (A0),D0
080029E6  4880      4755          ext.w     D0
080029E8  48C0      4756          ext.l     D0
080029EA  0C80 0000 4757          cmp.l     #45,D0
080029EE  002D      
080029F0  660E      4758          bne.s     vsprintf_63
080029F2  2043      4759          move.l    D3,A0
080029F4  5283      4760          addq.l    #1,D3
080029F6  2242      4761          move.l    D2,A1
080029F8  5282      4762          addq.l    #1,D2
080029FA  1290      4763          move.b    (A0),(A1)
080029FC  5304      4764          subq.b    #1,D4
080029FE  6008      4765          bra.s     vsprintf_64
                    4766   vsprintf_63:
08002A00  2042      4767          move.l    D2,A0
08002A02  5282      4768          addq.l    #1,D2
08002A04  10BC 002B 4769          move.b    #43,(A0)
                    4770   vsprintf_64:
08002A08  5287      4771          addq.l    #1,D7
08002A0A  6000 0032 4772          bra       vsprintf_65
                    4773   vsprintf_60:
08002A0E  4A2E FFCF 4774          tst.b     -49(A6)
08002A12  6700 002A 4775          beq       vsprintf_65
08002A16  2043      4776          move.l    D3,A0
08002A18  1010      4777          move.b    (A0),D0
08002A1A  4880      4778          ext.w     D0
08002A1C  48C0      4779          ext.l     D0
08002A1E  0C80 0000 4780          cmp.l     #45,D0
08002A22  002D      
08002A24  660E      4781          bne.s     vsprintf_67
08002A26  2043      4782          move.l    D3,A0
08002A28  5283      4783          addq.l    #1,D3
08002A2A  2242      4784          move.l    D2,A1
08002A2C  5282      4785          addq.l    #1,D2
08002A2E  1290      4786          move.b    (A0),(A1)
08002A30  5304      4787          subq.b    #1,D4
08002A32  6008      4788          bra.s     vsprintf_68
                    4789   vsprintf_67:
08002A34  2042      4790          move.l    D2,A0
08002A36  5282      4791          addq.l    #1,D2
08002A38  10BC 0020 4792          move.b    #32,(A0)
                    4793   vsprintf_68:
08002A3C  5287      4794          addq.l    #1,D7
                    4795   vsprintf_65:
08002A3E  4A2E FFD0 4796          tst.b     -48(A6)
08002A42  6700 0066 4797          beq       vsprintf_77
08002A46  206E 000C 4798          move.l    12(A6),A0
08002A4A  1010      4799          move.b    (A0),D0
08002A4C  4880      4800          ext.w     D0
08002A4E  48C0      4801          ext.l     D0
08002A50  0C80 0000 4802          cmp.l     #111,D0
08002A54  006F      
08002A56  671A      4803          beq.s     vsprintf_73
08002A58  6E0C      4804          bgt.s     vsprintf_76
08002A5A  0C80 0000 4805          cmp.l     #88,D0
08002A5E  0058      
08002A60  6710      4806          beq.s     vsprintf_73
08002A62  6000 0046 4807          bra       vsprintf_77
                    4808   vsprintf_76:
08002A66  0C80 0000 4809          cmp.l     #120,D0
08002A6A  0078      
08002A6C  6704      4810          beq.s     vsprintf_73
08002A6E  6000 003A 4811          bra       vsprintf_77
                    4812   vsprintf_73:
08002A72  2042      4813          move.l    D2,A0
08002A74  5282      4814          addq.l    #1,D2
08002A76  10BC 0030 4815          move.b    #48,(A0)
08002A7A  5287      4816          addq.l    #1,D7
08002A7C  206E 000C 4817          move.l    12(A6),A0
08002A80  1010      4818          move.b    (A0),D0
08002A82  4880      4819          ext.w     D0
08002A84  48C0      4820          ext.l     D0
08002A86  0C80 0000 4821          cmp.l     #120,D0
08002A8A  0078      
08002A8C  6712      4822          beq.s     vsprintf_79
08002A8E  206E 000C 4823          move.l    12(A6),A0
08002A92  1010      4824          move.b    (A0),D0
08002A94  4880      4825          ext.w     D0
08002A96  48C0      4826          ext.l     D0
08002A98  0C80 0000 4827          cmp.l     #88,D0
08002A9C  0058      
08002A9E  660A      4828          bne.s     vsprintf_77
                    4829   vsprintf_79:
08002AA0  2042      4830          move.l    D2,A0
08002AA2  5282      4831          addq.l    #1,D2
08002AA4  10BC 0078 4832          move.b    #120,(A0)
08002AA8  5287      4833          addq.l    #1,D7
                    4834   vsprintf_77:
08002AAA  2042      4835          move.l    D2,A0
08002AAC  4210      4836          clr.b     (A0)
08002AAE  206E 000C 4837          move.l    12(A6),A0
08002AB2  1010      4838          move.b    (A0),D0
08002AB4  4880      4839          ext.w     D0
08002AB6  48C0      4840          ext.l     D0
08002AB8  0C80 0000 4841          cmp.l     #105,D0
08002ABC  0069      
08002ABE  6700 0076 4842          beq       vsprintf_82
08002AC2  6E42      4843          bgt.s     vsprintf_93
08002AC4  0C80 0000 4844          cmp.l     #99,D0
08002AC8  0063      
08002ACA  6700 0084 4845          beq       vsprintf_96
08002ACE  6E1C      4846          bgt.s     vsprintf_94
08002AD0  0C80 0000 4847          cmp.l     #88,D0
08002AD4  0058      
08002AD6  6700 005E 4848          beq       vsprintf_82
08002ADA  6E00 0184 4849          bgt       vsprintf_80
08002ADE  0C80 0000 4850          cmp.l     #69,D0
08002AE2  0045      
08002AE4  6700 0050 4851          beq       vsprintf_82
08002AE8  6000 0176 4852          bra       vsprintf_80
                    4853   vsprintf_94:
08002AEC  0C80 0000 4854          cmp.l     #101,D0
08002AF0  0065      
08002AF2  6700 0042 4855          beq       vsprintf_82
08002AF6  6E00 0168 4856          bgt       vsprintf_80
08002AFA  0C80 0000 4857          cmp.l     #100,D0
08002AFE  0064      
08002B00  6734      4858          beq.s     vsprintf_82
08002B02  6000 015C 4859          bra       vsprintf_80
                    4860   vsprintf_93:
08002B06  0C80 0000 4861          cmp.l     #117,D0
08002B0A  0075      
08002B0C  6728      4862          beq.s     vsprintf_82
08002B0E  6E1A      4863          bgt.s     vsprintf_95
08002B10  0C80 0000 4864          cmp.l     #115,D0
08002B14  0073      
08002B16  6700 0038 4865          beq       vsprintf_96
08002B1A  6E00 0144 4866          bgt       vsprintf_80
08002B1E  0C80 0000 4867          cmp.l     #111,D0
08002B22  006F      
08002B24  6710      4868          beq.s     vsprintf_82
08002B26  6000 0138 4869          bra       vsprintf_80
                    4870   vsprintf_95:
08002B2A  0C80 0000 4871          cmp.l     #120,D0
08002B2E  0078      
08002B30  6704      4872          beq.s     vsprintf_82
08002B32  6000 012C 4873          bra       vsprintf_80
                    4874   vsprintf_82:
08002B36  4A2E FFD2 4875          tst.b     -46(A6)
08002B3A  6714      4876          beq.s     vsprintf_96
08002B3C  4A2E FFCD 4877          tst.b     -51(A6)
08002B40  660E      4878          bne.s     vsprintf_96
08002B42  200D      4879          move.l    A5,D0
08002B44  9087      4880          sub.l     D7,D0
08002B46  4884      4881          ext.w     D4
08002B48  48C4      4882          ext.l     D4
08002B4A  9084      4883          sub.l     D4,D0
08002B4C  2D40 FFFC 4884          move.l    D0,-4(A6)
                    4885   vsprintf_96:
08002B50  202E FFFC 4886          move.l    -4(A6),D0
08002B54  0C80 0000 4887          cmp.l     #0,D0
08002B58  0000      
08002B5A  6C04      4888          bge.s     vsprintf_98
08002B5C  42AE FFFC 4889          clr.l     -4(A6)
                    4890   vsprintf_98:
08002B60  4A2E FFCD 4891          tst.b     -51(A6)
08002B64  6600 0030 4892          bne       vsprintf_104
08002B68  4884      4893          ext.w     D4
08002B6A  48C4      4894          ext.l     D4
08002B6C  2004      4895          move.l    D4,D0
08002B6E  D0AE FFFC 4896          add.l     -4(A6),D0
08002B72  D087      4897          add.l     D7,D0
08002B74  1D40 FFD1 4898          move.b    D0,-47(A6)
                    4899   vsprintf_102:
08002B78  102E FFD1 4900          move.b    -47(A6),D0
08002B7C  4880      4901          ext.w     D0
08002B7E  48C0      4902          ext.l     D0
08002B80  220D      4903          move.l    A5,D1
08002B82  534D      4904          subq.w    #1,A5
08002B84  B081      4905          cmp.l     D1,D0
08002B86  6C0E      4906          bge.s     vsprintf_104
08002B88  4878 0020 4907          pea       32
08002B8C  2F0A      4908          move.l    A2,-(A7)
08002B8E  4E93      4909          jsr       (A3)
08002B90  504F      4910          addq.w    #8,A7
08002B92  5286      4911          addq.l    #1,D6
08002B94  60E2      4912          bra       vsprintf_102
                    4913   vsprintf_104:
08002B96  41EE FFD4 4914          lea       -44(A6),A0
08002B9A  2408      4915          move.l    A0,D2
                    4916   vsprintf_105:
08002B9C  2042      4917          move.l    D2,A0
08002B9E  4A10      4918          tst.b     (A0)
08002BA0  6716      4919          beq.s     vsprintf_107
08002BA2  2042      4920          move.l    D2,A0
08002BA4  5282      4921          addq.l    #1,D2
08002BA6  1210      4922          move.b    (A0),D1
08002BA8  4881      4923          ext.w     D1
08002BAA  48C1      4924          ext.l     D1
08002BAC  2F01      4925          move.l    D1,-(A7)
08002BAE  2F0A      4926          move.l    A2,-(A7)
08002BB0  4E93      4927          jsr       (A3)
08002BB2  504F      4928          addq.w    #8,A7
08002BB4  5286      4929          addq.l    #1,D6
08002BB6  60E4      4930          bra       vsprintf_105
                    4931   vsprintf_107:
08002BB8  202E FFFC 4932          move.l    -4(A6),D0
08002BBC  1D40 FFD1 4933          move.b    D0,-47(A6)
                    4934   vsprintf_108:
08002BC0  102E FFD1 4935          move.b    -47(A6),D0
08002BC4  532E FFD1 4936          subq.b    #1,-47(A6)
08002BC8  4A00      4937          tst.b     D0
08002BCA  670E      4938          beq.s     vsprintf_110
08002BCC  4878 0030 4939          pea       48
08002BD0  2F0A      4940          move.l    A2,-(A7)
08002BD2  4E93      4941          jsr       (A3)
08002BD4  504F      4942          addq.w    #8,A7
08002BD6  5286      4943          addq.l    #1,D6
08002BD8  60E6      4944          bra       vsprintf_108
                    4945   vsprintf_110:
08002BDA  2043      4946          move.l    D3,A0
08002BDC  4A10      4947          tst.b     (A0)
08002BDE  6700 0048 4948          beq       vsprintf_113
08002BE2  206E 000C 4949          move.l    12(A6),A0
08002BE6  1010      4950          move.b    (A0),D0
08002BE8  4880      4951          ext.w     D0
08002BEA  48C0      4952          ext.l     D0
08002BEC  0C80 0000 4953          cmp.l     #115,D0
08002BF0  0073      
08002BF2  670C      4954          beq.s     vsprintf_116
08002BF4  6E18      4955          bgt.s     vsprintf_119
08002BF6  0C80 0000 4956          cmp.l     #99,D0
08002BFA  0063      
08002BFC  6702      4957          beq.s     vsprintf_116
08002BFE  600E      4958          bra.s     vsprintf_119
                    4959   vsprintf_116:
08002C00  2005      4960          move.l    D5,D0
08002C02  5385      4961          subq.l    #1,D5
08002C04  0C80 0000 4962          cmp.l     #0,D0
08002C08  0000      
08002C0A  6E02      4963          bgt.s     vsprintf_119
08002C0C  6016      4964          bra.s     vsprintf_115
                    4965   vsprintf_119:
08002C0E  2043      4966          move.l    D3,A0
08002C10  5283      4967          addq.l    #1,D3
08002C12  1210      4968          move.b    (A0),D1
08002C14  4881      4969          ext.w     D1
08002C16  48C1      4970          ext.l     D1
08002C18  2F01      4971          move.l    D1,-(A7)
08002C1A  2F0A      4972          move.l    A2,-(A7)
08002C1C  4E93      4973          jsr       (A3)
08002C1E  504F      4974          addq.w    #8,A7
08002C20  5286      4975          addq.l    #1,D6
08002C22  6002      4976          bra.s     vsprintf_112
                    4977   vsprintf_115:
08002C24  6002      4978          bra.s     vsprintf_113
                    4979   vsprintf_112:
08002C26  60B2      4980          bra       vsprintf_110
                    4981   vsprintf_113:
08002C28  4A2E FFCD 4982          tst.b     -51(A6)
08002C2C  6700 0030 4983          beq       vsprintf_125
08002C30  4884      4984          ext.w     D4
08002C32  48C4      4985          ext.l     D4
08002C34  2004      4986          move.l    D4,D0
08002C36  D0AE FFFC 4987          add.l     -4(A6),D0
08002C3A  D087      4988          add.l     D7,D0
08002C3C  1D40 FFD1 4989          move.b    D0,-47(A6)
                    4990   vsprintf_123:
08002C40  102E FFD1 4991          move.b    -47(A6),D0
08002C44  4880      4992          ext.w     D0
08002C46  48C0      4993          ext.l     D0
08002C48  220D      4994          move.l    A5,D1
08002C4A  534D      4995          subq.w    #1,A5
08002C4C  B081      4996          cmp.l     D1,D0
08002C4E  6C0E      4997          bge.s     vsprintf_125
08002C50  4878 0020 4998          pea       32
08002C54  2F0A      4999          move.l    A2,-(A7)
08002C56  4E93      5000          jsr       (A3)
08002C58  504F      5001          addq.w    #8,A7
08002C5A  5386      5002          subq.l    #1,D6
08002C5C  60E2      5003          bra       vsprintf_123
                    5004   vsprintf_125:
08002C5E  6014      5005          bra.s     vsprintf_81
                    5006   vsprintf_80:
08002C60  206E 000C 5007          move.l    12(A6),A0
08002C64  1210      5008          move.b    (A0),D1
08002C66  4881      5009          ext.w     D1
08002C68  48C1      5010          ext.l     D1
08002C6A  2F01      5011          move.l    D1,-(A7)
08002C6C  2F0A      5012          move.l    A2,-(A7)
08002C6E  4E93      5013          jsr       (A3)
08002C70  504F      5014          addq.w    #8,A7
08002C72  5286      5015          addq.l    #1,D6
                    5016   vsprintf_81:
08002C74  52AE 000C 5017          addq.l    #1,12(A6)
                    5018   vsprintf_2:
08002C78  6000 F9D6 5019          bra       vsprintf_1
                    5020   vsprintf_3:
08002C7C  4A92      5021          tst.l     (A2)
08002C7E  6710      5022          beq.s     vsprintf_126
08002C80  4201      5023          clr.b     D1
08002C82  C2BC 0000 5024          and.l     #255,D1
08002C86  00FF      
08002C88  2F01      5025          move.l    D1,-(A7)
08002C8A  2F0A      5026          move.l    A2,-(A7)
08002C8C  4E93      5027          jsr       (A3)
08002C8E  504F      5028          addq.w    #8,A7
                    5029   vsprintf_126:
08002C90  2006      5030          move.l    D6,D0
08002C92  4CDF 3CFC 5031          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08002C96  4E5E      5032          unlk      A6
08002C98  4E75      5033          rts
                    5034   ULMUL:
08002C9A  4E56 0000 5035          link    A6,#0
08002C9E  48E7 C000 5036          movem.l D0/D1,-(A7)
08002CA2  222E 0008 5037          move.l  8(A6),D1
08002CA6  202E 000C 5038          move.l  12(A6),D0
08002CAA  602C      5039          bra.s   lmul_3
                    5040   LMUL:
08002CAC  4E56 0000 5041          link    A6,#0
08002CB0  48E7 C000 5042          movem.l D0/D1,-(A7)
08002CB4  222E 0008 5043          move.l  8(A6),D1
08002CB8  202E 000C 5044          move.l  12(A6),D0
08002CBC  4A80      5045          tst.l   D0
08002CBE  6A0A      5046          bpl.s   lmul_1
08002CC0  4480      5047          neg.l   D0
08002CC2  4A81      5048          tst.l   D1
08002CC4  6A0A      5049          bpl.s   lmul_2
08002CC6  4481      5050          neg.l   D1
08002CC8  600E      5051          bra.s   lmul_3
                    5052   lmul_1:
08002CCA  4A81      5053          tst.l   D1
08002CCC  6A0A      5054          bpl.s   lmul_3
08002CCE  4481      5055          neg.l   D1
                    5056   lmul_2:
08002CD0  6114      5057          bsr.s   domul
08002CD2  4481      5058          neg.l   D1
08002CD4  4080      5059          negx.l  D0
08002CD6  6002      5060          bra.s   lmul_4
                    5061   lmul_3:
08002CD8  610C      5062          bsr.s   domul
                    5063   lmul_4:
08002CDA  2D41 0008 5064          move.l  D1,8(A6)
08002CDE  4CDF 0003 5065          movem.l (A7)+,D0/D1
08002CE2  4E5E      5066          unlk    A6
08002CE4  4E75      5067          rts
                    5068   domul:
08002CE6  0C81 0000 5069          cmpi.l  #$FFFF,D1
08002CEA  FFFF      
08002CEC  620C      5070          bhi.s   domul_1
08002CEE  0C80 0000 5071          cmpi.l  #$FFFF,D0
08002CF2  FFFF      
08002CF4  620E      5072          bhi.s   domul_2
08002CF6  C2C0      5073          mulu    D0,D1
08002CF8  4E75      5074          rts
                    5075   domul_1:
08002CFA  0C80 0000 5076          cmpi.l  #$FFFF,D0
08002CFE  FFFF      
08002D00  6218      5077          bhi.s   domul_4
08002D02  6002      5078          bra.s   domul_3
                    5079   domul_2
08002D04  C141      5080          exg     D0,D1
                    5081   domul_3:
08002D06  2F02      5082          move.l  D2,-(A7)
08002D08  2401      5083          move.l  D1,D2
08002D0A  4842      5084          swap    D2
08002D0C  C2C0      5085          mulu    D0,D1
08002D0E  C4C0      5086          mulu    D0,D2
08002D10  4842      5087          swap    D2
08002D12  4242      5088          clr.w   D2
08002D14  D282      5089          add.l   D2,D1
08002D16  241F      5090          move.l  (A7)+,D2
08002D18  4E75      5091          rts
                    5092   domul_4:
08002D1A  48E7 3000 5093          movem.l D2/D3,-(A7)
08002D1E  2401      5094          move.l  D1,D2
08002D20  2601      5095          move.l  D1,D3
08002D22  C2C0      5096          mulu    D0,D1
08002D24  4842      5097          swap    D2
08002D26  C4C0      5098          mulu    D0,D2
08002D28  4840      5099          swap    D0
08002D2A  C6C0      5100          mulu    D0,D3
08002D2C  D483      5101          add.l   D3,D2
08002D2E  4842      5102          swap    D2
08002D30  4242      5103          clr.w   D2
08002D32  D282      5104          add.l   D2,D1
08002D34  4CDF 000C 5105          movem.l (A7)+,D2/D3
08002D38  4E75      5106          rts
                    5107   _gets:
08002D3A  4E56 0000 5108          link      A6,#0
08002D3E  48E7 3820 5109          movem.l   D2/D3/D4/A2,-(A7)
08002D42  45F9 0800 5110          lea       _putch,A2
08002D46  2F9A      
08002D48  282E 0008 5111          move.l    8(A6),D4
08002D4C  2404      5112          move.l    D4,D2
                    5113   gets_1:
08002D4E  6100 027A 5114          bsr       _getch
08002D52  2600      5115          move.l    D0,D3
08002D54  0C80 0000 5116          cmp.l     #10,D0
08002D58  000A      
08002D5A  6700 003C 5117          beq       gets_3
08002D5E  0C83 0000 5118          cmp.l     #8,D3
08002D62  0008      
08002D64  6712      5119          beq.s     gets_4
08002D66  2042      5120          move.l    D2,A0
08002D68  5282      5121          addq.l    #1,D2
08002D6A  1083      5122          move.b    D3,(A0)
08002D6C  4883      5123          ext.w     D3
08002D6E  48C3      5124          ext.l     D3
08002D70  2F03      5125          move.l    D3,-(A7)
08002D72  4E92      5126          jsr       (A2)
08002D74  584F      5127          addq.w    #4,A7
08002D76  601E      5128          bra.s     gets_6
                    5129   gets_4:
08002D78  B484      5130          cmp.l     D4,D2
08002D7A  631A      5131          bls.s     gets_6
08002D7C  4878 0008 5132          pea       8
08002D80  4E92      5133          jsr       (A2)
08002D82  584F      5134          addq.w    #4,A7
08002D84  4878 0020 5135          pea       32
08002D88  4E92      5136          jsr       (A2)
08002D8A  584F      5137          addq.w    #4,A7
08002D8C  4878 0008 5138          pea       8
08002D90  4E92      5139          jsr       (A2)
08002D92  584F      5140          addq.w    #4,A7
08002D94  5382      5141          subq.l    #1,D2
                    5142   gets_6:
08002D96  60B6      5143          bra       gets_1
                    5144   gets_3:
08002D98  4878 000A 5145          pea       10
08002D9C  4E92      5146          jsr       (A2)
08002D9E  584F      5147          addq.w    #4,A7
08002DA0  2042      5148          move.l    D2,A0
08002DA2  4210      5149          clr.b     (A0)
08002DA4  2004      5150          move.l    D4,D0
08002DA6  4CDF 041C 5151          movem.l   (A7)+,D2/D3/D4/A2
08002DAA  4E5E      5152          unlk      A6
08002DAC  4E75      5153          rts
                    5154   _tolower:
08002DAE  4E56 0000 5155          link      A6,#0
08002DB2  48E7 2000 5156          movem.l   D2,-(A7)
08002DB6  242E 0008 5157          move.l    8(A6),D2
08002DBA  0C82 0000 5158          cmp.l     #65,D2
08002DBE  0041      
08002DC0  6D0E      5159          blt.s     tolower_1
08002DC2  0C82 0000 5160          cmp.l     #90,D2
08002DC6  005A      
08002DC8  6E06      5161          bgt.s     tolower_1
08002DCA  84BC 0000 5162          or.l      #32,D2
08002DCE  0020      
                    5163   tolower_1:
08002DD0  2002      5164          move.l    D2,D0
08002DD2  4CDF 0004 5165          movem.l   (A7)+,D2
08002DD6  4E5E      5166          unlk      A6
08002DD8  4E75      5167          rts
                    5168   _strcat:
08002DDA  206F 0004 5169          move.l    (4,A7),A0	
08002DDE  226F 0008 5170          move.l    (8,A7),A1	
08002DE2  2008      5171          move.l    A0,D0		
                    5172   strcat_0:
08002DE4  4A18      5173          tst.b     (A0)+
08002DE6  66FC      5174          bne       strcat_0
08002DE8  5348      5175          subq      #1,A0
                    5176   strcat_1:
08002DEA  10D9      5177          move.b    (A1)+,(A0)+
08002DEC  66FC      5178          bne       strcat_1
08002DEE  4E75      5179          rts
                    5180   _toupper:
08002DF0  4E56 0000 5181          link      A6,#0
08002DF4  48E7 2000 5182          movem.l   D2,-(A7)
08002DF8  242E 0008 5183          move.l    8(A6),D2
08002DFC  0C82 0000 5184          cmp.l     #97,D2
08002E00  0061      
08002E02  6D0E      5185          blt.s     toupper_1
08002E04  0C82 0000 5186          cmp.l     #122,D2
08002E08  007A      
08002E0A  6E06      5187          bgt.s     toupper_1
08002E0C  C4BC 0000 5188          and.l     #95,D2
08002E10  005F      
                    5189   toupper_1:
08002E12  2002      5190          move.l    D2,D0
08002E14  4CDF 0004 5191          movem.l   (A7)+,D2
08002E18  4E5E      5192          unlk      A6
08002E1A  4E75      5193          rts
                    5194   _ungetch:
08002E1C  4E56 0000 5195          link      A6,#0
08002E20  23EE 0008 5196          move.l    8(A6),__ungetbuf
08002E24  0800 3AB2 
08002E28  202E 0008 5197          move.l    8(A6),D0
08002E2C  4E5E      5198          unlk      A6
08002E2E  4E75      5199          rts
                    5200   @itoa_convert:
08002E30  4E56 0000 5201          link      A6,#0
08002E34  48E7 3C00 5202          movem.l   D2/D3/D4/D5,-(A7)
08002E38  242E 0008 5203          move.l    8(A6),D2
08002E3C  262E 0010 5204          move.l    16(A6),D3
08002E40  2A2E 000C 5205          move.l    12(A6),D5
08002E44  2F05      5206          move.l    D5,-(A7)
08002E46  2F03      5207          move.l    D3,-(A7)
08002E48  6100 ED60 5208          bsr       ULDIV
08002E4C  202F 0004 5209          move.l    4(A7),D0
08002E50  504F      5210          addq.w    #8,A7
08002E52  2800      5211          move.l    D0,D4
08002E54  BA83      5212          cmp.l     D3,D5
08002E56  651A      5213          blo.s     @itoa_convert_1
08002E58  2F03      5214          move.l    D3,-(A7)
08002E5A  2F05      5215          move.l    D5,-(A7)
08002E5C  2F03      5216          move.l    D3,-(A7)
08002E5E  6100 ED4A 5217          bsr       ULDIV
08002E62  2217      5218          move.l    (A7),D1
08002E64  504F      5219          addq.w    #8,A7
08002E66  2F01      5220          move.l    D1,-(A7)
08002E68  2F02      5221          move.l    D2,-(A7)
08002E6A  61C4      5222          bsr       @itoa_convert
08002E6C  DEFC 000C 5223          add.w     #12,A7
08002E70  2400      5224          move.l    D0,D2
                    5225   @itoa_convert_1:
08002E72  0C84 0000 5226          cmp.l     #9,D4
08002E76  0009      
08002E78  6E0A      5227          bgt.s     @itoa_convert_3
08002E7A  2004      5228          move.l    D4,D0
08002E7C  0680 0000 5229          add.l     #48,D0
08002E80  0030      
08002E82  600E      5230          bra.s     @itoa_convert_4
                    5231   @itoa_convert_3:
08002E84  2004      5232          move.l    D4,D0
08002E86  0680 0000 5233          add.l     #97,D0
08002E8A  0061      
08002E8C  0480 0000 5234          sub.l     #10,D0
08002E90  000A      
                    5235   @itoa_convert_4:
08002E92  2042      5236          move.l    D2,A0
08002E94  1080      5237          move.b    D0,(A0)
08002E96  2002      5238          move.l    D2,D0
08002E98  5280      5239          addq.l    #1,D0
08002E9A  4CDF 003C 5240          movem.l   (A7)+,D2/D3/D4/D5
08002E9E  4E5E      5241          unlk      A6
08002EA0  4E75      5242          rts
                    5243   _ltoa:
08002EA2  4E56 0000 5244          link      A6,#0
08002EA6  48E7 3C00 5245          movem.l   D2/D3/D4/D5,-(A7)
08002EAA  242E 0008 5246          move.l    8(A6),D2
08002EAE  262E 000C 5247          move.l    12(A6),D3
08002EB2  2A2E 0010 5248          move.l    16(A6),D5
08002EB6  2803      5249          move.l    D3,D4
08002EB8  0C85 0000 5250          cmp.l     #2,D5
08002EBC  0002      
08002EBE  6D08      5251          blt.s     ltoa_3
08002EC0  0C85 0000 5252          cmp.l     #36,D5
08002EC4  0024      
08002EC6  6F06      5253          ble.s     ltoa_1
                    5254   ltoa_3:
08002EC8  2003      5255          move.l    D3,D0
08002ECA  6000 0052 5256          bra       ltoa_4
                    5257   ltoa_1:
08002ECE  0C85 0000 5258          cmp.l     #10,D5
08002ED2  000A      
08002ED4  6600 0032 5259          bne       ltoa_5
08002ED8  0C82 0000 5260          cmp.l     #0,D2
08002EDC  0000      
08002EDE  6C28      5261          bge.s     ltoa_5
08002EE0  2002      5262          move.l    D2,D0
08002EE2  4480      5263          neg.l     D0
08002EE4  2400      5264          move.l    D0,D2
08002EE6  0C82 0000 5265          cmp.l     #0,D2
08002EEA  0000      
08002EEC  6C12      5266          bge.s     ltoa_7
08002EEE  4879 0800 5267          pea       @itoa_1
08002EF2  3BC6      
08002EF4  2F03      5268          move.l    D3,-(A7)
08002EF6  6100 010E 5269          bsr       _strcpy
08002EFA  504F      5270          addq.w    #8,A7
08002EFC  2003      5271          move.l    D3,D0
08002EFE  601E      5272          bra.s     ltoa_4
                    5273   ltoa_7:
08002F00  2044      5274          move.l    D4,A0
08002F02  5284      5275          addq.l    #1,D4
08002F04  10BC 002D 5276          move.b    #45,(A0)
                    5277   ltoa_5:
08002F08  2F05      5278          move.l    D5,-(A7)
08002F0A  2F02      5279          move.l    D2,-(A7)
08002F0C  2F04      5280          move.l    D4,-(A7)
08002F0E  6100 FF20 5281          bsr       @itoa_convert
08002F12  DEFC 000C 5282          add.w     #12,A7
08002F16  2800      5283          move.l    D0,D4
08002F18  2044      5284          move.l    D4,A0
08002F1A  4210      5285          clr.b     (A0)
08002F1C  2003      5286          move.l    D3,D0
                    5287   ltoa_4:
08002F1E  4CDF 003C 5288          movem.l   (A7)+,D2/D3/D4/D5
08002F22  4E5E      5289          unlk      A6
08002F24  4E75      5290          rts
                    5291   _ultoa:
08002F26  4E56 0000 5292          link      A6,#0
08002F2A  48E7 3800 5293          movem.l   D2/D3/D4,-(A7)
08002F2E  262E 0010 5294          move.l    16(A6),D3
08002F32  282E 000C 5295          move.l    12(A6),D4
08002F36  2404      5296          move.l    D4,D2
08002F38  0C83 0000 5297          cmp.l     #2,D3
08002F3C  0002      
08002F3E  6D08      5298          blt.s     ultoa_3
08002F40  0C83 0000 5299          cmp.l     #36,D3
08002F44  0024      
08002F46  6F04      5300          ble.s     ultoa_1
                    5301   ultoa_3:
08002F48  2004      5302          move.l    D4,D0
08002F4A  6018      5303          bra.s     ultoa_4
                    5304   ultoa_1:
08002F4C  2F03      5305          move.l    D3,-(A7)
08002F4E  2F2E 0008 5306          move.l    8(A6),-(A7)
08002F52  2F02      5307          move.l    D2,-(A7)
08002F54  6100 FEDA 5308          bsr       @itoa_convert
08002F58  DEFC 000C 5309          add.w     #12,A7
08002F5C  2400      5310          move.l    D0,D2
08002F5E  2042      5311          move.l    D2,A0
08002F60  4210      5312          clr.b     (A0)
08002F62  2004      5313          move.l    D4,D0
                    5314   ultoa_4:
08002F64  4CDF 001C 5315          movem.l   (A7)+,D2/D3/D4
08002F68  4E5E      5316          unlk      A6
08002F6A  4E75      5317          rts
                    5318   _itoa:
08002F6C  4E56 0000 5319          link      A6,#0
08002F70  2F2E 0010 5320          move.l    16(A6),-(A7)
08002F74  2F2E 000C 5321          move.l    12(A6),-(A7)
08002F78  2F2E 0008 5322          move.l    8(A6),-(A7)
08002F7C  6100 FF24 5323          bsr       _ltoa
08002F80  DEFC 000C 5324          add.w     #12,A7
08002F84  4E5E      5325          unlk      A6
08002F86  4E75      5326          rts
                    5327   _strlen:
08002F88  206F 0004 5328          move.l    (4,A7),A0
08002F8C  2248      5329          move.l    A0,A1
                    5330   strlen_1:
08002F8E  4A19      5331          tst.b     (A1)+
08002F90  66FC      5332          bne       strlen_1
08002F92  2009      5333          move.l    A1,D0
08002F94  9088      5334          sub.l     A0,D0
08002F96  5380      5335          subq.l    #1,D0
08002F98  4E75      5336          rts
                    5337   _putch:
08002F9A  4E56 0000 5338          link      A6,#0
08002F9E  48E7 2000 5339          movem.l   D2,-(A7)
08002FA2  242E 0008 5340          move.l    8(A6),D2
08002FA6  0C82 0000 5341          cmp.l     #10,D2
08002FAA  000A      
08002FAC  660A      5342          bne.s     putch_1
08002FAE  4878 000D 5343          pea       13
08002FB2  6100 D142 5344          bsr       __putch
08002FB6  584F      5345          addq.w    #4,A7
                    5346   putch_1:
08002FB8  2F02      5347          move.l    D2,-(A7)
08002FBA  6100 D13A 5348          bsr       __putch
08002FBE  584F      5349          addq.w    #4,A7
08002FC0  2002      5350          move.l    D2,D0
08002FC2  4CDF 0004 5351          movem.l   (A7)+,D2
08002FC6  4E5E      5352          unlk      A6
08002FC8  4E75      5353          rts
                    5354   _getch:
08002FCA  48E7 2000 5355          movem.l   D2,-(A7)
08002FCE  2439 0800 5356          move.l    __ungetbuf,D2
08002FD2  3AB2      
08002FD4  2039 0800 5357          move.l    __ungetbuf,D0
08002FD8  3AB2      
08002FDA  0C80 FFFF 5358          cmp.l     #-1,D0
08002FDE  FFFF      
08002FE0  670C      5359          beq.s     getch_1
08002FE2  23FC FFFF 5360          move.l    #-1,__ungetbuf
08002FE6  FFFF 0800 
08002FEA  3AB2      
08002FEC  6010      5361          bra.s     getch_3
                    5362   getch_1:
08002FEE  6100 D134 5363          bsr       __getch
08002FF2  2400      5364          move.l    D0,D2
08002FF4  0C80 0000 5365          cmp.l     #13,D0
08002FF8  000D      
08002FFA  6602      5366          bne.s     getch_3
08002FFC  740A      5367          moveq     #10,D2
                    5368   getch_3:
08002FFE  2002      5369          move.l    D2,D0
08003000  4CDF 0004 5370          movem.l   (A7)+,D2
08003004  4E75      5371          rts
                    5372   _strcpy:
08003006  206F 0004 5373          move.l    (4,A7),A0
0800300A  226F 0008 5374          move.l    (8,A7),A1
0800300E  2008      5375          move.l    A0,D0
                    5376   strcpy_1:
08003010  10D9      5377          move.b    (A1)+,(A0)+
08003012  66FC      5378          bne       strcpy_1
08003014  4E75      5379          rts
                    5380          section   const
08003016            5381                   align
                    5382   
                    5383   
                    5384   @m68kus~1_1:
08003016  0D0A 456E 5385          dc.b      13,10,69,110,116,101,114,32,52,32,98,121,116
0800301A  7465 7220 
0800301E  3420 6279 
08003022  74        
08003023  6573 206F 5386          dc.b      101,115,32,111,102,32,72,101,120,105,100,101
08003027  6620 4865 
0800302B  7869 6465 
0800302F  6369 6D61 5387          dc.b      99,105,109,97,108,32,116,101,115,116,32,100
08003033  6C20 7465 
08003037  7374 2064 
0800303B  6174 612E 5388          dc.b      97,116,97,46,0
0800303F  00        
                    5389   @m68kus~1_2:
08003040  0D0A 456E 5390          dc.b      13,10,69,110,116,101,114,32,70,105,114,115,116
08003044  7465 7220 
08003048  4669 7273 
0800304C  74        
0800304D  2062 7974 5391          dc.b      32,98,121,116,101,58,32,0
08003051  653A 2000 
                    5392   @m68kus~1_3:
08003056  2578 00   5393          dc.b      37,120,0
                    5394   @m68kus~1_4:
0800305A  456E 7465 5395          dc.b      69,110,116,101,114,32,83,101,99,111,110,100
0800305E  7220 5365 
08003062  636F 6E64 
08003066  2062 7974 5396          dc.b      32,98,121,116,101,58,32,0
0800306A  653A 2000 
                    5397   @m68kus~1_5:
0800306E  456E 7465 5398          dc.b      69,110,116,101,114,32,84,104,105,114,100,32
08003072  7220 5468 
08003076  6972 6420 
0800307A  6279 7465 5399          dc.b      98,121,116,101,58,32,0
0800307E  3A20 00   
                    5400   @m68kus~1_6:
08003082  456E 7465 5401          dc.b      69,110,116,101,114,32,70,111,117,114,116,104
08003086  7220 466F 
0800308A  7572 7468 
0800308E  2062 7974 5402          dc.b      32,98,121,116,101,58,32,0
08003092  653A 2000 
                    5403   @m68kus~1_7:
08003096  5661 6C69 5404          dc.b      86,97,108,105,100,32,97,100,100,114,101,115
0800309A  6420 6164 
0800309E  6472 6573 
080030A2  7365 7320 5405          dc.b      115,101,115,32,102,111,114,32,116,104,105,115
080030A6  666F 7220 
080030AA  7468 6973 
080030AE  2070 726F 5406          dc.b      32,112,114,111,103,114,97,109,32,97,114,101
080030B2  6772 616D 
080030B6  2061 7265 
080030BA  3A20 2430 5407          dc.b      58,32,36,48,57,48,48,32,48,48,48,48,32,32,45
080030BE  3930 3020 
080030C2  3030 3030 
080030C6  2020 2D   
080030C9  2024 3039 5408          dc.b      32,36,48,57,55,70,32,70,70,70,70,0
080030CD  3746 2046 
080030D1  4646 4600 
                    5409   @m68kus~1_8:
080030D6  0D0A 456E 5410          dc.b      13,10,69,110,116,101,114,32,83,116,97,114,116
080030DA  7465 7220 
080030DE  5374 6172 
080030E2  74        
080030E3  2041 6464 5411          dc.b      32,65,100,100,114,101,115,115,58,32,0
080030E7  7265 7373 
080030EB  3A20 00   
                    5412   @m68kus~1_9:
080030EE  456E 7465 5413          dc.b      69,110,116,101,114,32,69,110,100,32,65,100,100
080030F2  7220 456E 
080030F6  6420 4164 
080030FA  64        
080030FB  7265 7373 5414          dc.b      114,101,115,115,58,32,0
080030FF  3A20 00   
                    5415   @m68kus~1_10:
08003102  4552 524F 5416          dc.b      69,82,82,79,82,46,32,80,108,101,97,115,101,32
08003106  522E 2050 
0800310A  6C65 6173 
0800310E  6520      
08003110  456E 7465 5417          dc.b      69,110,116,101,114,32,97,32,118,97,108,105,100
08003114  7220 6120 
08003118  7661 6C69 
0800311C  64        
0800311D  2053 7461 5418          dc.b      32,83,116,97,114,116,32,65,100,100,114,101,115
08003121  7274 2041 
08003125  6464 7265 
08003129  73        
0800312A  733A 2000 5419          dc.b      115,58,32,0
                    5420   @m68kus~1_11:
0800312E  0D0A 4552 5421          dc.b      13,10,69,82,82,79,82,46,32,80,108,101,97,115
08003132  524F 522E 
08003136  2050 6C65 
0800313A  6173      
0800313C  6520 456E 5422          dc.b      101,32,69,110,116,101,114,32,97,32,118,97,108
08003140  7465 7220 
08003144  6120 7661 
08003148  6C        
08003149  6964 2045 5423          dc.b      105,100,32,69,110,100,32,65,100,100,114,101
0800314D  6E64 2041 
08003151  6464 7265 
08003155  7373 3A20 5424          dc.b      115,115,58,32,0
08003159  00        
                    5425   @m68kus~1_12:
0800315A  0D0A 4552 5426          dc.b      13,10,69,82,82,79,82,46,32,80,108,101,97,115
0800315E  524F 522E 
08003162  2050 6C65 
08003166  6173      
08003168  6520 656E 5427          dc.b      101,32,101,110,116,101,114,32,97,110,32,69,110
0800316C  7465 7220 
08003170  616E 2045 
08003174  6E        
08003175  6420 4164 5428          dc.b      100,32,65,100,100,114,101,115,115,32,108,97
08003179  6472 6573 
0800317D  7320 6C61 
08003181  7267 6572 5429          dc.b      114,103,101,114,32,116,104,97,110,32,116,104
08003185  2074 6861 
08003189  6E20 7468 
0800318D  6520 5374 5430          dc.b      101,32,83,116,97,114,116,32,65,100,100,114,101
08003191  6172 7420 
08003195  4164 6472 
08003199  65        
0800319A  7373 00   5431          dc.b      115,115,0
                    5432   @m68kus~1_13:
0800319E  0D0A 456E 5433          dc.b      13,10,69,110,116,101,114,32,69,110,100,32,65
080031A2  7465 7220 
080031A6  456E 6420 
080031AA  41        
080031AB  6464 7265 5434          dc.b      100,100,114,101,115,115,58,32,0
080031AF  7373 3A20 
080031B3  00        
                    5435   @m68kus~1_14:
080031B4  0D0A 4669 5436          dc.b      13,10,70,105,108,108,105,110,103,32,65,100,100
080031B8  6C6C 696E 
080031BC  6720 4164 
080031C0  64        
080031C1  7265 7373 5437          dc.b      114,101,115,115,101,115,32,91,36,37,48,56,88
080031C5  6573 205B 
080031C9  2425 3038 
080031CD  58        
080031CE  202D 2024 5438          dc.b      32,45,32,36,37,48,56,88,93,32,119,105,116,104
080031D2  2530 3858 
080031D6  5D20 7769 
080031DA  7468      
080031DC  2074 6573 5439          dc.b      32,116,101,115,116,32,100,97,116,97,0
080031E0  7420 6461 
080031E4  7461 00   
                    5440   @m68kus~1_15:
080031E8  0D0A 4164 5441          dc.b      13,10,65,100,100,114,101,115,115,32,36,37,48
080031EC  6472 6573 
080031F0  7320 2425 
080031F4  30        
080031F5  3858 2062 5442          dc.b      56,88,32,98,101,105,110,103,32,102,105,108,108
080031F9  6569 6E67 
080031FD  2066 696C 
08003201  6C        
08003202  6564 2077 5443          dc.b      101,100,32,119,105,116,104,32,36,37,48,50,88
08003206  6974 6820 
0800320A  2425 3032 
0800320E  58        
0800320F  00        5444          dc.b      0
                    5445   @m68kus~1_16:
08003210  0D0A 5772 5446          dc.b      13,10,87,114,105,116,105,110,103,32,116,111
08003214  6974 696E 
08003218  6720 746F 
0800321C  206D 656D 5447          dc.b      32,109,101,109,111,114,121,32,67,111,109,112
08003220  6F72 7920 
08003224  436F 6D70 
08003228  6C65 7465 5448          dc.b      108,101,116,101,46,13,10,69,110,116,101,114
0800322C  2E0D 0A45 
08003230  6E74 6572 
08003234  2027 3127 5449          dc.b      32,39,49,39,32,116,111,32,114,101,97,100,32
08003238  2074 6F20 
0800323C  7265 6164 
08003240  20        
08003241  6261 636B 5450          dc.b      98,97,99,107,32,116,104,101,32,109,101,109,111
08003245  2074 6865 
08003249  206D 656D 
0800324D  6F        
0800324E  7279 2E20 5451          dc.b      114,121,46,32,69,110,116,101,114,32,39,48,39
08003252  456E 7465 
08003256  7220 2730 
0800325A  27        
0800325B  2074 6F20 5452          dc.b      32,116,111,32,101,120,105,116,32,112,114,111
0800325F  6578 6974 
08003263  2070 726F 
08003267  6772 616D 5453          dc.b      103,114,97,109,46,0
0800326B  2E00      
                    5454   @m68kus~1_17:
0800326E  0D0A 2425 5455          dc.b      13,10,36,37,48,50,88,32,82,101,97,100,32,102
08003272  3032 5820 
08003276  5265 6164 
0800327A  2066      
0800327C  726F 6D20 5456          dc.b      114,111,109,32,97,100,100,114,101,115,115,32
08003280  6164 6472 
08003284  6573 7320 
08003288  2425 3038 5457          dc.b      36,37,48,56,88,0
0800328C  5800      
                    5458   @m68kus~1_18:
0800328E  0D0A 5072 5459          dc.b      13,10,80,114,111,103,114,97,109,32,69,110,100
08003292  6F67 7261 
08003296  6D20 456E 
0800329A  64        
0800329B  6564 00   5460          dc.b      101,100,0
                    5461   @m68kus~1_19:
0800329E  0D0A 456E 5462          dc.b      13,10,69,110,116,101,114,32,52,32,119,111,114
080032A2  7465 7220 
080032A6  3420 776F 
080032AA  72        
080032AB  6473 2028 5463          dc.b      100,115,32,40,50,32,98,121,116,101,115,41,32
080032AF  3220 6279 
080032B3  7465 7329 
080032B7  20        
080032B8  6F66 2048 5464          dc.b      111,102,32,72,101,120,105,100,101,99,105,109
080032BC  6578 6964 
080032C0  6563 696D 
080032C4  616C 2074 5465          dc.b      97,108,32,116,101,115,116,32,100,97,116,97,46
080032C8  6573 7420 
080032CC  6461 7461 
080032D0  2E        
080032D1  00        5466          dc.b      0
                    5467   @m68kus~1_20:
080032D2  0D0A 456E 5468          dc.b      13,10,69,110,116,101,114,32,70,105,114,115,116
080032D6  7465 7220 
080032DA  4669 7273 
080032DE  74        
080032DF  2077 6F72 5469          dc.b      32,119,111,114,100,58,32,0
080032E3  643A 2000 
                    5470   @m68kus~1_21:
080032E8  456E 7465 5471          dc.b      69,110,116,101,114,32,83,101,99,111,110,100
080032EC  7220 5365 
080032F0  636F 6E64 
080032F4  2077 6F72 5472          dc.b      32,119,111,114,100,58,32,0
080032F8  643A 2000 
                    5473   @m68kus~1_22:
080032FC  456E 7465 5474          dc.b      69,110,116,101,114,32,84,104,105,114,100,32
08003300  7220 5468 
08003304  6972 6420 
08003308  776F 7264 5475          dc.b      119,111,114,100,58,32,0
0800330C  3A20 00   
                    5476   @m68kus~1_23:
08003310  456E 7465 5477          dc.b      69,110,116,101,114,32,70,111,117,114,116,104
08003314  7220 466F 
08003318  7572 7468 
0800331C  2077 6F72 5478          dc.b      32,119,111,114,100,58,32,0
08003320  643A 2000 
                    5479   @m68kus~1_24:
08003324  5661 6C69 5480          dc.b      86,97,108,105,100,32,97,100,100,114,101,115
08003328  6420 6164 
0800332C  6472 6573 
08003330  7365 7320 5481          dc.b      115,101,115,32,102,111,114,32,116,104,105,115
08003334  666F 7220 
08003338  7468 6973 
0800333C  2070 726F 5482          dc.b      32,112,114,111,103,114,97,109,32,97,114,101
08003340  6772 616D 
08003344  2061 7265 
08003348  3A20 2430 5483          dc.b      58,32,36,48,57,48,48,32,48,48,48,48,32,45,32
0800334C  3930 3020 
08003350  3030 3030 
08003354  202D 20   
08003357  2430 3937 5484          dc.b      36,48,57,55,70,32,70,70,70,70,0
0800335B  4620 4646 
0800335F  4646 00   
                    5485   @m68kus~1_25:
08003362  0D0A 466F 5486          dc.b      13,10,70,111,114,32,116,104,105,115,32,116,101
08003366  7220 7468 
0800336A  6973 2074 
0800336E  65        
0800336F  7374 2C20 5487          dc.b      115,116,44,32,116,104,101,32,115,116,97,114
08003373  7468 6520 
08003377  7374 6172 
0800337B  7420 616E 5488          dc.b      116,32,97,110,100,32,101,110,100,32,97,100,100
0800337F  6420 656E 
08003383  6420 6164 
08003387  64        
08003388  7265 7373 5489          dc.b      114,101,115,115,101,115,32,109,117,115,116,32
0800338C  6573 206D 
08003390  7573 7420 
08003394  616C 6967 5490          dc.b      97,108,105,103,110,32,116,111,32,97,110,32,101
08003398  6E20 746F 
0800339C  2061 6E20 
080033A0  65        
080033A1  7665 6E20 5491          dc.b      118,101,110,32,97,100,100,114,101,115,115,0
080033A5  6164 6472 
080033A9  6573 7300 
                    5492   @m68kus~1_26:
080033AE  4552 524F 5493          dc.b      69,82,82,79,82,46,32,80,108,101,97,115,101,32
080033B2  522E 2050 
080033B6  6C65 6173 
080033BA  6520      
080033BC  456E 7465 5494          dc.b      69,110,116,101,114,32,97,32,118,97,108,105,100
080033C0  7220 6120 
080033C4  7661 6C69 
080033C8  64        
080033C9  2045 6E64 5495          dc.b      32,69,110,100,32,65,100,100,114,101,115,115
080033CD  2041 6464 
080033D1  7265 7373 
080033D5  3A20 00   5496          dc.b      58,32,0
                    5497   @m68kus~1_27:
080033D8  4552 524F 5498          dc.b      69,82,82,79,82,46,32,80,108,101,97,115,101,32
080033DC  522E 2050 
080033E0  6C65 6173 
080033E4  6520      
080033E6  656E 7465 5499          dc.b      101,110,116,101,114,32,97,110,32,69,110,100
080033EA  7220 616E 
080033EE  2045 6E64 
080033F2  2041 6464 5500          dc.b      32,65,100,100,114,101,115,115,32,108,97,114
080033F6  7265 7373 
080033FA  206C 6172 
080033FE  6765 7220 5501          dc.b      103,101,114,32,116,104,97,110,32,116,104,101
08003402  7468 616E 
08003406  2074 6865 
0800340A  2053 7461 5502          dc.b      32,83,116,97,114,116,32,65,100,100,114,101,115
0800340E  7274 2041 
08003412  6464 7265 
08003416  73        
08003417  7300      5503          dc.b      115,0
                    5504   @m68kus~1_28:
0800341A  0D0A 4164 5505          dc.b      13,10,65,100,100,114,101,115,115,101,115,32
0800341E  6472 6573 
08003422  7365 7320 
08003426  2425 3038 5506          dc.b      36,37,48,56,88,32,45,32,36,37,48,56,88,32,98
0800342A  5820 2D20 
0800342E  2425 3038 
08003432  5820 62   
08003435  6569 6E67 5507          dc.b      101,105,110,103,32,102,105,108,108,101,100,32
08003439  2066 696C 
0800343D  6C65 6420 
08003441  7769 7468 5508          dc.b      119,105,116,104,32,36,37,48,52,88,0
08003445  2024 2530 
08003449  3458 00   
                    5509   @m68kus~1_29:
0800344C  0D0A 5661 5510          dc.b      13,10,86,97,108,117,101,115,32,36,37,48,50,88
08003450  6C75 6573 
08003454  2024 2530 
08003458  3258      
0800345A  2024 2530 5511          dc.b      32,36,37,48,50,88,32,102,111,117,110,100,32
0800345E  3258 2066 
08003462  6F75 6E64 
08003466  20        
08003467  6174 2061 5512          dc.b      97,116,32,97,100,100,114,101,115,115,101,115
0800346B  6464 7265 
0800346F  7373 6573 
08003473  2024 2530 5513          dc.b      32,36,37,48,56,88,32,45,32,36,37,48,56,88,0
08003477  3858 202D 
0800347B  2024 2530 
0800347F  3858 00   
                    5514   @m68kus~1_30:
08003482  0D0A 456E 5515          dc.b      13,10,69,110,116,101,114,32,52,32,108,111,110
08003486  7465 7220 
0800348A  3420 6C6F 
0800348E  6E        
0800348F  6720 776F 5516          dc.b      103,32,119,111,114,100,115,32,40,52,32,98,121
08003493  7264 7320 
08003497  2834 2062 
0800349B  79        
0800349C  7465 7329 5517          dc.b      116,101,115,41,32,111,102,32,72,101,120,105
080034A0  206F 6620 
080034A4  4865 7869 
080034A8  6465 6369 5518          dc.b      100,101,99,105,109,97,108,32,116,101,115,116
080034AC  6D61 6C20 
080034B0  7465 7374 
080034B4  2064 6174 5519          dc.b      32,100,97,116,97,46,0
080034B8  612E 00   
                    5520   @m68kus~1_31:
080034BC  0D0A 456E 5521          dc.b      13,10,69,110,116,101,114,32,70,105,114,115,116
080034C0  7465 7220 
080034C4  4669 7273 
080034C8  74        
080034C9  206C 6F6E 5522          dc.b      32,108,111,110,103,32,119,111,114,100,58,32
080034CD  6720 776F 
080034D1  7264 3A20 
080034D5  00        5523          dc.b      0
                    5524   @m68kus~1_32:
080034D6  456E 7465 5525          dc.b      69,110,116,101,114,32,83,101,99,111,110,100
080034DA  7220 5365 
080034DE  636F 6E64 
080034E2  206C 6F6E 5526          dc.b      32,108,111,110,103,32,119,111,114,100,58,32
080034E6  6720 776F 
080034EA  7264 3A20 
080034EE  00        5527          dc.b      0
                    5528   @m68kus~1_33:
080034F0  456E 7465 5529          dc.b      69,110,116,101,114,32,84,104,105,114,100,32
080034F4  7220 5468 
080034F8  6972 6420 
080034FC  6C6F 6E67 5530          dc.b      108,111,110,103,32,119,111,114,100,58,32,0
08003500  2077 6F72 
08003504  643A 2000 
                    5531   @m68kus~1_34:
08003508  456E 7465 5532          dc.b      69,110,116,101,114,32,70,111,117,114,116,104
0800350C  7220 466F 
08003510  7572 7468 
08003514  206C 6F6E 5533          dc.b      32,108,111,110,103,32,119,111,114,100,58,32
08003518  6720 776F 
0800351C  7264 3A20 
08003520  00        5534          dc.b      0
                    5535   @m68kus~1_35:
08003522  0D0A 4164 5536          dc.b      13,10,65,100,100,114,101,115,115,101,115,32
08003526  6472 6573 
0800352A  7365 7320 
0800352E  2425 3038 5537          dc.b      36,37,48,56,88,32,45,32,36,37,48,56,88,32,98
08003532  5820 2D20 
08003536  2425 3038 
0800353A  5820 62   
0800353D  6569 6E67 5538          dc.b      101,105,110,103,32,102,105,108,108,101,100,32
08003541  2066 696C 
08003545  6C65 6420 
08003549  7769 7468 5539          dc.b      119,105,116,104,32,36,37,48,56,88,0
0800354D  2024 2530 
08003551  3858 00   
                    5540   @m68kus~1_36:
08003554  0D0A 5661 5541          dc.b      13,10,86,97,108,117,101,115,32,36,37,48,50,88
08003558  6C75 6573 
0800355C  2024 2530 
08003560  3258      
08003562  2024 2530 5542          dc.b      32,36,37,48,50,88,32,36,37,48,50,88,32,36,37
08003566  3258 2024 
0800356A  2530 3258 
0800356E  2024 25   
08003571  3032 5820 5543          dc.b      48,50,88,32,102,111,117,110,100,32,97,116,32
08003575  666F 756E 
08003579  6420 6174 
0800357D  20        
0800357E  6164 6472 5544          dc.b      97,100,100,114,101,115,115,101,115,32,36,37
08003582  6573 7365 
08003586  7320 2425 
0800358A  3038 5820 5545          dc.b      48,56,88,32,45,32,36,37,48,56,88,0
0800358E  2D20 2425 
08003592  3038 5800 
                    5546   @m68kus~1_37:
08003596  0D0A 2578 5547          dc.b      13,10,37,120,0
0800359A  00        
                    5548   @m68kus~1_38:
0800359C  0D0A 426C 5549          dc.b      13,10,66,108,111,99,107,32,105,115,32,115,101
080035A0  6F63 6B20 
080035A4  6973 2073 
080035A8  65        
080035A9  7420 746F 5550          dc.b      116,32,116,111,32,48,0
080035AD  2030 00   
                    5551   @m68kus~1_39:
080035B0  0D0A 426C 5552          dc.b      13,10,66,108,111,99,107,32,105,115,32,115,101
080035B4  6F63 6B20 
080035B8  6973 2073 
080035BC  65        
080035BD  7420 746F 5553          dc.b      116,32,116,111,32,49,0
080035C1  2031 00   
                    5554   @m68kus~1_40:
080035C4  0D0A 5365 5555          dc.b      13,10,83,101,110,100,105,110,103,32,83,116,97
080035C8  6E64 696E 
080035CC  6720 5374 
080035D0  61        
080035D1  7274 2043 5556          dc.b      114,116,32,67,111,109,109,97,110,100,46,46,46
080035D5  6F6D 6D61 
080035D9  6E64 2E2E 
080035DD  2E        
080035DE  00        5557          dc.b      0
                    5558   @m68kus~1_41:
080035E0  0D0A 436F 5559          dc.b      13,10,67,111,110,116,114,111,108,32,82,101,103
080035E4  6E74 726F 
080035E8  6C20 5265 
080035EC  67        
080035ED  6973 7465 5560          dc.b      105,115,116,101,114,32,105,115,32,37,120,0
080035F1  7220 6973 
080035F5  2025 7800 
                    5561   @m68kus~1_42:
080035FA  0D0A 5374 5562          dc.b      13,10,83,116,97,114,116,32,67,111,109,109,97
080035FE  6172 7420 
08003602  436F 6D6D 
08003606  61        
08003607  6E64 2052 5563          dc.b      110,100,32,82,101,99,101,105,118,101,100,0
0800360B  6563 6569 
0800360F  7665 6400 
                    5564   @m68kus~1_43:
08003614  0D0A 5472 5565          dc.b      13,10,84,114,97,110,115,109,105,116,47,114,101
08003618  616E 736D 
0800361C  6974 2F72 
08003620  65        
08003621  6365 6976 5566          dc.b      99,101,105,118,101,32,98,101,102,111,114,101
08003625  6520 6265 
08003629  666F 7265 
0800362D  3A20 2578 5567          dc.b      58,32,37,120,0
08003631  00        
                    5568   @m68kus~1_44:
08003632  0D0A 5472 5569          dc.b      13,10,84,114,97,110,115,109,105,116,47,114,101
08003636  616E 736D 
0800363A  6974 2F72 
0800363E  65        
0800363F  6365 6976 5570          dc.b      99,101,105,118,101,32,97,102,116,101,114,58
08003643  6520 6166 
08003647  7465 723A 
0800364B  2025 7800 5571          dc.b      32,37,120,0
                    5572   @m68kus~1_45:
08003650  0D0A 5365 5573          dc.b      13,10,83,101,110,100,105,110,103,32,97,100,100
08003654  6E64 696E 
08003658  6720 6164 
0800365C  64        
0800365D  7265 7373 5574          dc.b      114,101,115,115,0
08003661  00        
                    5575   @m68kus~1_46:
08003662  0D0A 4869 5576          dc.b      13,10,72,105,103,104,32,98,121,116,101,32,97
08003666  6768 2062 
0800366A  7974 6520 
0800366E  61        
0800366F  6464 7265 5577          dc.b      100,100,114,101,115,115,32,115,101,110,116,0
08003673  7373 2073 
08003677  656E 7400 
                    5578   @m68kus~1_47:
0800367C  0D0A 4C6F 5579          dc.b      13,10,76,111,119,32,98,121,116,101,32,97,100
08003680  7720 6279 
08003684  7465 2061 
08003688  64        
08003689  6472 6573 5580          dc.b      100,114,101,115,115,32,115,101,110,116,0
0800368D  7320 7365 
08003691  6E74 00   
                    5581   @m68kus~1_48:
08003694  0D0A 4461 5582          dc.b      13,10,68,97,116,97,32,87,114,105,116,101,110
08003698  7461 2057 
0800369C  7269 7465 
080036A0  6E        
080036A1  00        5583          dc.b      0
                    5584   @m68kus~1_49:
080036A2  0D0A 4441 5585          dc.b      13,10,68,65,84,65,32,82,69,65,68,32,73,83,58
080036A6  5441 2052 
080036AA  4541 4420 
080036AE  4953 3A   
080036B1  2025 3032 5586          dc.b      32,37,48,50,88,0
080036B5  5800      
                    5587   @m68kus~1_50:
080036B8  0D0A 426C 5588          dc.b      13,10,66,108,111,99,107,32,83,101,108,58,32
080036BC  6F63 6B20 
080036C0  5365 6C3A 
080036C4  20        
080036C5  2558 00   5589          dc.b      37,88,0
                    5590   @m68kus~1_51:
080036C8  0D0A 4164 5591          dc.b      13,10,65,100,100,114,101,115,115,32,72,105,103
080036CC  6472 6573 
080036D0  7320 4869 
080036D4  67        
080036D5  683A 2025 5592          dc.b      104,58,32,37,88,0
080036D9  5800      
                    5593   @m68kus~1_52:
080036DC  0D0A 4164 5594          dc.b      13,10,65,100,100,114,101,115,115,32,76,111,119
080036E0  6472 6573 
080036E4  7320 4C6F 
080036E8  77        
080036E9  3A20 2558 5595          dc.b      58,32,37,88,0
080036ED  00        
                    5596   @m68kus~1_53:
080036EE  0D0A 5365 5597          dc.b      13,10,83,101,110,100,105,110,103,32,83,108,97
080036F2  6E64 696E 
080036F6  6720 536C 
080036FA  61        
080036FB  7665 2041 5598          dc.b      118,101,32,65,100,100,114,101,115,115,0
080036FF  6464 7265 
08003703  7373 00   
                    5599   @m68kus~1_54:
08003706  0D0A 5365 5600          dc.b      13,10,83,101,110,100,105,110,103,32,67,111,110
0800370A  6E64 696E 
0800370E  6720 436F 
08003712  6E        
08003713  7472 6F6C 5601          dc.b      116,114,111,108,32,66,121,116,101,0
08003717  2042 7974 
0800371B  6500      
                    5602   @m68kus~1_55:
0800371E  0D0A 4949 5603          dc.b      13,10,73,73,67,32,112,114,111,103,114,97,109
08003722  4320 7072 
08003726  6F67 7261 
0800372A  6D        
0800372B  2077 696C 5604          dc.b      32,119,105,108,108,32,98,101,103,105,110,0
0800372F  6C20 6265 
08003733  6769 6E00 
                    5605   @m68kus~1_56:
08003738  0D0A 456E 5606          dc.b      13,10,69,110,116,101,114,32,48,32,46,46,46,32
0800373C  7465 7220 
08003740  3020 2E2E 
08003744  2E20      
08003746  5772 6974 5607          dc.b      87,114,105,116,101,32,83,105,110,103,108,101
0800374A  6520 5369 
0800374E  6E67 6C65 
08003752  2042 7974 5608          dc.b      32,66,121,116,101,0
08003756  6500      
                    5609   @m68kus~1_57:
08003758  0D0A 456E 5610          dc.b      13,10,69,110,116,101,114,32,49,32,46,46,46,32
0800375C  7465 7220 
08003760  3120 2E2E 
08003764  2E20      
08003766  5265 6164 5611          dc.b      82,101,97,100,32,83,105,110,103,108,101,32,66
0800376A  2053 696E 
0800376E  676C 6520 
08003772  42        
08003773  7974 6500 5612          dc.b      121,116,101,0
                    5613   @m68kus~1_58:
08003778  0D0A 456E 5614          dc.b      13,10,69,110,116,101,114,32,50,32,46,46,46,32
0800377C  7465 7220 
08003780  3220 2E2E 
08003784  2E20      
08003786  5772 6974 5615          dc.b      87,114,105,116,101,32,68,97,116,97,32,66,108
0800378A  6520 4461 
0800378E  7461 2042 
08003792  6C        
08003793  6F63 6B00 5616          dc.b      111,99,107,0
                    5617   @m68kus~1_59:
08003798  0D0A 456E 5618          dc.b      13,10,69,110,116,101,114,32,51,32,46,46,46,32
0800379C  7465 7220 
080037A0  3320 2E2E 
080037A4  2E20      
080037A6  5265 6164 5619          dc.b      82,101,97,100,32,68,97,116,97,32,66,108,111
080037AA  2044 6174 
080037AE  6120 426C 
080037B2  6F        
080037B3  636B 00   5620          dc.b      99,107,0
                    5621   @m68kus~1_60:
080037B6  0D0A 456E 5622          dc.b      13,10,69,110,116,101,114,32,52,32,46,46,46,32
080037BA  7465 7220 
080037BE  3420 2E2E 
080037C2  2E20      
080037C4  5761 7665 5623          dc.b      87,97,118,101,102,111,114,109,32,68,65,67,32
080037C8  666F 726D 
080037CC  2044 4143 
080037D0  20        
080037D1  616E 6420 5624          dc.b      97,110,100,32,76,69,68,32,66,108,105,110,107
080037D5  4C45 4420 
080037D9  426C 696E 
080037DD  6B        
080037DE  7900      5625          dc.b      121,0
                    5626   @m68kus~1_61:
080037E0  0D0A 456E 5627          dc.b      13,10,69,110,116,101,114,32,53,32,46,46,46,32
080037E4  7465 7220 
080037E8  3520 2E2E 
080037EC  2E20      
080037EE  5265 6164 5628          dc.b      82,101,97,100,32,65,110,97,108,111,103,32,105
080037F2  2041 6E61 
080037F6  6C6F 6720 
080037FA  69        
080037FB  6E70 7574 5629          dc.b      110,112,117,116,32,102,114,111,109,32,65,68
080037FF  2066 726F 
08003803  6D20 4144 
08003807  4320 4368 5630          dc.b      67,32,67,104,97,110,110,101,108,13,10,0
0800380B  616E 6E65 
0800380F  6C0D 0A00 
                    5631   @m68kus~1_62:
08003814  5369 6E67 5632          dc.b      83,105,110,103,108,101,32,66,121,116,101,32
08003818  6C65 2042 
0800381C  7974 6520 
08003820  5772 6974 5633          dc.b      87,114,105,116,101,32,73,110,105,116,105,97
08003824  6520 496E 
08003828  6974 6961 
0800382C  7465 640D 5634          dc.b      116,101,100,13,10,69,110,116,101,114,32,68,97
08003830  0A45 6E74 
08003834  6572 2044 
08003838  61        
08003839  7461 2042 5635          dc.b      116,97,32,66,121,116,101,58,32,0
0800383D  7974 653A 
08003841  2000      
                    5636   @m68kus~1_63:
08003844  456E 7465 5637          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,68
08003848  7220 5661 
0800384C  6C69 6420 
08003850  44        
08003851  6174 6120 5638          dc.b      97,116,97,32,66,121,116,101,58,32,0
08003855  4279 7465 
08003859  3A20 00   
                    5639   @m68kus~1_64:
0800385C  456E 7465 5640          dc.b      69,110,116,101,114,32,65,100,100,114,101,115
08003860  7220 4164 
08003864  6472 6573 
08003868  7320 2830 5641          dc.b      115,32,40,48,48,48,48,48,32,45,32,49,70,70,70
0800386C  3030 3030 
08003870  202D 2031 
08003874  4646 46   
08003877  4629 3A20 5642          dc.b      70,41,58,32,0
0800387B  00        
                    5643   @m68kus~1_65:
0800387C  456E 7465 5644          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,65
08003880  7220 5661 
08003884  6C69 6420 
08003888  41        
08003889  6464 7265 5645          dc.b      100,100,114,101,115,115,58,32,0
0800388D  7373 3A20 
08003891  00        
                    5646   @m68kus~1_66:
08003892  0D0A 5772 5647          dc.b      13,10,87,114,105,116,105,110,103,32,68,97,116
08003896  6974 696E 
0800389A  6720 4461 
0800389E  74        
0800389F  6120 4279 5648          dc.b      97,32,66,121,116,101,32,46,46,46,0
080038A3  7465 202E 
080038A7  2E2E 00   
                    5649   @m68kus~1_67:
080038AA  0D0A 5369 5650          dc.b      13,10,83,105,110,103,108,101,32,66,121,116,101
080038AE  6E67 6C65 
080038B2  2042 7974 
080038B6  65        
080038B7  2052 6561 5651          dc.b      32,82,101,97,100,32,73,110,105,116,105,97,116
080038BB  6420 496E 
080038BF  6974 6961 
080038C3  74        
080038C4  6564 0D0A 5652          dc.b      101,100,13,10,69,110,116,101,114,32,65,100,100
080038C8  456E 7465 
080038CC  7220 4164 
080038D0  64        
080038D1  7265 7373 5653          dc.b      114,101,115,115,32,40,48,48,48,48,48,32,45,32
080038D5  2028 3030 
080038D9  3030 3020 
080038DD  2D20      
080038DF  3146 4646 5654          dc.b      49,70,70,70,70,41,58,32,0
080038E3  4629 3A20 
080038E7  00        
                    5655   @m68kus~1_68:
080038E8  0D0A 5265 5656          dc.b      13,10,82,101,97,100,105,110,103,32,68,97,116
080038EC  6164 696E 
080038F0  6720 4461 
080038F4  74        
080038F5  6120 4279 5657          dc.b      97,32,66,121,116,101,32,46,46,46,0
080038F9  7465 202E 
080038FD  2E2E 00   
                    5658   @m68kus~1_69:
08003900  0D0A 4461 5659          dc.b      13,10,68,97,116,97,32,66,108,111,99,107,32,87
08003904  7461 2042 
08003908  6C6F 636B 
0800390C  2057      
0800390E  7269 7465 5660          dc.b      114,105,116,101,32,73,110,105,116,105,97,116
08003912  2049 6E69 
08003916  7469 6174 
0800391A  6564 0D0A 5661          dc.b      101,100,13,10,69,110,116,101,114,32,83,116,97
0800391E  456E 7465 
08003922  7220 5374 
08003926  61        
08003927  7274 696E 5662          dc.b      114,116,105,110,103,32,65,100,100,114,101,115
0800392B  6720 4164 
0800392F  6472 6573 
08003933  7320 2830 5663          dc.b      115,32,40,48,48,48,48,48,32,45,32,49,70,70,70
08003937  3030 3030 
0800393B  202D 2031 
0800393F  4646 46   
08003942  4629 3A20 5664          dc.b      70,41,58,32,0
08003946  00        
                    5665   @m68kus~1_70:
08003948  456E 7465 5666          dc.b      69,110,116,101,114,32,68,97,116,97,32,66,108
0800394C  7220 4461 
08003950  7461 2042 
08003954  6C        
08003955  6F63 6B20 5667          dc.b      111,99,107,32,83,105,122,101,32,40,48,48,48
08003959  5369 7A65 
0800395D  2028 3030 
08003961  30        
08003962  3030 202D 5668          dc.b      48,48,32,45,32,37,48,53,88,41,58,32,0
08003966  2025 3035 
0800396A  5829 3A20 
0800396E  00        
                    5669   @m68kus~1_71:
08003970  456E 7465 5670          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,66
08003974  7220 5661 
08003978  6C69 6420 
0800397C  42        
0800397D  6C6F 636B 5671          dc.b      108,111,99,107,32,83,105,122,101,32,40,48,48
08003981  2053 697A 
08003985  6520 2830 
08003989  30        
0800398A  3030 3020 5672          dc.b      48,48,48,32,45,32,37,48,53,88,41,58,32,0
0800398E  2D20 2530 
08003992  3558 293A 
08003996  2000      
                    5673   @m68kus~1_72:
08003998  456E 7465 5674          dc.b      69,110,116,101,114,32,83,116,97,114,116,105
0800399C  7220 5374 
080039A0  6172 7469 
080039A4  6E67 2044 5675          dc.b      110,103,32,68,97,116,97,32,66,121,116,101,58
080039A8  6174 6120 
080039AC  4279 7465 
080039B0  3A        
080039B1  2000      5676          dc.b      32,0
                    5677   @m68kus~1_73:
080039B4  0D0A 4461 5678          dc.b      13,10,68,97,116,97,32,66,108,111,99,107,32,82
080039B8  7461 2042 
080039BC  6C6F 636B 
080039C0  2052      
080039C2  6561 6420 5679          dc.b      101,97,100,32,73,110,105,116,105,97,116,101
080039C6  496E 6974 
080039CA  6961 7465 
080039CE  640D 0A45 5680          dc.b      100,13,10,69,110,116,101,114,32,83,116,97,114
080039D2  6E74 6572 
080039D6  2053 7461 
080039DA  72        
080039DB  7469 6E67 5681          dc.b      116,105,110,103,32,65,100,100,114,101,115,115
080039DF  2041 6464 
080039E3  7265 7373 
080039E7  2028 3030 5682          dc.b      32,40,48,48,48,48,48,32,45,32,49,70,70,70,70
080039EB  3030 3020 
080039EF  2D20 3146 
080039F3  4646 46   
080039F6  293A 2000 5683          dc.b      41,58,32,0
                    5684   @m68kus~1_74:
080039FA  456E 7465 5685          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,65
080039FE  7220 5661 
08003A02  6C69 6420 
08003A06  41        
08003A07  6464 7265 5686          dc.b      100,100,114,101,115,115,0
08003A0B  7373 00   
                    5687   @m68kus~1_75:
08003A0E  0D0A 5761 5688          dc.b      13,10,87,97,118,101,102,111,114,109,32,68,65
08003A12  7665 666F 
08003A16  726D 2044 
08003A1A  41        
08003A1B  4320 616E 5689          dc.b      67,32,97,110,100,32,76,69,68,32,66,108,105,110
08003A1F  6420 4C45 
08003A23  4420 426C 
08003A27  696E      
08003A29  6B79 2049 5690          dc.b      107,121,32,73,110,105,116,105,97,116,101,100
08003A2D  6E69 7469 
08003A31  6174 6564 
08003A35  0D0A 00   5691          dc.b      13,10,0
                    5692   @m68kus~1_76:
08003A38  0D0A 5265 5693          dc.b      13,10,82,101,97,100,32,65,110,97,108,111,103
08003A3C  6164 2041 
08003A40  6E61 6C6F 
08003A44  67        
08003A45  2069 6E70 5694          dc.b      32,105,110,112,117,116,32,102,114,111,109,32
08003A49  7574 2066 
08003A4D  726F 6D20 
08003A51  4144 4320 5695          dc.b      65,68,67,32,67,104,97,110,110,101,108,32,73
08003A55  4368 616E 
08003A59  6E65 6C20 
08003A5D  49        
08003A5E  6E69 7469 5696          dc.b      110,105,116,105,97,116,101,100,0
08003A62  6174 6564 
08003A66  00        
                    5697   @m68kus~1_77:
08003A68  0D0A 496E 5698          dc.b      13,10,73,110,118,97,108,105,100,32,83,101,108
08003A6C  7661 6C69 
08003A70  6420 5365 
08003A74  6C        
08003A75  6563 7469 5699          dc.b      101,99,116,105,111,110,44,32,80,108,101,97,115
08003A79  6F6E 2C20 
08003A7D  506C 6561 
08003A81  73        
08003A82  6520 5365 5700          dc.b      101,32,83,101,108,101,99,116,32,97,110,32,79
08003A86  6C65 6374 
08003A8A  2061 6E20 
08003A8E  4F        
08003A8F  7074 696F 5701          dc.b      112,116,105,111,110,32,66,101,116,119,101,101
08003A93  6E20 4265 
08003A97  7477 6565 
08003A9B  6E20 302D 5702          dc.b      110,32,48,45,53,46,0
08003A9F  352E 00   
                    5703   @m68kus~1_78:
08003AA2  0D0A 5072 5704          dc.b      13,10,80,114,111,103,114,97,109,32,101,110,100
08003AA6  6F67 7261 
08003AAA  6D20 656E 
08003AAE  64        
08003AAF  6564 00   5705          dc.b      101,100,0
                    5706          section   data
08003AB2            5707                   align
                    5708   
                    5709   *********************************************************************************************************************************************************
                    5710   * Section for Initialised Data (in theory should be copied to Ram at startup) but is part of program code as we copy whole program to ram at startup
                    5711   ********************************************************************************************************************************************************
                    5712   
          0800 3AB2 5713   DataStart       equ       *
08003AB2            5714   __ungetbuf:     ds.l      1                    ungetbuffer for stdio functions
08003AB6            5715   __allocp:       ds.l      1                    start of free memory block list
08003ABA            5716   __heap:         ds.l      1                    begin of free memory
                    5717   
                    5718   
                    5719   @vsscanf_bufx:
08003ABE  0800 3BEE 5720          dc.l      @vsscanf_buf
                    5721   @vsscanf_1:
08003AC2  0A00      5722          dc.b      10,0
                    5723   __ctype:
08003AC4  0040 4040 5724          dc.b      0,64,64,64,64,64,64,64,64,64,80,80,80,80,80
08003AC8  4040 4040 
08003ACC  4040 5050 
08003AD0  5050 50   
08003AD3  4040 4040 5725          dc.b      64,64,64,64,64,64,64,64,64,64,64,64,64,64,64
08003AD7  4040 4040 
08003ADB  4040 4040 
08003ADF  4040 40   
08003AE2  4040 40D0 5726          dc.b      64,64,64,208,160,160,160,160,160,160,160,160
08003AE6  A0A0 A0A0 
08003AEA  A0A0 A0A0 
08003AEE  A0A0 A0A0 5727          dc.b      160,160,160,160,160,160,160,140,140,140,140
08003AF2  A0A0 A08C 
08003AF6  8C8C 8C   
08003AF9  8C8C 8C8C 5728          dc.b      140,140,140,140,140,140,160,160,160,160,160
08003AFD  8C8C A0A0 
08003B01  A0A0 A0   
08003B04  A0A0 8A8A 5729          dc.b      160,160,138,138,138,138,138,138,130,130,130
08003B08  8A8A 8A8A 
08003B0C  8282 82   
08003B0F  8282 8282 5730          dc.b      130,130,130,130,130,130,130,130,130,130,130
08003B13  8282 8282 
08003B17  8282 82   
08003B1A  8282 8282 5731          dc.b      130,130,130,130,130,130,160,160,160,160,160
08003B1E  8282 A0A0 
08003B22  A0A0 A0   
08003B25  A089 8989 5732          dc.b      160,137,137,137,137,137,137,129,129,129,129
08003B29  8989 8981 
08003B2D  8181 81   
08003B30  8181 8181 5733          dc.b      129,129,129,129,129,129,129,129,129,129,129
08003B34  8181 8181 
08003B38  8181 81   
08003B3B  8181 8181 5734          dc.b      129,129,129,129,129,160,160,160,160,64,0,0,0
08003B3F  81A0 A0A0 
08003B43  A040 0000 
08003B47  00        
08003B48  0000 0000 5735          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003B4C  0000 0000 
08003B50  0000 0000 
08003B54  0000 0000 
08003B58  0000 0000 
08003B5C  0000      
08003B5E  0000 0000 5736          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003B62  0000 0000 
08003B66  0000 0000 
08003B6A  0000 0000 
08003B6E  0000 0000 
08003B72  0000      
08003B74  0000 0000 5737          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003B78  0000 0000 
08003B7C  0000 0000 
08003B80  0000 0000 
08003B84  0000 0000 
08003B88  0000      
08003B8A  0000 0000 5738          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003B8E  0000 0000 
08003B92  0000 0000 
08003B96  0000 0000 
08003B9A  0000 0000 
08003B9E  0000      
08003BA0  0000 0000 5739          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003BA4  0000 0000 
08003BA8  0000 0000 
08003BAC  0000 0000 
08003BB0  0000 0000 
08003BB4  0000      
08003BB6  0000 0000 5740          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003BBA  0000 0000 
08003BBE  0000 0000 
08003BC2  0000 00   
                    5741   @itoa_1:
08003BC6  2D32 3134 5742          dc.b      45,50,49,52,55,52,56,51,54,52,56,0
08003BCA  3734 3833 
08003BCE  3634 3800 
                    5743          section   bss
08003BD2            5744                   align
                    5745   
          0800 3BD2 5746   DataEnd         equ       *                    this label will equate to the address of the last byte of global variable in it
          0000 0120 5747   DataLength      equ       DataEnd-DataStart    length of data needed to copy to Ram on bootup
                    5748   
                    5749   *********************************************************************************************************
                    5750   * Section for uninitialised Data which is set to zero, i.e. we should set this space to zero at starup
                    5751   *********************************************************************************************************
          0800 3BD2 5752   BssStart       equ       *
                    5753   
                    5754   _i:
08003BD2            5755          ds.b      4
                    5756   _x:
08003BD6            5757          ds.b      4
                    5758   _y:
08003BDA            5759          ds.b      4
                    5760   _z:
08003BDE            5761          ds.b      4
                    5762   _PortA_Count:
08003BE2            5763          ds.b      4
                    5764   _Timer1Count:
08003BE6            5765          ds.b      1
                    5766   _Timer2Count:
08003BE8            5767          ds.b      1
                    5768   _Timer3Count:
08003BEA            5769          ds.b      1
                    5770   _Timer4Count:
08003BEC            5771          ds.b      1
                    5772   @vsscanf_buf:
08003BEE            5773          ds.b      80
                    5774          section   heap
08003C3E            5775                  align
                    5776   
          0800 3C3E 5777   BssEnd         equ       *
          0000 006C 5778   BssLength      equ       BssEnd-BssStart       length of zeroed data needed to copy to Ram on bootup
                    5779   
                    5780   *********************************************************************************************************
                    5781   * Section for Heap
                    5782   *********************************************************************************************************
                    5783   
          0800 3C3E 5784   heap           equ       *
08003C3E            5785                  align
          0800 0000

Assembly errors: 0
