680x0 MACRO ASSEMBLER   Version 5.00   (c) 1992-2005 Peter J. Fondse

Date: 28 Mar 2023      Time: 12:54:01          Source: C:\IDE68K\ASS5_PARTA\ASS5_PARTA.SRC

                       1          section   code
                       2   **********************************************************************************************************
                       3   * CSTART.ASM  -  C startup-code
                       4   *
                       5   *          Initialises the system prior to running the users main() program
                       6   *
                       7   *          1) Sets up the user program stack pointer
                       8   *          2) Switches to User mode in the 68000
                       9   *          3) Enables All Interrupts 1-7 on 68000
                      10   *          4) Copies all initialised C program variables from Rom to Ram prior to running main()
                      11   *
                      12   **********************************************************************************************************
00000000              13                   align
                      14   
                      15   
                      16   **********************************************************************************************************
                      17   * The Following ORG Statement marks the address of the start of the this CStart Program
                      18   *
                      19   * The debug Monitor and Flash Load and Program routines assume your program lives here
                      20   **********************************************************************************************************
08000000              21                   org       $08000000
08000000  46FC 2000   22   start:          move.w    #$2000,SR             clear interrupts to enable all, move to supervisor mode
                      23   
                      24   ******************************************************************************************
                      25   * Set unitialised global variables to 0 at startup
                      26   ******************************************************************************************
08000004  207C 0800   27   mainloop        movea.l   #BssStart,a0          point a0 to the start of the initialised data section held in ROM
08000008  397A      
0800000A  203C 0000   28                   move.l    #BssLength,d0         figure out how many bytes of C program variables data to copy
0800000E  006C      
08000010  6700 0024   29                   beq       go_main               if no data to copy go straight to program
08000014  10FC 0000   30   Zeroinit        move.b    #0,(a0)+              copy the C program initialise variables from rom to ram
08000018  5380        31                   subq.l    #1,d0
0800001A  66F8        32                   bne       Zeroinit
                      33   
                      34   *******************************************************************************************
                      35   * last minute initialisation before calling main
                      36   *******************************************************************************************
                      37   
0800001C  23FC FFFF   38                   move.l    #-1,__ungetbuf         required for use of scanf() etc in C programs
08000020  FFFF 0800 
08000024  385A      
08000026  42B9 0800   39                   clr.l     __allocp               used by malloc() in C
0800002A  385E      
0800002C  23FC 0800   40                   move.l    #heap,__heap           pointer to free memory
08000030  39E6 0800 
08000034  3862      
08000036  4EB9 0800   41   go_main         jsr       _main
0800003A  16C0      
0800003C  60C2        42                   bra       start
                      43   
                      44   ; C:\IDE68K\ASS5_PARTA\M68KUSERPROGRAM (DE1).C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                      45   ; #include <stdio.h>
                      46   ; #include <string.h>
                      47   ; #include <ctype.h>
                      48   ; //IMPORTANT
                      49   ; //
                      50   ; // Uncomment one of the two #defines below
                      51   ; // Define StartOfExceptionVectorTable as 08030000 if running programs from sram or
                      52   ; // 0B000000 for running programs from dram
                      53   ; //
                      54   ; // In your labs, you will initially start by designing a system with SRam and later move to
                      55   ; // Dram, so these constants will need to be changed based on the version of the system you have
                      56   ; // building
                      57   ; //
                      58   ; // The working 68k system SOF file posted on canvas that you can use for your pre-lab
                      59   ; // is based around Dram so #define accordingly before building
                      60   ; //#define StartOfExceptionVectorTable 0x08030000
                      61   ; #define StartOfExceptionVectorTable 0x0B000000
                      62   ; /**********************************************************************************************
                      63   ; **	Parallel port addresses
                      64   ; **********************************************************************************************/
                      65   ; #define PortA   *(volatile unsigned char *)(0x00400000)
                      66   ; #define PortB   *(volatile unsigned char *)(0x00400002)
                      67   ; #define PortC   *(volatile unsigned char *)(0x00400004)
                      68   ; #define PortD   *(volatile unsigned char *)(0x00400006)
                      69   ; #define PortE   *(volatile unsigned char *)(0x00400008)
                      70   ; /*********************************************************************************************
                      71   ; **	Hex 7 seg displays port addresses
                      72   ; *********************************************************************************************/
                      73   ; #define HEX_A        *(volatile unsigned char *)(0x00400010)
                      74   ; #define HEX_B        *(volatile unsigned char *)(0x00400012)
                      75   ; #define HEX_C        *(volatile unsigned char *)(0x00400014)    // de2 only
                      76   ; #define HEX_D        *(volatile unsigned char *)(0x00400016)    // de2 only
                      77   ; /**********************************************************************************************
                      78   ; **	LCD display port addresses
                      79   ; **********************************************************************************************/
                      80   ; #define LCDcommand   *(volatile unsigned char *)(0x00400020)
                      81   ; #define LCDdata      *(volatile unsigned char *)(0x00400022)
                      82   ; /********************************************************************************************
                      83   ; **	Timer Port addresses
                      84   ; *********************************************************************************************/
                      85   ; #define Timer1Data      *(volatile unsigned char *)(0x00400030)
                      86   ; #define Timer1Control   *(volatile unsigned char *)(0x00400032)
                      87   ; #define Timer1Status    *(volatile unsigned char *)(0x00400032)
                      88   ; #define Timer2Data      *(volatile unsigned char *)(0x00400034)
                      89   ; #define Timer2Control   *(volatile unsigned char *)(0x00400036)
                      90   ; #define Timer2Status    *(volatile unsigned char *)(0x00400036)
                      91   ; #define Timer3Data      *(volatile unsigned char *)(0x00400038)
                      92   ; #define Timer3Control   *(volatile unsigned char *)(0x0040003A)
                      93   ; #define Timer3Status    *(volatile unsigned char *)(0x0040003A)
                      94   ; #define Timer4Data      *(volatile unsigned char *)(0x0040003C)
                      95   ; #define Timer4Control   *(volatile unsigned char *)(0x0040003E)
                      96   ; #define Timer4Status    *(volatile unsigned char *)(0x0040003E)
                      97   ; /*********************************************************************************************
                      98   ; **	RS232 port addresses
                      99   ; *********************************************************************************************/
                     100   ; #define RS232_Control     *(volatile unsigned char *)(0x00400040)
                     101   ; #define RS232_Status      *(volatile unsigned char *)(0x00400040)
                     102   ; #define RS232_TxData      *(volatile unsigned char *)(0x00400042)
                     103   ; #define RS232_RxData      *(volatile unsigned char *)(0x00400042)
                     104   ; #define RS232_Baud        *(volatile unsigned char *)(0x00400044)
                     105   ; /*********************************************************************************************
                     106   ; **	PIA 1 and 2 port addresses
                     107   ; *********************************************************************************************/
                     108   ; #define PIA1_PortA_Data     *(volatile unsigned char *)(0x00400050)         // combined data and data direction register share same address
                     109   ; #define PIA1_PortA_Control *(volatile unsigned char *)(0x00400052)
                     110   ; #define PIA1_PortB_Data     *(volatile unsigned char *)(0x00400054)         // combined data and data direction register share same address
                     111   ; #define PIA1_PortB_Control *(volatile unsigned char *)(0x00400056)
                     112   ; #define PIA2_PortA_Data     *(volatile unsigned char *)(0x00400060)         // combined data and data direction register share same address
                     113   ; #define PIA2_PortA_Control *(volatile unsigned char *)(0x00400062)
                     114   ; #define PIA2_PortB_data     *(volatile unsigned char *)(0x00400064)         // combined data and data direction register share same address
                     115   ; #define PIA2_PortB_Control *(volatile unsigned char *)(0x00400066)
                     116   ; /*************************************************************
                     117   ; ** IIC Controller registers
                     118   ; **************************************************************/
                     119   ; //IIC Registers
                     120   ; #define IIC_Prescale_Low            (*(volatile unsigned char *)(0x00408000))
                     121   ; #define IIC_Prescale_High           (*(volatile unsigned char *)(0x00408002))
                     122   ; #define IIC_Control                 (*(volatile unsigned char *)(0x00408004))
                     123   ; #define IIC_Transmit_Receive        (*(volatile unsigned char *)(0x00408006))
                     124   ; #define IIC_Command_Status          (*(volatile unsigned char *)(0x00408008))
                     125   ; /*********************************************************************************************************************************
                     126   ; (( DO NOT initialise global variables here, do it main even if you want 0
                     127   ; (( it's a limitation of the compiler
                     128   ; (( YOU HAVE BEEN WARNED
                     129   ; *********************************************************************************************************************************/
                     130   ; unsigned int i, x, y, z, PortA_Count;
                     131   ; unsigned char Timer1Count, Timer2Count, Timer3Count, Timer4Count ;
                     132   ; /*******************************************************************************************
                     133   ; ** Function Prototypes
                     134   ; *******************************************************************************************/
                     135   ; void Wait1ms(void);
                     136   ; void Wait3ms(void);
                     137   ; void Init_LCD(void) ;
                     138   ; void LCDOutchar(int c);
                     139   ; void LCDOutMess(char *theMessage);
                     140   ; void LCDClearln(void);
                     141   ; void LCDline1Message(char *theMessage);
                     142   ; void LCDline2Message(char *theMessage);
                     143   ; int sprintf(char *out, const char *format, ...) ;
                     144   ; /*****************************************************************************************
                     145   ; **	Interrupt service routine for Timers
                     146   ; **
                     147   ; **  Timers 1 - 4 share a common IRQ on the CPU  so this function uses polling to figure
                     148   ; **  out which timer is producing the interrupt
                     149   ; **
                     150   ; *****************************************************************************************/
                     151   ; void Timer_ISR()
                     152   ; {
                     153   _Timer_ISR:
                     154   ; if(Timer1Status == 1) {         // Did Timer 1 produce the Interrupt?
0800003E  1039 0040  155          move.b    4194354,D0
08000042  0032      
08000044  0C00 0001  156          cmp.b     #1,D0
08000048  6608       157          bne.s     Timer_ISR_1
                     158   ; Timer1Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
0800004A  13FC 0003  159          move.b    #3,4194354
0800004E  0040 0032 
                     160   Timer_ISR_1:
                     161   ; //PortA = Timer1Count++ ;     // increment an LED count on PortA with each tick of Timer 1
                     162   ; }
                     163   ; if(Timer2Status == 1) {         // Did Timer 2 produce the Interrupt?
08000052  1039 0040  164          move.b    4194358,D0
08000056  0036      
08000058  0C00 0001  165          cmp.b     #1,D0
0800005C  6608       166          bne.s     Timer_ISR_3
                     167   ; Timer2Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
0800005E  13FC 0003  168          move.b    #3,4194358
08000062  0040 0036 
                     169   Timer_ISR_3:
                     170   ; //PortC = Timer2Count++ ;     // increment an LED count on PortC with each tick of Timer 2
                     171   ; }
                     172   ; if(Timer3Status == 1) {         // Did Timer 3 produce the Interrupt?
08000066  1039 0040  173          move.b    4194362,D0
0800006A  003A      
0800006C  0C00 0001  174          cmp.b     #1,D0
08000070  6608       175          bne.s     Timer_ISR_5
                     176   ; Timer3Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000072  13FC 0003  177          move.b    #3,4194362
08000076  0040 003A 
                     178   Timer_ISR_5:
                     179   ; //HEX_A = Timer3Count++ ;     // increment a HEX count on Port HEX_A with each tick of Timer 3
                     180   ; }
                     181   ; if(Timer4Status == 1) {         // Did Timer 4 produce the Interrupt?
0800007A  1039 0040  182          move.b    4194366,D0
0800007E  003E      
08000080  0C00 0001  183          cmp.b     #1,D0
08000084  6608       184          bne.s     Timer_ISR_7
                     185   ; Timer4Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000086  13FC 0003  186          move.b    #3,4194366
0800008A  0040 003E 
                     187   Timer_ISR_7:
0800008E  4E75       188          rts
                     189   ; //HEX_B = Timer4Count++ ;     // increment a HEX count on HEX_B with each tick of Timer 4
                     190   ; }
                     191   ; }
                     192   ; /*****************************************************************************************
                     193   ; **	Interrupt service routine for ACIA. This device has it's own dedicate IRQ level
                     194   ; **  Add your code here to poll Status register and clear interrupt
                     195   ; *****************************************************************************************/
                     196   ; void ACIA_ISR()
                     197   ; {}
                     198   _ACIA_ISR:
08000090  4E75       199          rts
                     200   ; /***************************************************************************************
                     201   ; **	Interrupt service routine for PIAs 1 and 2. These devices share an IRQ level
                     202   ; **  Add your code here to poll Status register and clear interrupt
                     203   ; *****************************************************************************************/
                     204   ; void PIA_ISR()
                     205   ; {}
                     206   _PIA_ISR:
08000092  4E75       207          rts
                     208   ; /***********************************************************************************
                     209   ; **	Interrupt service routine for Key 2 on DE1 board. Add your own response here
                     210   ; ************************************************************************************/
                     211   ; void Key2PressISR()
                     212   ; {}
                     213   _Key2PressISR:
08000094  4E75       214          rts
                     215   ; /***********************************************************************************
                     216   ; **	Interrupt service routine for Key 1 on DE1 board. Add your own response here
                     217   ; ************************************************************************************/
                     218   ; void Key1PressISR()
                     219   ; {}
                     220   _Key1PressISR:
08000096  4E75       221          rts
                     222   ; /************************************************************************************
                     223   ; **   Delay Subroutine to give the 68000 something useless to do to waste 1 mSec
                     224   ; ************************************************************************************/
                     225   ; void Wait1ms(void)
                     226   ; {
                     227   _Wait1ms:
08000098  2F02       228          move.l    D2,-(A7)
                     229   ; int  i ;
                     230   ; for(i = 0; i < 1000; i ++)
0800009A  4282       231          clr.l     D2
                     232   Wait1ms_1:
0800009C  0C82 0000  233          cmp.l     #1000,D2
080000A0  03E8      
080000A2  6C04       234          bge.s     Wait1ms_3
080000A4  5282       235          addq.l    #1,D2
080000A6  60F4       236          bra       Wait1ms_1
                     237   Wait1ms_3:
080000A8  241F       238          move.l    (A7)+,D2
080000AA  4E75       239          rts
                     240   ; ;
                     241   ; }
                     242   ; /************************************************************************************
                     243   ; **  Subroutine to give the 68000 something useless to do to waste 3 mSec
                     244   ; **************************************************************************************/
                     245   ; void Wait3ms(void)
                     246   ; {
                     247   _Wait3ms:
080000AC  2F02       248          move.l    D2,-(A7)
                     249   ; int i ;
                     250   ; for(i = 0; i < 3; i++)
080000AE  4282       251          clr.l     D2
                     252   Wait3ms_1:
080000B0  0C82 0000  253          cmp.l     #3,D2
080000B4  0003      
080000B6  6C0A       254          bge.s     Wait3ms_3
                     255   ; Wait1ms() ;
080000B8  4EB9 0800  256          jsr       _Wait1ms
080000BC  0098      
080000BE  5282       257          addq.l    #1,D2
080000C0  60EE       258          bra       Wait3ms_1
                     259   Wait3ms_3:
080000C2  241F       260          move.l    (A7)+,D2
080000C4  4E75       261          rts
                     262   ; }
                     263   ; /*********************************************************************************************
                     264   ; **  Subroutine to initialise the LCD display by writing some commands to the LCD internal registers
                     265   ; **  Sets it for parallel port and 2 line display mode (if I recall correctly)
                     266   ; *********************************************************************************************/
                     267   ; void Init_LCD(void)
                     268   ; {
                     269   _Init_LCD:
                     270   ; LCDcommand = 0x0c ;
080000C6  13FC 000C  271          move.b    #12,4194336
080000CA  0040 0020 
                     272   ; Wait3ms() ;
080000CE  4EB9 0800  273          jsr       _Wait3ms
080000D2  00AC      
                     274   ; LCDcommand = 0x38 ;
080000D4  13FC 0038  275          move.b    #56,4194336
080000D8  0040 0020 
                     276   ; Wait3ms() ;
080000DC  4EB9 0800  277          jsr       _Wait3ms
080000E0  00AC      
080000E2  4E75       278          rts
                     279   ; }
                     280   ; /*********************************************************************************************
                     281   ; **  Subroutine to initialise the RS232 Port by writing some commands to the internal registers
                     282   ; *********************************************************************************************/
                     283   ; void Init_RS232(void)
                     284   ; {
                     285   _Init_RS232:
                     286   ; RS232_Control = 0x15 ; //  %00010101 set up 6850 uses divide by 16 clock, set RTS low, 8 bits no parity, 1 stop bit, transmitter interrupt disabled
080000E4  13FC 0015  287          move.b    #21,4194368
080000E8  0040 0040 
                     288   ; RS232_Baud = 0x1 ;      // program baud rate generator 001 = 115k, 010 = 57.6k, 011 = 38.4k, 100 = 19.2, all others = 9600
080000EC  13FC 0001  289          move.b    #1,4194372
080000F0  0040 0044 
080000F4  4E75       290          rts
                     291   ; }
                     292   ; /*********************************************************************************************************
                     293   ; **  Subroutine to provide a low level output function to 6850 ACIA
                     294   ; **  This routine provides the basic functionality to output a single character to the serial Port
                     295   ; **  to allow the board to communicate with HyperTerminal Program
                     296   ; **
                     297   ; **  NOTE you do not call this function directly, instead you call the normal putchar() function
                     298   ; **  which in turn calls _putch() below). Other functions like puts(), printf() call putchar() so will
                     299   ; **  call _putch() also
                     300   ; *********************************************************************************************************/
                     301   ; int _putch( int c)
                     302   ; {
                     303   __putch:
080000F6  4E56 0000  304          link      A6,#0
                     305   ; while((RS232_Status & (char)(0x02)) != (char)(0x02))    // wait for Tx bit in status register or 6850 serial comms chip to be '1'
                     306   _putch_1:
080000FA  1039 0040  307          move.b    4194368,D0
080000FE  0040      
08000100  C03C 0002  308          and.b     #2,D0
08000104  0C00 0002  309          cmp.b     #2,D0
08000108  6702       310          beq.s     _putch_3
0800010A  60EE       311          bra       _putch_1
                     312   _putch_3:
                     313   ; ;
                     314   ; RS232_TxData = (c & (char)(0x7f));                      // write to the data register to output the character (mask off bit 8 to keep it 7 bit ASCII)
0800010C  202E 0008  315          move.l    8(A6),D0
08000110  C0BC 0000  316          and.l     #127,D0
08000114  007F      
08000116  13C0 0040  317          move.b    D0,4194370
0800011A  0042      
                     318   ; return c ;                                              // putchar() expects the character to be returned
0800011C  202E 0008  319          move.l    8(A6),D0
08000120  4E5E       320          unlk      A6
08000122  4E75       321          rts
                     322   ; }
                     323   ; /*********************************************************************************************************
                     324   ; **  Subroutine to provide a low level input function to 6850 ACIA
                     325   ; **  This routine provides the basic functionality to input a single character from the serial Port
                     326   ; **  to allow the board to communicate with HyperTerminal Program Keyboard (your PC)
                     327   ; **
                     328   ; **  NOTE you do not call this function directly, instead you call the normal getchar() function
                     329   ; **  which in turn calls _getch() below). Other functions like gets(), scanf() call getchar() so will
                     330   ; **  call _getch() also
                     331   ; *********************************************************************************************************/
                     332   ; int _getch( void )
                     333   ; {
                     334   __getch:
08000124  4E56 FFFC  335          link      A6,#-4
                     336   ; char c ;
                     337   ; while((RS232_Status & (char)(0x01)) != (char)(0x01))    // wait for Rx bit in 6850 serial comms chip status register to be '1'
                     338   _getch_1:
08000128  1039 0040  339          move.b    4194368,D0
0800012C  0040      
0800012E  C03C 0001  340          and.b     #1,D0
08000132  0C00 0001  341          cmp.b     #1,D0
08000136  6702       342          beq.s     _getch_3
08000138  60EE       343          bra       _getch_1
                     344   _getch_3:
                     345   ; ;
                     346   ; return (RS232_RxData & (char)(0x7f));                   // read received character, mask off top bit and return as 7 bit ASCII character
0800013A  1039 0040  347          move.b    4194370,D0
0800013E  0042      
08000140  C0BC 0000  348          and.l     #255,D0
08000144  00FF      
08000146  C0BC 0000  349          and.l     #127,D0
0800014A  007F      
0800014C  4E5E       350          unlk      A6
0800014E  4E75       351          rts
                     352   ; }
                     353   ; /******************************************************************************
                     354   ; **  Subroutine to output a single character to the 2 row LCD display
                     355   ; **  It is assumed the character is an ASCII code and it will be displayed at the
                     356   ; **  current cursor position
                     357   ; *******************************************************************************/
                     358   ; void LCDOutchar(int c)
                     359   ; {
                     360   _LCDOutchar:
08000150  4E56 0000  361          link      A6,#0
                     362   ; LCDdata = (char)(c);
08000154  202E 0008  363          move.l    8(A6),D0
08000158  13C0 0040  364          move.b    D0,4194338
0800015C  0022      
                     365   ; Wait1ms() ;
0800015E  4EB9 0800  366          jsr       _Wait1ms
08000162  0098      
08000164  4E5E       367          unlk      A6
08000166  4E75       368          rts
                     369   ; }
                     370   ; /**********************************************************************************
                     371   ; *subroutine to output a message at the current cursor position of the LCD display
                     372   ; ************************************************************************************/
                     373   ; void LCDOutMessage(char *theMessage)
                     374   ; {
                     375   _LCDOutMessage:
08000168  4E56 FFFC  376          link      A6,#-4
                     377   ; char c ;
                     378   ; while((c = *theMessage++) != 0)     // output characters from the string until NULL
                     379   LCDOutMessage_1:
0800016C  206E 0008  380          move.l    8(A6),A0
08000170  52AE 0008  381          addq.l    #1,8(A6)
08000174  1D50 FFFF  382          move.b    (A0),-1(A6)
08000178  1010       383          move.b    (A0),D0
0800017A  6714       384          beq.s     LCDOutMessage_3
                     385   ; LCDOutchar(c) ;
0800017C  122E FFFF  386          move.b    -1(A6),D1
08000180  4881       387          ext.w     D1
08000182  48C1       388          ext.l     D1
08000184  2F01       389          move.l    D1,-(A7)
08000186  4EB9 0800  390          jsr       _LCDOutchar
0800018A  0150      
0800018C  584F       391          addq.w    #4,A7
0800018E  60DC       392          bra       LCDOutMessage_1
                     393   LCDOutMessage_3:
08000190  4E5E       394          unlk      A6
08000192  4E75       395          rts
                     396   ; }
                     397   ; /******************************************************************************
                     398   ; *subroutine to clear the line by issuing 24 space characters
                     399   ; *******************************************************************************/
                     400   ; void LCDClearln(void)
                     401   ; {
                     402   _LCDClearln:
08000194  2F02       403          move.l    D2,-(A7)
                     404   ; int i ;
                     405   ; for(i = 0; i < 24; i ++)
08000196  4282       406          clr.l     D2
                     407   LCDClearln_1:
08000198  0C82 0000  408          cmp.l     #24,D2
0800019C  0018      
0800019E  6C10       409          bge.s     LCDClearln_3
                     410   ; LCDOutchar(' ') ;       // write a space char to the LCD display
080001A0  4878 0020  411          pea       32
080001A4  4EB9 0800  412          jsr       _LCDOutchar
080001A8  0150      
080001AA  584F       413          addq.w    #4,A7
080001AC  5282       414          addq.l    #1,D2
080001AE  60E8       415          bra       LCDClearln_1
                     416   LCDClearln_3:
080001B0  241F       417          move.l    (A7)+,D2
080001B2  4E75       418          rts
                     419   ; }
                     420   ; /******************************************************************************
                     421   ; **  Subroutine to move the LCD cursor to the start of line 1 and clear that line
                     422   ; *******************************************************************************/
                     423   ; void LCDLine1Message(char *theMessage)
                     424   ; {
                     425   _LCDLine1Message:
080001B4  4E56 0000  426          link      A6,#0
                     427   ; LCDcommand = 0x80 ;
080001B8  13FC 0080  428          move.b    #128,4194336
080001BC  0040 0020 
                     429   ; Wait3ms();
080001C0  4EB9 0800  430          jsr       _Wait3ms
080001C4  00AC      
                     431   ; LCDClearln() ;
080001C6  4EB9 0800  432          jsr       _LCDClearln
080001CA  0194      
                     433   ; LCDcommand = 0x80 ;
080001CC  13FC 0080  434          move.b    #128,4194336
080001D0  0040 0020 
                     435   ; Wait3ms() ;
080001D4  4EB9 0800  436          jsr       _Wait3ms
080001D8  00AC      
                     437   ; LCDOutMessage(theMessage) ;
080001DA  2F2E 0008  438          move.l    8(A6),-(A7)
080001DE  4EB9 0800  439          jsr       _LCDOutMessage
080001E2  0168      
080001E4  584F       440          addq.w    #4,A7
080001E6  4E5E       441          unlk      A6
080001E8  4E75       442          rts
                     443   ; }
                     444   ; /******************************************************************************
                     445   ; **  Subroutine to move the LCD cursor to the start of line 2 and clear that line
                     446   ; *******************************************************************************/
                     447   ; void LCDLine2Message(char *theMessage)
                     448   ; {
                     449   _LCDLine2Message:
080001EA  4E56 0000  450          link      A6,#0
                     451   ; LCDcommand = 0xC0 ;
080001EE  13FC 00C0  452          move.b    #192,4194336
080001F2  0040 0020 
                     453   ; Wait3ms();
080001F6  4EB9 0800  454          jsr       _Wait3ms
080001FA  00AC      
                     455   ; LCDClearln() ;
080001FC  4EB9 0800  456          jsr       _LCDClearln
08000200  0194      
                     457   ; LCDcommand = 0xC0 ;
08000202  13FC 00C0  458          move.b    #192,4194336
08000206  0040 0020 
                     459   ; Wait3ms() ;
0800020A  4EB9 0800  460          jsr       _Wait3ms
0800020E  00AC      
                     461   ; LCDOutMessage(theMessage) ;
08000210  2F2E 0008  462          move.l    8(A6),-(A7)
08000214  4EB9 0800  463          jsr       _LCDOutMessage
08000218  0168      
0800021A  584F       464          addq.w    #4,A7
0800021C  4E5E       465          unlk      A6
0800021E  4E75       466          rts
                     467   ; }
                     468   ; /*********************************************************************************************************************************
                     469   ; **  IMPORTANT FUNCTION
                     470   ; **  This function install an exception handler so you can capture and deal with any 68000 exception in your program
                     471   ; **  You pass it the name of a function in your code that will get called in response to the exception (as the 1st parameter)
                     472   ; **  and in the 2nd parameter, you pass it the exception number that you want to take over (see 68000 exceptions for details)
                     473   ; **  Calling this function allows you to deal with Interrupts for example
                     474   ; ***********************************************************************************************************************************/
                     475   ; void InstallExceptionHandler( void (*function_ptr)(), int level)
                     476   ; {
                     477   _InstallExceptionHandler:
08000220  4E56 FFFC  478          link      A6,#-4
                     479   ; volatile long int *RamVectorAddress = (volatile long int *)(StartOfExceptionVectorTable) ;   // pointer to the Ram based interrupt vector table created in Cstart in debug monitor
08000224  2D7C 0B00  480          move.l    #184549376,-4(A6)
08000228  0000 FFFC 
                     481   ; RamVectorAddress[level] = (long int *)(function_ptr);                       // install the address of our function into the exception table
0800022C  206E FFFC  482          move.l    -4(A6),A0
08000230  202E 000C  483          move.l    12(A6),D0
08000234  E588       484          lsl.l     #2,D0
08000236  21AE 0008  485          move.l    8(A6),0(A0,D0.L)
0800023A  0800      
0800023C  4E5E       486          unlk      A6
0800023E  4E75       487          rts
                     488   ; }
                     489   ; char xtod(int c)
                     490   ; {
                     491   _xtod:
08000240  4E56 0000  492          link      A6,#0
08000244  2F02       493          move.l    D2,-(A7)
08000246  242E 0008  494          move.l    8(A6),D2
                     495   ; if ((char)(c) <= (char)('9'))
0800024A  0C02 0039  496          cmp.b     #57,D2
0800024E  6E08       497          bgt.s     xtod_1
                     498   ; return c - (char)(0x30);    // 0 - 9 = 0x30 - 0x39 so convert to number by sutracting 0x30
08000250  1002       499          move.b    D2,D0
08000252  0400 0030  500          sub.b     #48,D0
08000256  6014       501          bra.s     xtod_3
                     502   xtod_1:
                     503   ; else if((char)(c) > (char)('F'))    // assume lower case
08000258  0C02 0046  504          cmp.b     #70,D2
0800025C  6F08       505          ble.s     xtod_4
                     506   ; return c - (char)(0x57);    // a-f = 0x61-66 so needs to be converted to 0x0A - 0x0F so subtract 0x57
0800025E  1002       507          move.b    D2,D0
08000260  0400 0057  508          sub.b     #87,D0
08000264  6006       509          bra.s     xtod_3
                     510   xtod_4:
                     511   ; else
                     512   ; return c - (char)(0x37);    // A-F = 0x41-46 so needs to be converted to 0x0A - 0x0F so subtract 0x37
08000266  1002       513          move.b    D2,D0
08000268  0400 0037  514          sub.b     #55,D0
                     515   xtod_3:
0800026C  241F       516          move.l    (A7)+,D2
0800026E  4E5E       517          unlk      A6
08000270  4E75       518          rts
                     519   ; }
                     520   ; int Get2HexDigits(char *CheckSumPtr)
                     521   ; {
                     522   _Get2HexDigits:
08000272  4E56 0000  523          link      A6,#0
08000276  2F02       524          move.l    D2,-(A7)
                     525   ; register int i = (xtod(_getch()) << 4) | (xtod(_getch()));
08000278  2F00       526          move.l    D0,-(A7)
0800027A  4EB9 0800  527          jsr       __getch
0800027E  0124      
08000280  2200       528          move.l    D0,D1
08000282  201F       529          move.l    (A7)+,D0
08000284  2F01       530          move.l    D1,-(A7)
08000286  4EB9 0800  531          jsr       _xtod
0800028A  0240      
0800028C  584F       532          addq.w    #4,A7
0800028E  C0BC 0000  533          and.l     #255,D0
08000292  00FF      
08000294  E980       534          asl.l     #4,D0
08000296  2F00       535          move.l    D0,-(A7)
08000298  2F01       536          move.l    D1,-(A7)
0800029A  4EB9 0800  537          jsr       __getch
0800029E  0124      
080002A0  221F       538          move.l    (A7)+,D1
080002A2  2F00       539          move.l    D0,-(A7)
080002A4  4EB9 0800  540          jsr       _xtod
080002A8  0240      
080002AA  584F       541          addq.w    #4,A7
080002AC  2200       542          move.l    D0,D1
080002AE  201F       543          move.l    (A7)+,D0
080002B0  C2BC 0000  544          and.l     #255,D1
080002B4  00FF      
080002B6  8081       545          or.l      D1,D0
080002B8  2400       546          move.l    D0,D2
                     547   ; if(CheckSumPtr)
080002BA  4AAE 0008  548          tst.l     8(A6)
080002BE  6706       549          beq.s     Get2HexDigits_1
                     550   ; *CheckSumPtr += i ;
080002C0  206E 0008  551          move.l    8(A6),A0
080002C4  D510       552          add.b     D2,(A0)
                     553   Get2HexDigits_1:
                     554   ; return i ;
080002C6  2002       555          move.l    D2,D0
080002C8  241F       556          move.l    (A7)+,D2
080002CA  4E5E       557          unlk      A6
080002CC  4E75       558          rts
                     559   ; }
                     560   ; int Get4HexDigits(char *CheckSumPtr)
                     561   ; {
                     562   _Get4HexDigits:
080002CE  4E56 0000  563          link      A6,#0
                     564   ; return (Get2HexDigits(CheckSumPtr) << 8) | (Get2HexDigits(CheckSumPtr));
080002D2  2F2E 0008  565          move.l    8(A6),-(A7)
080002D6  4EB9 0800  566          jsr       _Get2HexDigits
080002DA  0272      
080002DC  584F       567          addq.w    #4,A7
080002DE  E180       568          asl.l     #8,D0
080002E0  2F00       569          move.l    D0,-(A7)
080002E2  2F2E 0008  570          move.l    8(A6),-(A7)
080002E6  4EB9 0800  571          jsr       _Get2HexDigits
080002EA  0272      
080002EC  584F       572          addq.w    #4,A7
080002EE  2200       573          move.l    D0,D1
080002F0  201F       574          move.l    (A7)+,D0
080002F2  8081       575          or.l      D1,D0
080002F4  4E5E       576          unlk      A6
080002F6  4E75       577          rts
                     578   ; }
                     579   ; int Get6HexDigits(char *CheckSumPtr)
                     580   ; {
                     581   _Get6HexDigits:
080002F8  4E56 0000  582          link      A6,#0
                     583   ; return (Get4HexDigits(CheckSumPtr) << 8) | (Get2HexDigits(CheckSumPtr));
080002FC  2F2E 0008  584          move.l    8(A6),-(A7)
08000300  4EB9 0800  585          jsr       _Get4HexDigits
08000304  02CE      
08000306  584F       586          addq.w    #4,A7
08000308  E180       587          asl.l     #8,D0
0800030A  2F00       588          move.l    D0,-(A7)
0800030C  2F2E 0008  589          move.l    8(A6),-(A7)
08000310  4EB9 0800  590          jsr       _Get2HexDigits
08000314  0272      
08000316  584F       591          addq.w    #4,A7
08000318  2200       592          move.l    D0,D1
0800031A  201F       593          move.l    (A7)+,D0
0800031C  8081       594          or.l      D1,D0
0800031E  4E5E       595          unlk      A6
08000320  4E75       596          rts
                     597   ; }
                     598   ; int Get8HexDigits(char *CheckSumPtr)
                     599   ; {
                     600   _Get8HexDigits:
08000322  4E56 0000  601          link      A6,#0
                     602   ; return (Get4HexDigits(CheckSumPtr) << 16) | (Get4HexDigits(CheckSumPtr));
08000326  2F2E 0008  603          move.l    8(A6),-(A7)
0800032A  4EB9 0800  604          jsr       _Get4HexDigits
0800032E  02CE      
08000330  584F       605          addq.w    #4,A7
08000332  E180       606          asl.l     #8,D0
08000334  E180       607          asl.l     #8,D0
08000336  2F00       608          move.l    D0,-(A7)
08000338  2F2E 0008  609          move.l    8(A6),-(A7)
0800033C  4EB9 0800  610          jsr       _Get4HexDigits
08000340  02CE      
08000342  584F       611          addq.w    #4,A7
08000344  2200       612          move.l    D0,D1
08000346  201F       613          move.l    (A7)+,D0
08000348  8081       614          or.l      D1,D0
0800034A  4E5E       615          unlk      A6
0800034C  4E75       616          rts
                     617   ; }
                     618   ; /**************************************************************************************************
                     619   ; *Memory Test Functions
                     620   ; ***************************************************************************************************/
                     621   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                     622   ; //byte_func//
                     623   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                     624   ; void byte_func(void){
                     625   _byte_func:
0800034E  4E56 FFDC  626          link      A6,#-36
08000352  48E7 3F3C  627          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08000356  45F9 0800  628          lea       _printf.L,A2
0800035A  1B82      
0800035C  47F9 0800  629          lea       _scanf.L,A3
08000360  1B50      
08000362  4BEE FFE6  630          lea       -26(A6),A5
                     631   ; char  *Start, *End ;
                     632   ; char *Start_temp, *End_temp;
                     633   ; int *Start_hold, *End_hold;
                     634   ; unsigned char filldata = 0xAA;
08000366  1D7C 00AA  635          move.b    #170,-22(A6)
0800036A  FFEA      
                     636   ; unsigned char tempdata;
                     637   ; unsigned char readval;
                     638   ; //unsigned char bytedata1, bytedata2, bytedata3, bytedata4;
                     639   ; int bytedata1, bytedata2, bytedata3, bytedata4;
                     640   ; int count = 0;
0800036C  4282       641          clr.l     D2
                     642   ; int count2 = 0;
0800036E  4284       643          clr.l     D4
                     644   ; int j;
                     645   ; char choice;
                     646   ; printf("\r\nEnter 4 bytes of Hexidecimal test data.");
08000370  4879 0800  647          pea       @m68kus~1_1.L
08000374  2EDE      
08000376  4E92       648          jsr       (A2)
08000378  584F       649          addq.w    #4,A7
                     650   ; printf("\r\nEnter First byte: ");
0800037A  4879 0800  651          pea       @m68kus~1_2.L
0800037E  2F08      
08000380  4E92       652          jsr       (A2)
08000382  584F       653          addq.w    #4,A7
                     654   ; scanf("%x", &bytedata1) ;
08000384  486E FFEC  655          pea       -20(A6)
08000388  4879 0800  656          pea       @m68kus~1_3.L
0800038C  2F1E      
0800038E  4E93       657          jsr       (A3)
08000390  504F       658          addq.w    #8,A7
                     659   ; //bytedata1 = Get2HexDigits(0) ;
                     660   ; //printf("\r\n%X",bytedata1);
                     661   ; printf("Enter Second byte: ");
08000392  4879 0800  662          pea       @m68kus~1_4.L
08000396  2F22      
08000398  4E92       663          jsr       (A2)
0800039A  584F       664          addq.w    #4,A7
                     665   ; scanf("%x", &bytedata2) ;
0800039C  486E FFF0  666          pea       -16(A6)
080003A0  4879 0800  667          pea       @m68kus~1_3.L
080003A4  2F1E      
080003A6  4E93       668          jsr       (A3)
080003A8  504F       669          addq.w    #8,A7
                     670   ; //printf("\r\n%X",bytedata2);
                     671   ; //bytedata2 = Get2HexDigits(0) ;
                     672   ; printf("Enter Third byte: ");
080003AA  4879 0800  673          pea       @m68kus~1_5.L
080003AE  2F36      
080003B0  4E92       674          jsr       (A2)
080003B2  584F       675          addq.w    #4,A7
                     676   ; scanf("%x", &bytedata3) ;
080003B4  486E FFF4  677          pea       -12(A6)
080003B8  4879 0800  678          pea       @m68kus~1_3.L
080003BC  2F1E      
080003BE  4E93       679          jsr       (A3)
080003C0  504F       680          addq.w    #8,A7
                     681   ; //bytedata3 = Get2HexDigits(0) ;
                     682   ; printf("Enter Fourth byte: ");
080003C2  4879 0800  683          pea       @m68kus~1_6.L
080003C6  2F4A      
080003C8  4E92       684          jsr       (A2)
080003CA  584F       685          addq.w    #4,A7
                     686   ; scanf("%x", &bytedata4) ;
080003CC  486E FFF8  687          pea       -8(A6)
080003D0  4879 0800  688          pea       @m68kus~1_3.L
080003D4  2F1E      
080003D6  4E93       689          jsr       (A3)
080003D8  504F       690          addq.w    #8,A7
                     691   ; //bytedata4 = Get2HexDigits(0) ;
                     692   ; printf("Valid addresses for this program are: $0900 0000  - $097F FFFF");
080003DA  4879 0800  693          pea       @m68kus~1_7.L
080003DE  2F5E      
080003E0  4E92       694          jsr       (A2)
080003E2  584F       695          addq.w    #4,A7
                     696   ; printf("\r\nEnter Start Address: ") ;
080003E4  4879 0800  697          pea       @m68kus~1_8.L
080003E8  2F9E      
080003EA  4E92       698          jsr       (A2)
080003EC  584F       699          addq.w    #4,A7
                     700   ; scanf("%x", &Start_hold) ;
080003EE  486E FFE2  701          pea       -30(A6)
080003F2  4879 0800  702          pea       @m68kus~1_3.L
080003F6  2F1E      
080003F8  4E93       703          jsr       (A3)
080003FA  504F       704          addq.w    #8,A7
                     705   ; //Start_hold = Get8HexDigits(0) ;
                     706   ; printf("Enter End Address: ") ;
080003FC  4879 0800  707          pea       @m68kus~1_9.L
08000400  2FB6      
08000402  4E92       708          jsr       (A2)
08000404  584F       709          addq.w    #4,A7
                     710   ; scanf("%x", &End_hold) ;
08000406  2F0D       711          move.l    A5,-(A7)
08000408  4879 0800  712          pea       @m68kus~1_3.L
0800040C  2F1E      
0800040E  4E93       713          jsr       (A3)
08000410  504F       714          addq.w    #8,A7
                     715   ; //End_hold = Get8HexDigits(0) ;
                     716   ; while ((Start_hold < 0x09000000) || (Start_hold > 0x097FFFFF)){
                     717   byte_func_1:
08000412  202E FFE2  718          move.l    -30(A6),D0
08000416  0C80 0900  719          cmp.l     #150994944,D0
0800041A  0000      
0800041C  650C       720          blo.s     byte_func_4
0800041E  202E FFE2  721          move.l    -30(A6),D0
08000422  0C80 097F  722          cmp.l     #159383551,D0
08000426  FFFF      
08000428  631A       723          bls.s     byte_func_3
                     724   byte_func_4:
                     725   ; printf("ERROR. Please Enter a valid Start Address: ");
0800042A  4879 0800  726          pea       @m68kus~1_10.L
0800042E  2FCA      
08000430  4E92       727          jsr       (A2)
08000432  584F       728          addq.w    #4,A7
                     729   ; scanf("%x", &Start_hold) ;
08000434  486E FFE2  730          pea       -30(A6)
08000438  4879 0800  731          pea       @m68kus~1_3.L
0800043C  2F1E      
0800043E  4E93       732          jsr       (A3)
08000440  504F       733          addq.w    #8,A7
08000442  60CE       734          bra       byte_func_1
                     735   byte_func_3:
                     736   ; //Start_hold = Get8HexDigits(0) ;
                     737   ; }
                     738   ; while ((End_hold < 0x09000000) || (End_hold > 0x097FFFFF)){
                     739   byte_func_5:
08000444  2015       740          move.l    (A5),D0
08000446  0C80 0900  741          cmp.l     #150994944,D0
0800044A  0000      
0800044C  650A       742          blo.s     byte_func_8
0800044E  2015       743          move.l    (A5),D0
08000450  0C80 097F  744          cmp.l     #159383551,D0
08000454  FFFF      
08000456  6318       745          bls.s     byte_func_7
                     746   byte_func_8:
                     747   ; printf("\r\nERROR. Please Enter a valid End Address: ");
08000458  4879 0800  748          pea       @m68kus~1_11.L
0800045C  2FF6      
0800045E  4E92       749          jsr       (A2)
08000460  584F       750          addq.w    #4,A7
                     751   ; scanf("%x", &End_hold) ;
08000462  2F0D       752          move.l    A5,-(A7)
08000464  4879 0800  753          pea       @m68kus~1_3.L
08000468  2F1E      
0800046A  4E93       754          jsr       (A3)
0800046C  504F       755          addq.w    #8,A7
0800046E  60D4       756          bra       byte_func_5
                     757   byte_func_7:
                     758   ; //End_hold = Get8HexDigits(0) ;
                     759   ; }
                     760   ; while (End_hold <= Start_hold){
                     761   byte_func_9:
08000470  2015       762          move.l    (A5),D0
08000472  B0AE FFE2  763          cmp.l     -30(A6),D0
08000476  6222       764          bhi.s     byte_func_11
                     765   ; printf("\r\nERROR. Please enter an End Address larger than the Start Address");
08000478  4879 0800  766          pea       @m68kus~1_12.L
0800047C  3022      
0800047E  4E92       767          jsr       (A2)
08000480  584F       768          addq.w    #4,A7
                     769   ; //printf("\r\nEnter Start Address: ") ;
                     770   ; //Start_hold = Get8HexDigits(0) ;
                     771   ; printf("\r\nEnter End Address: ") ;
08000482  4879 0800  772          pea       @m68kus~1_13.L
08000486  3066      
08000488  4E92       773          jsr       (A2)
0800048A  584F       774          addq.w    #4,A7
                     775   ; scanf("%x", &End_hold) ;
0800048C  2F0D       776          move.l    A5,-(A7)
0800048E  4879 0800  777          pea       @m68kus~1_3.L
08000492  2F1E      
08000494  4E93       778          jsr       (A3)
08000496  504F       779          addq.w    #8,A7
08000498  60D6       780          bra       byte_func_9
                     781   byte_func_11:
                     782   ; //End_hold = Get8HexDigits(0) ;
                     783   ; }
                     784   ; Start = Start_hold;
0800049A  262E FFE2  785          move.l    -30(A6),D3
                     786   ; End = End_hold;
0800049E  2855       787          move.l    (A5),A4
                     788   ; Start_temp = Start_hold;
080004A0  2A2E FFE2  789          move.l    -30(A6),D5
                     790   ; End_temp = End_hold;
080004A4  2D55 FFDE  791          move.l    (A5),-34(A6)
                     792   ; printf("\r\nFilling Addresses [$%08X - $%08X] with test data", Start, End);
080004A8  2F0C       793          move.l    A4,-(A7)
080004AA  2F03       794          move.l    D3,-(A7)
080004AC  4879 0800  795          pea       @m68kus~1_14.L
080004B0  307C      
080004B2  4E92       796          jsr       (A2)
080004B4  DEFC 000C  797          add.w     #12,A7
                     798   ; while (Start <= End){
                     799   byte_func_12:
080004B8  B68C       800          cmp.l     A4,D3
080004BA  6200 0196  801          bhi       byte_func_14
                     802   ; if ((count == 0) || ((count % 4))==0 ){
080004BE  4A82       803          tst.l     D2
080004C0  6718       804          beq.s     byte_func_17
080004C2  2F02       805          move.l    D2,-(A7)
080004C4  4878 0004  806          pea       4
080004C8  4EB9 0800  807          jsr       LDIV
080004CC  1A84      
080004CE  202F 0004  808          move.l    4(A7),D0
080004D2  504F       809          addq.w    #8,A7
080004D4  4A80       810          tst.l     D0
080004D6  6600 003C  811          bne       byte_func_15
                     812   byte_func_17:
                     813   ; *Start = bytedata1;
080004DA  202E FFEC  814          move.l    -20(A6),D0
080004DE  2043       815          move.l    D3,A0
080004E0  1080       816          move.b    D0,(A0)
                     817   ; if ((count == 0) || ((count % 1000)==0)){
080004E2  4A82       818          tst.l     D2
080004E4  6716       819          beq.s     byte_func_20
080004E6  2F02       820          move.l    D2,-(A7)
080004E8  4878 03E8  821          pea       1000
080004EC  4EB9 0800  822          jsr       LDIV
080004F0  1A84      
080004F2  202F 0004  823          move.l    4(A7),D0
080004F6  504F       824          addq.w    #8,A7
080004F8  4A80       825          tst.l     D0
080004FA  6612       826          bne.s     byte_func_18
                     827   byte_func_20:
                     828   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata1);
080004FC  2F2E FFEC  829          move.l    -20(A6),-(A7)
08000500  2F03       830          move.l    D3,-(A7)
08000502  4879 0800  831          pea       @m68kus~1_15.L
08000506  30B0      
08000508  4E92       832          jsr       (A2)
0800050A  DEFC 000C  833          add.w     #12,A7
                     834   byte_func_18:
                     835   ; }
                     836   ; Start++;
0800050E  5283       837          addq.l    #1,D3
08000510  6000 013A  838          bra       byte_func_34
                     839   byte_func_15:
                     840   ; }
                     841   ; else if ((count == 1) || (((count - 1)%4)==0)){
08000514  0C82 0000  842          cmp.l     #1,D2
08000518  0001      
0800051A  671C       843          beq.s     byte_func_23
0800051C  2002       844          move.l    D2,D0
0800051E  5380       845          subq.l    #1,D0
08000520  2F00       846          move.l    D0,-(A7)
08000522  4878 0004  847          pea       4
08000526  4EB9 0800  848          jsr       LDIV
0800052A  1A84      
0800052C  202F 0004  849          move.l    4(A7),D0
08000530  504F       850          addq.w    #8,A7
08000532  4A80       851          tst.l     D0
08000534  6600 0044  852          bne       byte_func_21
                     853   byte_func_23:
                     854   ; *Start = bytedata2;
08000538  202E FFF0  855          move.l    -16(A6),D0
0800053C  2043       856          move.l    D3,A0
0800053E  1080       857          move.b    D0,(A0)
                     858   ; if ((count == 1) || (((count - 1) % 1000)==0)){
08000540  0C82 0000  859          cmp.l     #1,D2
08000544  0001      
08000546  671A       860          beq.s     byte_func_26
08000548  2002       861          move.l    D2,D0
0800054A  5380       862          subq.l    #1,D0
0800054C  2F00       863          move.l    D0,-(A7)
0800054E  4878 03E8  864          pea       1000
08000552  4EB9 0800  865          jsr       LDIV
08000556  1A84      
08000558  202F 0004  866          move.l    4(A7),D0
0800055C  504F       867          addq.w    #8,A7
0800055E  4A80       868          tst.l     D0
08000560  6612       869          bne.s     byte_func_24
                     870   byte_func_26:
                     871   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata2);
08000562  2F2E FFF0  872          move.l    -16(A6),-(A7)
08000566  2F03       873          move.l    D3,-(A7)
08000568  4879 0800  874          pea       @m68kus~1_15.L
0800056C  30B0      
0800056E  4E92       875          jsr       (A2)
08000570  DEFC 000C  876          add.w     #12,A7
                     877   byte_func_24:
                     878   ; }
                     879   ; Start++;
08000574  5283       880          addq.l    #1,D3
08000576  6000 00D4  881          bra       byte_func_34
                     882   byte_func_21:
                     883   ; }
                     884   ; else if ((count == 2) || (((count - 2)%4)==0)){
0800057A  0C82 0000  885          cmp.l     #2,D2
0800057E  0002      
08000580  671C       886          beq.s     byte_func_29
08000582  2002       887          move.l    D2,D0
08000584  5580       888          subq.l    #2,D0
08000586  2F00       889          move.l    D0,-(A7)
08000588  4878 0004  890          pea       4
0800058C  4EB9 0800  891          jsr       LDIV
08000590  1A84      
08000592  202F 0004  892          move.l    4(A7),D0
08000596  504F       893          addq.w    #8,A7
08000598  4A80       894          tst.l     D0
0800059A  6600 0044  895          bne       byte_func_27
                     896   byte_func_29:
                     897   ; *Start = bytedata3;
0800059E  202E FFF4  898          move.l    -12(A6),D0
080005A2  2043       899          move.l    D3,A0
080005A4  1080       900          move.b    D0,(A0)
                     901   ; if ((count == 2) || (((count - 2) % 1000)==0)){
080005A6  0C82 0000  902          cmp.l     #2,D2
080005AA  0002      
080005AC  671A       903          beq.s     byte_func_32
080005AE  2002       904          move.l    D2,D0
080005B0  5580       905          subq.l    #2,D0
080005B2  2F00       906          move.l    D0,-(A7)
080005B4  4878 03E8  907          pea       1000
080005B8  4EB9 0800  908          jsr       LDIV
080005BC  1A84      
080005BE  202F 0004  909          move.l    4(A7),D0
080005C2  504F       910          addq.w    #8,A7
080005C4  4A80       911          tst.l     D0
080005C6  6612       912          bne.s     byte_func_30
                     913   byte_func_32:
                     914   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata3);
080005C8  2F2E FFF4  915          move.l    -12(A6),-(A7)
080005CC  2F03       916          move.l    D3,-(A7)
080005CE  4879 0800  917          pea       @m68kus~1_15.L
080005D2  30B0      
080005D4  4E92       918          jsr       (A2)
080005D6  DEFC 000C  919          add.w     #12,A7
                     920   byte_func_30:
                     921   ; }
                     922   ; Start++;
080005DA  5283       923          addq.l    #1,D3
080005DC  6000 006E  924          bra       byte_func_34
                     925   byte_func_27:
                     926   ; }
                     927   ; else if ((count == 3) || (((count - 3)%4)==0)){
080005E0  0C82 0000  928          cmp.l     #3,D2
080005E4  0003      
080005E6  671C       929          beq.s     byte_func_35
080005E8  2002       930          move.l    D2,D0
080005EA  5780       931          subq.l    #3,D0
080005EC  2F00       932          move.l    D0,-(A7)
080005EE  4878 0004  933          pea       4
080005F2  4EB9 0800  934          jsr       LDIV
080005F6  1A84      
080005F8  202F 0004  935          move.l    4(A7),D0
080005FC  504F       936          addq.w    #8,A7
080005FE  4A80       937          tst.l     D0
08000600  6600 0042  938          bne       byte_func_33
                     939   byte_func_35:
                     940   ; *Start = bytedata4;
08000604  202E FFF8  941          move.l    -8(A6),D0
08000608  2043       942          move.l    D3,A0
0800060A  1080       943          move.b    D0,(A0)
                     944   ; if ((count == 3) || (((count - 3) % 1000)==0)){
0800060C  0C82 0000  945          cmp.l     #3,D2
08000610  0003      
08000612  671A       946          beq.s     byte_func_38
08000614  2002       947          move.l    D2,D0
08000616  5780       948          subq.l    #3,D0
08000618  2F00       949          move.l    D0,-(A7)
0800061A  4878 03E8  950          pea       1000
0800061E  4EB9 0800  951          jsr       LDIV
08000622  1A84      
08000624  202F 0004  952          move.l    4(A7),D0
08000628  504F       953          addq.w    #8,A7
0800062A  4A80       954          tst.l     D0
0800062C  6612       955          bne.s     byte_func_36
                     956   byte_func_38:
                     957   ; printf("\r\nAddress $%08X being filled with $%02X", Start, bytedata4);
0800062E  2F2E FFF8  958          move.l    -8(A6),-(A7)
08000632  2F03       959          move.l    D3,-(A7)
08000634  4879 0800  960          pea       @m68kus~1_15.L
08000638  30B0      
0800063A  4E92       961          jsr       (A2)
0800063C  DEFC 000C  962          add.w     #12,A7
                     963   byte_func_36:
                     964   ; }
                     965   ; Start++;
08000640  5283       966          addq.l    #1,D3
08000642  6008       967          bra.s     byte_func_34
                     968   byte_func_33:
                     969   ; }
                     970   ; else {
                     971   ; *Start++ = filldata;
08000644  2043       972          move.l    D3,A0
08000646  5283       973          addq.l    #1,D3
08000648  10AE FFEA  974          move.b    -22(A6),(A0)
                     975   byte_func_34:
                     976   ; }
                     977   ; //      if ((count == 0) || ((count % 1000)==0)){
                     978   ; //       printf("\r\nAdress $%08X being filled with $%02X", Start, readval);
                     979   ; //}
                     980   ; count++;
0800064C  5282       981          addq.l    #1,D2
0800064E  6000 FE68  982          bra       byte_func_12
                     983   byte_func_14:
                     984   ; }
                     985   ; printf("\r\nWriting to memory Complete.\r\nEnter '1' to read back the memory. Enter '0' to exit program.");
08000652  4879 0800  986          pea       @m68kus~1_16.L
08000656  30D8      
08000658  4E92       987          jsr       (A2)
0800065A  584F       988          addq.w    #4,A7
                     989   ; choice = _getch();
0800065C  4EB9 0800  990          jsr       __getch
08000660  0124      
08000662  1E00       991          move.b    D0,D7
                     992   ; if (choice == '1'){
08000664  0C07 0031  993          cmp.b     #49,D7
08000668  6600 00FE  994          bne       byte_func_39
                     995   ; // printf("\r\nwill continue");
                     996   ; while (Start_temp <= End_temp){
                     997   byte_func_41:
0800066C  BAAE FFDE  998          cmp.l     -34(A6),D5
08000670  6200 00F4  999          bhi       byte_func_43
                    1000   ; tempdata = *Start_temp;
08000674  2045      1001          move.l    D5,A0
08000676  1C10      1002          move.b    (A0),D6
                    1003   ; if ((count2 == 0) || (count2 % 1000)==0){
08000678  4A84      1004          tst.l     D4
0800067A  6716      1005          beq.s     byte_func_46
0800067C  2F04      1006          move.l    D4,-(A7)
0800067E  4878 03E8 1007          pea       1000
08000682  4EB9 0800 1008          jsr       LDIV
08000686  1A84      
08000688  202F 0004 1009          move.l    4(A7),D0
0800068C  504F      1010          addq.w    #8,A7
0800068E  4A80      1011          tst.l     D0
08000690  661A      1012          bne.s     byte_func_44
                    1013   byte_func_46:
                    1014   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
08000692  2F05      1015          move.l    D5,-(A7)
08000694  CCBC 0000 1016          and.l     #255,D6
08000698  00FF      
0800069A  2F06      1017          move.l    D6,-(A7)
0800069C  4879 0800 1018          pea       @m68kus~1_17.L
080006A0  3136      
080006A2  4E92      1019          jsr       (A2)
080006A4  DEFC 000C 1020          add.w     #12,A7
080006A8  6000 00B2 1021          bra       byte_func_53
                    1022   byte_func_44:
                    1023   ; }
                    1024   ; else if ((count2 == 1) || ((count2 - 1) % 1000)==0){
080006AC  0C84 0000 1025          cmp.l     #1,D4
080006B0  0001      
080006B2  671A      1026          beq.s     byte_func_49
080006B4  2004      1027          move.l    D4,D0
080006B6  5380      1028          subq.l    #1,D0
080006B8  2F00      1029          move.l    D0,-(A7)
080006BA  4878 03E8 1030          pea       1000
080006BE  4EB9 0800 1031          jsr       LDIV
080006C2  1A84      
080006C4  202F 0004 1032          move.l    4(A7),D0
080006C8  504F      1033          addq.w    #8,A7
080006CA  4A80      1034          tst.l     D0
080006CC  661A      1035          bne.s     byte_func_47
                    1036   byte_func_49:
                    1037   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
080006CE  2F05      1038          move.l    D5,-(A7)
080006D0  CCBC 0000 1039          and.l     #255,D6
080006D4  00FF      
080006D6  2F06      1040          move.l    D6,-(A7)
080006D8  4879 0800 1041          pea       @m68kus~1_17.L
080006DC  3136      
080006DE  4E92      1042          jsr       (A2)
080006E0  DEFC 000C 1043          add.w     #12,A7
080006E4  6000 0076 1044          bra       byte_func_53
                    1045   byte_func_47:
                    1046   ; }
                    1047   ; else if ((count2 == 2) || ((count2 - 2) % 1000)==0){
080006E8  0C84 0000 1048          cmp.l     #2,D4
080006EC  0002      
080006EE  671A      1049          beq.s     byte_func_52
080006F0  2004      1050          move.l    D4,D0
080006F2  5580      1051          subq.l    #2,D0
080006F4  2F00      1052          move.l    D0,-(A7)
080006F6  4878 03E8 1053          pea       1000
080006FA  4EB9 0800 1054          jsr       LDIV
080006FE  1A84      
08000700  202F 0004 1055          move.l    4(A7),D0
08000704  504F      1056          addq.w    #8,A7
08000706  4A80      1057          tst.l     D0
08000708  661A      1058          bne.s     byte_func_50
                    1059   byte_func_52:
                    1060   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
0800070A  2F05      1061          move.l    D5,-(A7)
0800070C  CCBC 0000 1062          and.l     #255,D6
08000710  00FF      
08000712  2F06      1063          move.l    D6,-(A7)
08000714  4879 0800 1064          pea       @m68kus~1_17.L
08000718  3136      
0800071A  4E92      1065          jsr       (A2)
0800071C  DEFC 000C 1066          add.w     #12,A7
08000720  6000 003A 1067          bra       byte_func_53
                    1068   byte_func_50:
                    1069   ; }
                    1070   ; else if ((count2 == 3) || ((count2 - 3) % 1000)==0){
08000724  0C84 0000 1071          cmp.l     #3,D4
08000728  0003      
0800072A  671A      1072          beq.s     byte_func_55
0800072C  2004      1073          move.l    D4,D0
0800072E  5780      1074          subq.l    #3,D0
08000730  2F00      1075          move.l    D0,-(A7)
08000732  4878 03E8 1076          pea       1000
08000736  4EB9 0800 1077          jsr       LDIV
0800073A  1A84      
0800073C  202F 0004 1078          move.l    4(A7),D0
08000740  504F      1079          addq.w    #8,A7
08000742  4A80      1080          tst.l     D0
08000744  6616      1081          bne.s     byte_func_53
                    1082   byte_func_55:
                    1083   ; printf("\r\n$%02X Read from address $%08X", tempdata, Start_temp);
08000746  2F05      1084          move.l    D5,-(A7)
08000748  CCBC 0000 1085          and.l     #255,D6
0800074C  00FF      
0800074E  2F06      1086          move.l    D6,-(A7)
08000750  4879 0800 1087          pea       @m68kus~1_17.L
08000754  3136      
08000756  4E92      1088          jsr       (A2)
08000758  DEFC 000C 1089          add.w     #12,A7
                    1090   byte_func_53:
                    1091   ; }
                    1092   ; count2++;
0800075C  5284      1093          addq.l    #1,D4
                    1094   ; *Start_temp++;
0800075E  2045      1095          move.l    D5,A0
08000760  5285      1096          addq.l    #1,D5
08000762  6000 FF08 1097          bra       byte_func_41
                    1098   byte_func_43:
08000766  6010      1099          bra.s     byte_func_56
                    1100   byte_func_39:
                    1101   ; }
                    1102   ; }
                    1103   ; else if (choice == '0'){
08000768  0C07 0030 1104          cmp.b     #48,D7
0800076C  660A      1105          bne.s     byte_func_56
                    1106   ; printf("\r\nProgram Ended");
0800076E  4879 0800 1107          pea       @m68kus~1_18.L
08000772  3156      
08000774  4E92      1108          jsr       (A2)
08000776  584F      1109          addq.w    #4,A7
                    1110   byte_func_56:
08000778  4CDF 3CFC 1111          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
0800077C  4E5E      1112          unlk      A6
0800077E  4E75      1113          rts
                    1114   ; }
                    1115   ; }
                    1116   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1117   ; //word_func//
                    1118   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1119   ; void word_func(void){
                    1120   _word_func:
08000780  4E56 FFD8 1121          link      A6,#-40
08000784  48E7 3F38 1122          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4,-(A7)
08000788  45F9 0800 1123          lea       _printf.L,A2
0800078C  1B82      
0800078E  47F9 0800 1124          lea       _scanf.L,A3
08000792  1B50      
08000794  49EE FFF2 1125          lea       -14(A6),A4
                    1126   ; int worddata1, worddata2, worddata3, worddata4;
                    1127   ; int tempdata;
                    1128   ; int *Start_hold, *End_hold;
                    1129   ; short *Start, *End;
                    1130   ; short *Start_temp, *End_temp;
                    1131   ; unsigned char data, data2;
                    1132   ; int count1 = 0;
08000798  4283      1133          clr.l     D3
                    1134   ; int count2 = 0;
0800079A  4285      1135          clr.l     D5
                    1136   ; char choice;
                    1137   ; printf("\r\nEnter 4 words (2 bytes) of Hexidecimal test data.");
0800079C  4879 0800 1138          pea       @m68kus~1_19.L
080007A0  3166      
080007A2  4E92      1139          jsr       (A2)
080007A4  584F      1140          addq.w    #4,A7
                    1141   ; printf("\r\nEnter First word: ");
080007A6  4879 0800 1142          pea       @m68kus~1_20.L
080007AA  319A      
080007AC  4E92      1143          jsr       (A2)
080007AE  584F      1144          addq.w    #4,A7
                    1145   ; scanf("%x", &worddata1) ;
080007B0  486E FFDA 1146          pea       -38(A6)
080007B4  4879 0800 1147          pea       @m68kus~1_3.L
080007B8  2F1E      
080007BA  4E93      1148          jsr       (A3)
080007BC  504F      1149          addq.w    #8,A7
                    1150   ; //worddata1 = Get4HexDigits(0) ;
                    1151   ; printf("Enter Second word: ");
080007BE  4879 0800 1152          pea       @m68kus~1_21.L
080007C2  31B0      
080007C4  4E92      1153          jsr       (A2)
080007C6  584F      1154          addq.w    #4,A7
                    1155   ; scanf("%x", &worddata2) ;
080007C8  486E FFDE 1156          pea       -34(A6)
080007CC  4879 0800 1157          pea       @m68kus~1_3.L
080007D0  2F1E      
080007D2  4E93      1158          jsr       (A3)
080007D4  504F      1159          addq.w    #8,A7
                    1160   ; //worddata2 = Get4HexDigits(0) ;
                    1161   ; printf("Enter Third word: ");
080007D6  4879 0800 1162          pea       @m68kus~1_22.L
080007DA  31C4      
080007DC  4E92      1163          jsr       (A2)
080007DE  584F      1164          addq.w    #4,A7
                    1165   ; scanf("%x", &worddata3) ;
080007E0  486E FFE2 1166          pea       -30(A6)
080007E4  4879 0800 1167          pea       @m68kus~1_3.L
080007E8  2F1E      
080007EA  4E93      1168          jsr       (A3)
080007EC  504F      1169          addq.w    #8,A7
                    1170   ; //worddata3 = Get4HexDigits(0) ;
                    1171   ; printf("Enter Fourth word: ");
080007EE  4879 0800 1172          pea       @m68kus~1_23.L
080007F2  31D8      
080007F4  4E92      1173          jsr       (A2)
080007F6  584F      1174          addq.w    #4,A7
                    1175   ; scanf("%x", &worddata4) ;
080007F8  486E FFE6 1176          pea       -26(A6)
080007FC  4879 0800 1177          pea       @m68kus~1_3.L
08000800  2F1E      
08000802  4E93      1178          jsr       (A3)
08000804  504F      1179          addq.w    #8,A7
                    1180   ; //worddata4 = Get4HexDigits(0) ;
                    1181   ; printf("Valid addresses for this program are: $0900 0000 - $097F FFFF");
08000806  4879 0800 1182          pea       @m68kus~1_24.L
0800080A  31EC      
0800080C  4E92      1183          jsr       (A2)
0800080E  584F      1184          addq.w    #4,A7
                    1185   ; printf("\r\nFor this test, the start and end addresses must align to an even address");
08000810  4879 0800 1186          pea       @m68kus~1_25.L
08000814  322A      
08000816  4E92      1187          jsr       (A2)
08000818  584F      1188          addq.w    #4,A7
                    1189   ; printf("\r\nEnter Start Address: ") ;
0800081A  4879 0800 1190          pea       @m68kus~1_8.L
0800081E  2F9E      
08000820  4E92      1191          jsr       (A2)
08000822  584F      1192          addq.w    #4,A7
                    1193   ; scanf("%x", &Start_hold) ;
08000824  486E FFEE 1194          pea       -18(A6)
08000828  4879 0800 1195          pea       @m68kus~1_3.L
0800082C  2F1E      
0800082E  4E93      1196          jsr       (A3)
08000830  504F      1197          addq.w    #8,A7
                    1198   ; //Start_hold = Get8HexDigits(0) ;
                    1199   ; printf("Enter End Address: ") ;
08000832  4879 0800 1200          pea       @m68kus~1_9.L
08000836  2FB6      
08000838  4E92      1201          jsr       (A2)
0800083A  584F      1202          addq.w    #4,A7
                    1203   ; scanf("%x", &End_hold) ;
0800083C  2F0C      1204          move.l    A4,-(A7)
0800083E  4879 0800 1205          pea       @m68kus~1_3.L
08000842  2F1E      
08000844  4E93      1206          jsr       (A3)
08000846  504F      1207          addq.w    #8,A7
                    1208   ; //End_hold = Get8HexDigits(0) ;
                    1209   ; while ((Start_hold < 0x09000000) || (Start_hold > 0x097FFFFF) || ((Start_hold % 2) != 0)){
                    1210   word_func_1:
08000848  202E FFEE 1211          move.l    -18(A6),D0
0800084C  0C80 0900 1212          cmp.l     #150994944,D0
08000850  0000      
08000852  6524      1213          blo.s     word_func_4
08000854  202E FFEE 1214          move.l    -18(A6),D0
08000858  0C80 097F 1215          cmp.l     #159383551,D0
0800085C  FFFF      
0800085E  6218      1216          bhi.s     word_func_4
08000860  2F2E FFEE 1217          move.l    -18(A6),-(A7)
08000864  4878 0002 1218          pea       2
08000868  4EB9 0800 1219          jsr       ULDIV
0800086C  1A72      
0800086E  202F 0004 1220          move.l    4(A7),D0
08000872  504F      1221          addq.w    #8,A7
08000874  4A80      1222          tst.l     D0
08000876  671A      1223          beq.s     word_func_3
                    1224   word_func_4:
                    1225   ; printf("ERROR. Please Enter a valid Start Address: ");
08000878  4879 0800 1226          pea       @m68kus~1_10.L
0800087C  2FCA      
0800087E  4E92      1227          jsr       (A2)
08000880  584F      1228          addq.w    #4,A7
                    1229   ; scanf("%x", &Start_hold) ;
08000882  486E FFEE 1230          pea       -18(A6)
08000886  4879 0800 1231          pea       @m68kus~1_3.L
0800088A  2F1E      
0800088C  4E93      1232          jsr       (A3)
0800088E  504F      1233          addq.w    #8,A7
08000890  60B6      1234          bra       word_func_1
                    1235   word_func_3:
                    1236   ; //Start_hold = Get8HexDigits(0) ;
                    1237   ; }
                    1238   ; while ((End_hold < 0x09000000) || (End_hold > 0x097FFFFF) || ((End_hold % 2) != 0)){
                    1239   word_func_5:
08000892  2014      1240          move.l    (A4),D0
08000894  0C80 0900 1241          cmp.l     #150994944,D0
08000898  0000      
0800089A  6520      1242          blo.s     word_func_8
0800089C  2014      1243          move.l    (A4),D0
0800089E  0C80 097F 1244          cmp.l     #159383551,D0
080008A2  FFFF      
080008A4  6216      1245          bhi.s     word_func_8
080008A6  2F14      1246          move.l    (A4),-(A7)
080008A8  4878 0002 1247          pea       2
080008AC  4EB9 0800 1248          jsr       ULDIV
080008B0  1A72      
080008B2  202F 0004 1249          move.l    4(A7),D0
080008B6  504F      1250          addq.w    #8,A7
080008B8  4A80      1251          tst.l     D0
080008BA  6718      1252          beq.s     word_func_7
                    1253   word_func_8:
                    1254   ; printf("ERROR. Please Enter a valid End Address: ");
080008BC  4879 0800 1255          pea       @m68kus~1_26.L
080008C0  3276      
080008C2  4E92      1256          jsr       (A2)
080008C4  584F      1257          addq.w    #4,A7
                    1258   ; scanf("%x", &End_hold) ;
080008C6  2F0C      1259          move.l    A4,-(A7)
080008C8  4879 0800 1260          pea       @m68kus~1_3.L
080008CC  2F1E      
080008CE  4E93      1261          jsr       (A3)
080008D0  504F      1262          addq.w    #8,A7
080008D2  60BE      1263          bra       word_func_5
                    1264   word_func_7:
                    1265   ; //End_hold = Get8HexDigits(0) ;
                    1266   ; }
                    1267   ; while (End_hold <= Start_hold){
                    1268   word_func_9:
080008D4  2014      1269          move.l    (A4),D0
080008D6  B0AE FFEE 1270          cmp.l     -18(A6),D0
080008DA  6222      1271          bhi.s     word_func_11
                    1272   ; printf("ERROR. Please enter an End Address larger than the Start Address");
080008DC  4879 0800 1273          pea       @m68kus~1_27.L
080008E0  32A0      
080008E2  4E92      1274          jsr       (A2)
080008E4  584F      1275          addq.w    #4,A7
                    1276   ; //printf("\r\nEnter Start Address: ") ;
                    1277   ; //Start_hold = Get8HexDigits(0) ;
                    1278   ; printf("\r\nEnter End Address: ") ;
080008E6  4879 0800 1279          pea       @m68kus~1_13.L
080008EA  3066      
080008EC  4E92      1280          jsr       (A2)
080008EE  584F      1281          addq.w    #4,A7
                    1282   ; scanf("%x", &End_hold) ;
080008F0  2F0C      1283          move.l    A4,-(A7)
080008F2  4879 0800 1284          pea       @m68kus~1_3.L
080008F6  2F1E      
080008F8  4E93      1285          jsr       (A3)
080008FA  504F      1286          addq.w    #8,A7
080008FC  60D6      1287          bra       word_func_9
                    1288   word_func_11:
                    1289   ; //End_hold = Get8HexDigits(0) ;
                    1290   ; }
                    1291   ; Start = Start_hold;
080008FE  242E FFEE 1292          move.l    -18(A6),D2
                    1293   ; End = End_hold;
08000902  2D54 FFF6 1294          move.l    (A4),-10(A6)
                    1295   ; Start_temp = Start_hold;
08000906  282E FFEE 1296          move.l    -18(A6),D4
                    1297   ; End_temp = End_hold;
0800090A  2D54 FFFA 1298          move.l    (A4),-6(A6)
                    1299   ; while (Start < End){
                    1300   word_func_12:
0800090E  B4AE FFF6 1301          cmp.l     -10(A6),D2
08000912  6400 01A8 1302          bhs       word_func_14
                    1303   ; if ((count1 == 0) || ((count1 % 4)) ==0 ){
08000916  4A83      1304          tst.l     D3
08000918  6718      1305          beq.s     word_func_17
0800091A  2F03      1306          move.l    D3,-(A7)
0800091C  4878 0004 1307          pea       4
08000920  4EB9 0800 1308          jsr       LDIV
08000924  1A84      
08000926  202F 0004 1309          move.l    4(A7),D0
0800092A  504F      1310          addq.w    #8,A7
0800092C  4A80      1311          tst.l     D0
0800092E  6600 0042 1312          bne       word_func_15
                    1313   word_func_17:
                    1314   ; *Start = worddata1;
08000932  202E FFDA 1315          move.l    -38(A6),D0
08000936  2042      1316          move.l    D2,A0
08000938  3080      1317          move.w    D0,(A0)
                    1318   ; if ((count1 == 0) || ((count1 % 1000)==0)){
0800093A  4A83      1319          tst.l     D3
0800093C  6716      1320          beq.s     word_func_20
0800093E  2F03      1321          move.l    D3,-(A7)
08000940  4878 03E8 1322          pea       1000
08000944  4EB9 0800 1323          jsr       LDIV
08000948  1A84      
0800094A  202F 0004 1324          move.l    4(A7),D0
0800094E  504F      1325          addq.w    #8,A7
08000950  4A80      1326          tst.l     D0
08000952  661C      1327          bne.s     word_func_18
                    1328   word_func_20:
                    1329   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata1);
08000954  2F2E FFDA 1330          move.l    -38(A6),-(A7)
08000958  2202      1331          move.l    D2,D1
0800095A  82BC 0000 1332          or.l      #1,D1
0800095E  0001      
08000960  2F01      1333          move.l    D1,-(A7)
08000962  2F02      1334          move.l    D2,-(A7)
08000964  4879 0800 1335          pea       @m68kus~1_28.L
08000968  32E2      
0800096A  4E92      1336          jsr       (A2)
0800096C  DEFC 0010 1337          add.w     #16,A7
                    1338   word_func_18:
                    1339   ; }
                    1340   ; Start++;
08000970  5482      1341          addq.l    #2,D2
                    1342   word_func_15:
                    1343   ; }
                    1344   ; if ((count1 == 1) || (((count1 - 1) % 4)) ==0 ){
08000972  0C83 0000 1345          cmp.l     #1,D3
08000976  0001      
08000978  671C      1346          beq.s     word_func_23
0800097A  2003      1347          move.l    D3,D0
0800097C  5380      1348          subq.l    #1,D0
0800097E  2F00      1349          move.l    D0,-(A7)
08000980  4878 0004 1350          pea       4
08000984  4EB9 0800 1351          jsr       LDIV
08000988  1A84      
0800098A  202F 0004 1352          move.l    4(A7),D0
0800098E  504F      1353          addq.w    #8,A7
08000990  4A80      1354          tst.l     D0
08000992  6600 004A 1355          bne       word_func_21
                    1356   word_func_23:
                    1357   ; *Start = worddata2;
08000996  202E FFDE 1358          move.l    -34(A6),D0
0800099A  2042      1359          move.l    D2,A0
0800099C  3080      1360          move.w    D0,(A0)
                    1361   ; if ((count1 == 1) || (((count1 -1) % 1000)==0)){
0800099E  0C83 0000 1362          cmp.l     #1,D3
080009A2  0001      
080009A4  671A      1363          beq.s     word_func_26
080009A6  2003      1364          move.l    D3,D0
080009A8  5380      1365          subq.l    #1,D0
080009AA  2F00      1366          move.l    D0,-(A7)
080009AC  4878 03E8 1367          pea       1000
080009B0  4EB9 0800 1368          jsr       LDIV
080009B4  1A84      
080009B6  202F 0004 1369          move.l    4(A7),D0
080009BA  504F      1370          addq.w    #8,A7
080009BC  4A80      1371          tst.l     D0
080009BE  661C      1372          bne.s     word_func_24
                    1373   word_func_26:
                    1374   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata2);
080009C0  2F2E FFDE 1375          move.l    -34(A6),-(A7)
080009C4  2202      1376          move.l    D2,D1
080009C6  82BC 0000 1377          or.l      #1,D1
080009CA  0001      
080009CC  2F01      1378          move.l    D1,-(A7)
080009CE  2F02      1379          move.l    D2,-(A7)
080009D0  4879 0800 1380          pea       @m68kus~1_28.L
080009D4  32E2      
080009D6  4E92      1381          jsr       (A2)
080009D8  DEFC 0010 1382          add.w     #16,A7
                    1383   word_func_24:
                    1384   ; }
                    1385   ; Start++;
080009DC  5482      1386          addq.l    #2,D2
                    1387   word_func_21:
                    1388   ; }
                    1389   ; if ((count1 == 2) || (((count1 - 2) % 4)) ==0 ){
080009DE  0C83 0000 1390          cmp.l     #2,D3
080009E2  0002      
080009E4  671C      1391          beq.s     word_func_29
080009E6  2003      1392          move.l    D3,D0
080009E8  5580      1393          subq.l    #2,D0
080009EA  2F00      1394          move.l    D0,-(A7)
080009EC  4878 0004 1395          pea       4
080009F0  4EB9 0800 1396          jsr       LDIV
080009F4  1A84      
080009F6  202F 0004 1397          move.l    4(A7),D0
080009FA  504F      1398          addq.w    #8,A7
080009FC  4A80      1399          tst.l     D0
080009FE  6600 004A 1400          bne       word_func_27
                    1401   word_func_29:
                    1402   ; *Start = worddata3;
08000A02  202E FFE2 1403          move.l    -30(A6),D0
08000A06  2042      1404          move.l    D2,A0
08000A08  3080      1405          move.w    D0,(A0)
                    1406   ; if ((count1 == 2) || (((count1 -2) % 1000)==0)){
08000A0A  0C83 0000 1407          cmp.l     #2,D3
08000A0E  0002      
08000A10  671A      1408          beq.s     word_func_32
08000A12  2003      1409          move.l    D3,D0
08000A14  5580      1410          subq.l    #2,D0
08000A16  2F00      1411          move.l    D0,-(A7)
08000A18  4878 03E8 1412          pea       1000
08000A1C  4EB9 0800 1413          jsr       LDIV
08000A20  1A84      
08000A22  202F 0004 1414          move.l    4(A7),D0
08000A26  504F      1415          addq.w    #8,A7
08000A28  4A80      1416          tst.l     D0
08000A2A  661C      1417          bne.s     word_func_30
                    1418   word_func_32:
                    1419   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata3);
08000A2C  2F2E FFE2 1420          move.l    -30(A6),-(A7)
08000A30  2202      1421          move.l    D2,D1
08000A32  82BC 0000 1422          or.l      #1,D1
08000A36  0001      
08000A38  2F01      1423          move.l    D1,-(A7)
08000A3A  2F02      1424          move.l    D2,-(A7)
08000A3C  4879 0800 1425          pea       @m68kus~1_28.L
08000A40  32E2      
08000A42  4E92      1426          jsr       (A2)
08000A44  DEFC 0010 1427          add.w     #16,A7
                    1428   word_func_30:
                    1429   ; }
                    1430   ; Start++;
08000A48  5482      1431          addq.l    #2,D2
                    1432   word_func_27:
                    1433   ; }
                    1434   ; if ((count1 == 3) || (((count1 - 3) % 4)) ==0 ){
08000A4A  0C83 0000 1435          cmp.l     #3,D3
08000A4E  0003      
08000A50  671C      1436          beq.s     word_func_35
08000A52  2003      1437          move.l    D3,D0
08000A54  5780      1438          subq.l    #3,D0
08000A56  2F00      1439          move.l    D0,-(A7)
08000A58  4878 0004 1440          pea       4
08000A5C  4EB9 0800 1441          jsr       LDIV
08000A60  1A84      
08000A62  202F 0004 1442          move.l    4(A7),D0
08000A66  504F      1443          addq.w    #8,A7
08000A68  4A80      1444          tst.l     D0
08000A6A  6600 004A 1445          bne       word_func_33
                    1446   word_func_35:
                    1447   ; *Start = worddata4;
08000A6E  202E FFE6 1448          move.l    -26(A6),D0
08000A72  2042      1449          move.l    D2,A0
08000A74  3080      1450          move.w    D0,(A0)
                    1451   ; if ((count1 == 3) || (((count1 - 3) % 1000)==0)){
08000A76  0C83 0000 1452          cmp.l     #3,D3
08000A7A  0003      
08000A7C  671A      1453          beq.s     word_func_38
08000A7E  2003      1454          move.l    D3,D0
08000A80  5780      1455          subq.l    #3,D0
08000A82  2F00      1456          move.l    D0,-(A7)
08000A84  4878 03E8 1457          pea       1000
08000A88  4EB9 0800 1458          jsr       LDIV
08000A8C  1A84      
08000A8E  202F 0004 1459          move.l    4(A7),D0
08000A92  504F      1460          addq.w    #8,A7
08000A94  4A80      1461          tst.l     D0
08000A96  661C      1462          bne.s     word_func_36
                    1463   word_func_38:
                    1464   ; printf("\r\nAddresses $%08X - $%08X being filled with $%04X", Start, (Start | 0x0001), worddata4);
08000A98  2F2E FFE6 1465          move.l    -26(A6),-(A7)
08000A9C  2202      1466          move.l    D2,D1
08000A9E  82BC 0000 1467          or.l      #1,D1
08000AA2  0001      
08000AA4  2F01      1468          move.l    D1,-(A7)
08000AA6  2F02      1469          move.l    D2,-(A7)
08000AA8  4879 0800 1470          pea       @m68kus~1_28.L
08000AAC  32E2      
08000AAE  4E92      1471          jsr       (A2)
08000AB0  DEFC 0010 1472          add.w     #16,A7
                    1473   word_func_36:
                    1474   ; }
                    1475   ; Start++;
08000AB4  5482      1476          addq.l    #2,D2
                    1477   word_func_33:
                    1478   ; }
                    1479   ; count1++;
08000AB6  5283      1480          addq.l    #1,D3
08000AB8  6000 FE54 1481          bra       word_func_12
                    1482   word_func_14:
                    1483   ; }
                    1484   ; printf("\r\nWriting to memory Complete.\r\nEnter '1' to read back the memory. Enter '0' to exit program.");
08000ABC  4879 0800 1485          pea       @m68kus~1_16.L
08000AC0  30D8      
08000AC2  4E92      1486          jsr       (A2)
08000AC4  584F      1487          addq.w    #4,A7
                    1488   ; choice = _getch();
08000AC6  4EB9 0800 1489          jsr       __getch
08000ACA  0124      
08000ACC  1D40 FFFF 1490          move.b    D0,-1(A6)
                    1491   ; if (choice == '1'){
08000AD0  102E FFFF 1492          move.b    -1(A6),D0
08000AD4  0C00 0031 1493          cmp.b     #49,D0
08000AD8  6600 0158 1494          bne       word_func_39
                    1495   ; //printf("\r\nwill continue");
                    1496   ; while (Start_temp < End_temp){
                    1497   word_func_41:
08000ADC  B8AE FFFA 1498          cmp.l     -6(A6),D4
08000AE0  6400 014E 1499          bhs       word_func_43
                    1500   ; data = (*Start_temp >> 8) & 0xFF;
08000AE4  2044      1501          move.l    D4,A0
08000AE6  3010      1502          move.w    (A0),D0
08000AE8  E040      1503          asr.w     #8,D0
08000AEA  C07C 00FF 1504          and.w     #255,D0
08000AEE  1E00      1505          move.b    D0,D7
                    1506   ; data2 = *Start_temp & 0xFF;
08000AF0  2044      1507          move.l    D4,A0
08000AF2  3010      1508          move.w    (A0),D0
08000AF4  C07C 00FF 1509          and.w     #255,D0
08000AF8  1C00      1510          move.b    D0,D6
                    1511   ; if ((count2 == 0) || (count2 % 1000)==0){
08000AFA  4A85      1512          tst.l     D5
08000AFC  6716      1513          beq.s     word_func_46
08000AFE  2F05      1514          move.l    D5,-(A7)
08000B00  4878 03E8 1515          pea       1000
08000B04  4EB9 0800 1516          jsr       LDIV
08000B08  1A84      
08000B0A  202F 0004 1517          move.l    4(A7),D0
08000B0E  504F      1518          addq.w    #8,A7
08000B10  4A80      1519          tst.l     D0
08000B12  662C      1520          bne.s     word_func_44
                    1521   word_func_46:
                    1522   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000B14  2204      1523          move.l    D4,D1
08000B16  82BC 0000 1524          or.l      #1,D1
08000B1A  0001      
08000B1C  2F01      1525          move.l    D1,-(A7)
08000B1E  2F04      1526          move.l    D4,-(A7)
08000B20  CCBC 0000 1527          and.l     #255,D6
08000B24  00FF      
08000B26  2F06      1528          move.l    D6,-(A7)
08000B28  CEBC 0000 1529          and.l     #255,D7
08000B2C  00FF      
08000B2E  2F07      1530          move.l    D7,-(A7)
08000B30  4879 0800 1531          pea       @m68kus~1_29.L
08000B34  3314      
08000B36  4E92      1532          jsr       (A2)
08000B38  DEFC 0014 1533          add.w     #20,A7
08000B3C  6000 00E8 1534          bra       word_func_53
                    1535   word_func_44:
                    1536   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1537   ; }
                    1538   ; else if ((count2 == 1) || ((count2 - 1) % 1000)==0){
08000B40  0C85 0000 1539          cmp.l     #1,D5
08000B44  0001      
08000B46  671A      1540          beq.s     word_func_49
08000B48  2005      1541          move.l    D5,D0
08000B4A  5380      1542          subq.l    #1,D0
08000B4C  2F00      1543          move.l    D0,-(A7)
08000B4E  4878 03E8 1544          pea       1000
08000B52  4EB9 0800 1545          jsr       LDIV
08000B56  1A84      
08000B58  202F 0004 1546          move.l    4(A7),D0
08000B5C  504F      1547          addq.w    #8,A7
08000B5E  4A80      1548          tst.l     D0
08000B60  662C      1549          bne.s     word_func_47
                    1550   word_func_49:
                    1551   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000B62  2204      1552          move.l    D4,D1
08000B64  82BC 0000 1553          or.l      #1,D1
08000B68  0001      
08000B6A  2F01      1554          move.l    D1,-(A7)
08000B6C  2F04      1555          move.l    D4,-(A7)
08000B6E  CCBC 0000 1556          and.l     #255,D6
08000B72  00FF      
08000B74  2F06      1557          move.l    D6,-(A7)
08000B76  CEBC 0000 1558          and.l     #255,D7
08000B7A  00FF      
08000B7C  2F07      1559          move.l    D7,-(A7)
08000B7E  4879 0800 1560          pea       @m68kus~1_29.L
08000B82  3314      
08000B84  4E92      1561          jsr       (A2)
08000B86  DEFC 0014 1562          add.w     #20,A7
08000B8A  6000 009A 1563          bra       word_func_53
                    1564   word_func_47:
                    1565   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1566   ; }
                    1567   ; else if ((count2 == 2) || ((count2 - 2) % 1000)==0){
08000B8E  0C85 0000 1568          cmp.l     #2,D5
08000B92  0002      
08000B94  671A      1569          beq.s     word_func_52
08000B96  2005      1570          move.l    D5,D0
08000B98  5580      1571          subq.l    #2,D0
08000B9A  2F00      1572          move.l    D0,-(A7)
08000B9C  4878 03E8 1573          pea       1000
08000BA0  4EB9 0800 1574          jsr       LDIV
08000BA4  1A84      
08000BA6  202F 0004 1575          move.l    4(A7),D0
08000BAA  504F      1576          addq.w    #8,A7
08000BAC  4A80      1577          tst.l     D0
08000BAE  662C      1578          bne.s     word_func_50
                    1579   word_func_52:
                    1580   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000BB0  2204      1581          move.l    D4,D1
08000BB2  82BC 0000 1582          or.l      #1,D1
08000BB6  0001      
08000BB8  2F01      1583          move.l    D1,-(A7)
08000BBA  2F04      1584          move.l    D4,-(A7)
08000BBC  CCBC 0000 1585          and.l     #255,D6
08000BC0  00FF      
08000BC2  2F06      1586          move.l    D6,-(A7)
08000BC4  CEBC 0000 1587          and.l     #255,D7
08000BC8  00FF      
08000BCA  2F07      1588          move.l    D7,-(A7)
08000BCC  4879 0800 1589          pea       @m68kus~1_29.L
08000BD0  3314      
08000BD2  4E92      1590          jsr       (A2)
08000BD4  DEFC 0014 1591          add.w     #20,A7
08000BD8  6000 004C 1592          bra       word_func_53
                    1593   word_func_50:
                    1594   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1595   ; }
                    1596   ; else if ((count2 == 3) || ((count2 - 3) % 1000)==0){
08000BDC  0C85 0000 1597          cmp.l     #3,D5
08000BE0  0003      
08000BE2  671A      1598          beq.s     word_func_55
08000BE4  2005      1599          move.l    D5,D0
08000BE6  5780      1600          subq.l    #3,D0
08000BE8  2F00      1601          move.l    D0,-(A7)
08000BEA  4878 03E8 1602          pea       1000
08000BEE  4EB9 0800 1603          jsr       LDIV
08000BF2  1A84      
08000BF4  202F 0004 1604          move.l    4(A7),D0
08000BF8  504F      1605          addq.w    #8,A7
08000BFA  4A80      1606          tst.l     D0
08000BFC  6628      1607          bne.s     word_func_53
                    1608   word_func_55:
                    1609   ; printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_temp, (Start_temp | 0x0001));
08000BFE  2204      1610          move.l    D4,D1
08000C00  82BC 0000 1611          or.l      #1,D1
08000C04  0001      
08000C06  2F01      1612          move.l    D1,-(A7)
08000C08  2F04      1613          move.l    D4,-(A7)
08000C0A  CCBC 0000 1614          and.l     #255,D6
08000C0E  00FF      
08000C10  2F06      1615          move.l    D6,-(A7)
08000C12  CEBC 0000 1616          and.l     #255,D7
08000C16  00FF      
08000C18  2F07      1617          move.l    D7,-(A7)
08000C1A  4879 0800 1618          pea       @m68kus~1_29.L
08000C1E  3314      
08000C20  4E92      1619          jsr       (A2)
08000C22  DEFC 0014 1620          add.w     #20,A7
                    1621   word_func_53:
                    1622   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    1623   ; }
                    1624   ; count2++;
08000C26  5285      1625          addq.l    #1,D5
                    1626   ; *Start_temp++;
08000C28  2044      1627          move.l    D4,A0
08000C2A  5484      1628          addq.l    #2,D4
08000C2C  6000 FEAE 1629          bra       word_func_41
                    1630   word_func_43:
08000C30  6014      1631          bra.s     word_func_56
                    1632   word_func_39:
                    1633   ; }
                    1634   ; }
                    1635   ; else if (choice == '0'){
08000C32  102E FFFF 1636          move.b    -1(A6),D0
08000C36  0C00 0030 1637          cmp.b     #48,D0
08000C3A  660A      1638          bne.s     word_func_56
                    1639   ; printf("\r\nProgram Ended");
08000C3C  4879 0800 1640          pea       @m68kus~1_18.L
08000C40  3156      
08000C42  4E92      1641          jsr       (A2)
08000C44  584F      1642          addq.w    #4,A7
                    1643   word_func_56:
08000C46  4CDF 1CFC 1644          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4
08000C4A  4E5E      1645          unlk      A6
08000C4C  4E75      1646          rts
                    1647   ; }
                    1648   ; /*
                    1649   ; *Start = 0xAAAA;
                    1650   ; printf("\r\n%04X", *Start);
                    1651   ; //  data = *Start;
                    1652   ; //data2 =*(Start + 0x00000001);
                    1653   ; data = (*Start >> 8) & 0xFF;
                    1654   ; data2 = *Start & 0xFF;
                    1655   ; printf("\r\nValue $%02X $%02X found at address $%08X - $%08X", data, data2, Start, (Start + (0x000F && Start)));
                    1656   ; printf("\r\nValue $%02X $%02X found at address $%08X - $%08X", data, data2, Start, (Start + 1));
                    1657   ; printf("\r\nValue $%02X $%02X found at address $%08X - $%08X", data, data2, Start, (Start | 0x0001));
                    1658   ; */
                    1659   ; }
                    1660   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1661   ; //LongWord_func//
                    1662   ; /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    1663   ; void longword_func(void){
                    1664   _longword_func:
08000C4E  4E56 FFCC 1665          link      A6,#-52
08000C52  48E7 3F38 1666          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4,-(A7)
08000C56  45F9 0800 1667          lea       _printf.L,A2
08000C5A  1B82      
08000C5C  47F9 0800 1668          lea       _scanf.L,A3
08000C60  1B50      
08000C62  49EE FFE6 1669          lea       -26(A6),A4
                    1670   ; unsigned char data1a, data1b, data2a, data2b, data3a, data3b, data4a, data4b;
                    1671   ; int lworddata1, lworddata2, lworddata3, lworddata4;
                    1672   ; int *Start_hold, *End_hold;
                    1673   ; int *Start, *End;
                    1674   ; int *idk;
                    1675   ; short test, test1;
                    1676   ; int count3, count4;
                    1677   ; int count1 = 0;
08000C66  4284      1678          clr.l     D4
                    1679   ; int count2 = 0;
08000C68  4285      1680          clr.l     D5
                    1681   ; unsigned char add1, add2;
                    1682   ; short add3;
                    1683   ; char choice;
                    1684   ; printf("\r\nEnter 4 long words (4 bytes) of Hexidecimal test data.");
08000C6A  4879 0800 1685          pea       @m68kus~1_30.L
08000C6E  334A      
08000C70  4E92      1686          jsr       (A2)
08000C72  584F      1687          addq.w    #4,A7
                    1688   ; printf("\r\nEnter First long word: ");
08000C74  4879 0800 1689          pea       @m68kus~1_31.L
08000C78  3384      
08000C7A  4E92      1690          jsr       (A2)
08000C7C  584F      1691          addq.w    #4,A7
                    1692   ; scanf("%x", &lworddata1) ;
08000C7E  486E FFD2 1693          pea       -46(A6)
08000C82  4879 0800 1694          pea       @m68kus~1_3.L
08000C86  2F1E      
08000C88  4E93      1695          jsr       (A3)
08000C8A  504F      1696          addq.w    #8,A7
                    1697   ; //lworddata1 = Get8HexDigits(0) ;
                    1698   ; //data1a = lworddata1 & 0xFFFF;
                    1699   ; //data1b = (lworddata1 >> 16) & 0xFFFF;
                    1700   ; printf("Enter Second long word: ");
08000C8C  4879 0800 1701          pea       @m68kus~1_32.L
08000C90  339E      
08000C92  4E92      1702          jsr       (A2)
08000C94  584F      1703          addq.w    #4,A7
                    1704   ; scanf("%x", &lworddata2) ;
08000C96  486E FFD6 1705          pea       -42(A6)
08000C9A  4879 0800 1706          pea       @m68kus~1_3.L
08000C9E  2F1E      
08000CA0  4E93      1707          jsr       (A3)
08000CA2  504F      1708          addq.w    #8,A7
                    1709   ; //lworddata2 = Get8HexDigits(0) ;
                    1710   ; printf("Enter Third long word: ");
08000CA4  4879 0800 1711          pea       @m68kus~1_33.L
08000CA8  33B8      
08000CAA  4E92      1712          jsr       (A2)
08000CAC  584F      1713          addq.w    #4,A7
                    1714   ; scanf("%x", &lworddata3) ;
08000CAE  486E FFDA 1715          pea       -38(A6)
08000CB2  4879 0800 1716          pea       @m68kus~1_3.L
08000CB6  2F1E      
08000CB8  4E93      1717          jsr       (A3)
08000CBA  504F      1718          addq.w    #8,A7
                    1719   ; //lworddata3 = Get8HexDigits(0) ;
                    1720   ; printf("Enter Fourth long word: ");
08000CBC  4879 0800 1721          pea       @m68kus~1_34.L
08000CC0  33D0      
08000CC2  4E92      1722          jsr       (A2)
08000CC4  584F      1723          addq.w    #4,A7
                    1724   ; scanf("%x", &lworddata4) ;
08000CC6  486E FFDE 1725          pea       -34(A6)
08000CCA  4879 0800 1726          pea       @m68kus~1_3.L
08000CCE  2F1E      
08000CD0  4E93      1727          jsr       (A3)
08000CD2  504F      1728          addq.w    #8,A7
                    1729   ; //lworddata4 = Get8HexDigits(0) ;
                    1730   ; // printf("\r\n%04x   %04x", data1a, data1b);
                    1731   ; printf("Valid addresses for this program are: $0900 0000 - $097F FFFF");
08000CD4  4879 0800 1732          pea       @m68kus~1_24.L
08000CD8  31EC      
08000CDA  4E92      1733          jsr       (A2)
08000CDC  584F      1734          addq.w    #4,A7
                    1735   ; printf("\r\nFor this test, the start and end addresses must align to an even address");
08000CDE  4879 0800 1736          pea       @m68kus~1_25.L
08000CE2  322A      
08000CE4  4E92      1737          jsr       (A2)
08000CE6  584F      1738          addq.w    #4,A7
                    1739   ; printf("\r\nEnter Start Address: ") ;
08000CE8  4879 0800 1740          pea       @m68kus~1_8.L
08000CEC  2F9E      
08000CEE  4E92      1741          jsr       (A2)
08000CF0  584F      1742          addq.w    #4,A7
                    1743   ; scanf("%x", &Start_hold) ;
08000CF2  486E FFE2 1744          pea       -30(A6)
08000CF6  4879 0800 1745          pea       @m68kus~1_3.L
08000CFA  2F1E      
08000CFC  4E93      1746          jsr       (A3)
08000CFE  504F      1747          addq.w    #8,A7
                    1748   ; //Start_hold = Get8HexDigits(0) ;
                    1749   ; printf("Enter End Address: ") ;
08000D00  4879 0800 1750          pea       @m68kus~1_9.L
08000D04  2FB6      
08000D06  4E92      1751          jsr       (A2)
08000D08  584F      1752          addq.w    #4,A7
                    1753   ; scanf("%x", &End_hold) ;
08000D0A  2F0C      1754          move.l    A4,-(A7)
08000D0C  4879 0800 1755          pea       @m68kus~1_3.L
08000D10  2F1E      
08000D12  4E93      1756          jsr       (A3)
08000D14  504F      1757          addq.w    #8,A7
                    1758   ; //End_hold = Get8HexDigits(0) ;
                    1759   ; while ((Start_hold < 0x09000000) || (Start_hold > 0x097FFFFF) || ((Start_hold % 2) != 0)){
                    1760   longword_func_1:
08000D16  202E FFE2 1761          move.l    -30(A6),D0
08000D1A  0C80 0900 1762          cmp.l     #150994944,D0
08000D1E  0000      
08000D20  6524      1763          blo.s     longword_func_4
08000D22  202E FFE2 1764          move.l    -30(A6),D0
08000D26  0C80 097F 1765          cmp.l     #159383551,D0
08000D2A  FFFF      
08000D2C  6218      1766          bhi.s     longword_func_4
08000D2E  2F2E FFE2 1767          move.l    -30(A6),-(A7)
08000D32  4878 0002 1768          pea       2
08000D36  4EB9 0800 1769          jsr       ULDIV
08000D3A  1A72      
08000D3C  202F 0004 1770          move.l    4(A7),D0
08000D40  504F      1771          addq.w    #8,A7
08000D42  4A80      1772          tst.l     D0
08000D44  671A      1773          beq.s     longword_func_3
                    1774   longword_func_4:
                    1775   ; printf("ERROR. Please Enter a valid Start Address: ");
08000D46  4879 0800 1776          pea       @m68kus~1_10.L
08000D4A  2FCA      
08000D4C  4E92      1777          jsr       (A2)
08000D4E  584F      1778          addq.w    #4,A7
                    1779   ; scanf("%x", &Start_hold) ;
08000D50  486E FFE2 1780          pea       -30(A6)
08000D54  4879 0800 1781          pea       @m68kus~1_3.L
08000D58  2F1E      
08000D5A  4E93      1782          jsr       (A3)
08000D5C  504F      1783          addq.w    #8,A7
08000D5E  60B6      1784          bra       longword_func_1
                    1785   longword_func_3:
                    1786   ; //Start_hold = Get8HexDigits(0) ;
                    1787   ; }
                    1788   ; while ((End_hold < 0x09000000) || (End_hold > 0x097FFFFF) || ((End_hold % 2) != 0)){
                    1789   longword_func_5:
08000D60  2014      1790          move.l    (A4),D0
08000D62  0C80 0900 1791          cmp.l     #150994944,D0
08000D66  0000      
08000D68  6520      1792          blo.s     longword_func_8
08000D6A  2014      1793          move.l    (A4),D0
08000D6C  0C80 097F 1794          cmp.l     #159383551,D0
08000D70  FFFF      
08000D72  6216      1795          bhi.s     longword_func_8
08000D74  2F14      1796          move.l    (A4),-(A7)
08000D76  4878 0002 1797          pea       2
08000D7A  4EB9 0800 1798          jsr       ULDIV
08000D7E  1A72      
08000D80  202F 0004 1799          move.l    4(A7),D0
08000D84  504F      1800          addq.w    #8,A7
08000D86  4A80      1801          tst.l     D0
08000D88  6718      1802          beq.s     longword_func_7
                    1803   longword_func_8:
                    1804   ; printf("ERROR. Please Enter a valid End Address: ");
08000D8A  4879 0800 1805          pea       @m68kus~1_26.L
08000D8E  3276      
08000D90  4E92      1806          jsr       (A2)
08000D92  584F      1807          addq.w    #4,A7
                    1808   ; scanf("%x", &End_hold) ;
08000D94  2F0C      1809          move.l    A4,-(A7)
08000D96  4879 0800 1810          pea       @m68kus~1_3.L
08000D9A  2F1E      
08000D9C  4E93      1811          jsr       (A3)
08000D9E  504F      1812          addq.w    #8,A7
08000DA0  60BE      1813          bra       longword_func_5
                    1814   longword_func_7:
                    1815   ; //End_hold = Get8HexDigits(0) ;
                    1816   ; }
                    1817   ; while (End_hold <= Start_hold){
                    1818   longword_func_9:
08000DA2  2014      1819          move.l    (A4),D0
08000DA4  B0AE FFE2 1820          cmp.l     -30(A6),D0
08000DA8  6222      1821          bhi.s     longword_func_11
                    1822   ; printf("ERROR. Please enter an End Address larger than the Start Address");
08000DAA  4879 0800 1823          pea       @m68kus~1_27.L
08000DAE  32A0      
08000DB0  4E92      1824          jsr       (A2)
08000DB2  584F      1825          addq.w    #4,A7
                    1826   ; //printf("\r\nEnter Start Address: ") ;
                    1827   ; //Start_hold = Get8HexDigits(0) ;
                    1828   ; printf("\r\nEnter End Address: ") ;
08000DB4  4879 0800 1829          pea       @m68kus~1_13.L
08000DB8  3066      
08000DBA  4E92      1830          jsr       (A2)
08000DBC  584F      1831          addq.w    #4,A7
                    1832   ; scanf("%x", &End_hold) ;
08000DBE  2F0C      1833          move.l    A4,-(A7)
08000DC0  4879 0800 1834          pea       @m68kus~1_3.L
08000DC4  2F1E      
08000DC6  4E93      1835          jsr       (A3)
08000DC8  504F      1836          addq.w    #8,A7
08000DCA  60D6      1837          bra       longword_func_9
                    1838   longword_func_11:
                    1839   ; //End_hold = Get8HexDigits(0) ;
                    1840   ; }
                    1841   ; Start = Start_hold;
08000DCC  262E FFE2 1842          move.l    -30(A6),D3
                    1843   ; End = End_hold;
08000DD0  2D54 FFEA 1844          move.l    (A4),-22(A6)
                    1845   ; while (Start < End){
                    1846   longword_func_12:
08000DD4  B6AE FFEA 1847          cmp.l     -22(A6),D3
08000DD8  6400 01A0 1848          bhs       longword_func_14
                    1849   ; if ((count1 == 0) || ((count1 % 4)) ==0 ){
08000DDC  4A84      1850          tst.l     D4
08000DDE  6718      1851          beq.s     longword_func_17
08000DE0  2F04      1852          move.l    D4,-(A7)
08000DE2  4878 0004 1853          pea       4
08000DE6  4EB9 0800 1854          jsr       LDIV
08000DEA  1A84      
08000DEC  202F 0004 1855          move.l    4(A7),D0
08000DF0  504F      1856          addq.w    #8,A7
08000DF2  4A80      1857          tst.l     D0
08000DF4  6600 0040 1858          bne       longword_func_15
                    1859   longword_func_17:
                    1860   ; *Start = lworddata1;
08000DF8  2043      1861          move.l    D3,A0
08000DFA  20AE FFD2 1862          move.l    -46(A6),(A0)
                    1863   ; idk = Start;
08000DFE  2403      1864          move.l    D3,D2
                    1865   ; idk = (int *)((char *)idk + 3);
08000E00  2002      1866          move.l    D2,D0
08000E02  5680      1867          addq.l    #3,D0
08000E04  2400      1868          move.l    D0,D2
                    1869   ; if ((count1 == 0) || ((count1 % 1000)==0)){
08000E06  4A84      1870          tst.l     D4
08000E08  6716      1871          beq.s     longword_func_20
08000E0A  2F04      1872          move.l    D4,-(A7)
08000E0C  4878 03E8 1873          pea       1000
08000E10  4EB9 0800 1874          jsr       LDIV
08000E14  1A84      
08000E16  202F 0004 1875          move.l    4(A7),D0
08000E1A  504F      1876          addq.w    #8,A7
08000E1C  4A80      1877          tst.l     D0
08000E1E  6614      1878          bne.s     longword_func_18
                    1879   longword_func_20:
                    1880   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata1);
08000E20  2F2E FFD2 1881          move.l    -46(A6),-(A7)
08000E24  2F02      1882          move.l    D2,-(A7)
08000E26  2F03      1883          move.l    D3,-(A7)
08000E28  4879 0800 1884          pea       @m68kus~1_35.L
08000E2C  33EA      
08000E2E  4E92      1885          jsr       (A2)
08000E30  DEFC 0010 1886          add.w     #16,A7
                    1887   longword_func_18:
                    1888   ; }
                    1889   ; Start++;
08000E34  5883      1890          addq.l    #4,D3
                    1891   longword_func_15:
                    1892   ; }
                    1893   ; if ((count1 == 1) || (((count1 - 1) % 4)) ==0 ){
08000E36  0C84 0000 1894          cmp.l     #1,D4
08000E3A  0001      
08000E3C  671C      1895          beq.s     longword_func_23
08000E3E  2004      1896          move.l    D4,D0
08000E40  5380      1897          subq.l    #1,D0
08000E42  2F00      1898          move.l    D0,-(A7)
08000E44  4878 0004 1899          pea       4
08000E48  4EB9 0800 1900          jsr       LDIV
08000E4C  1A84      
08000E4E  202F 0004 1901          move.l    4(A7),D0
08000E52  504F      1902          addq.w    #8,A7
08000E54  4A80      1903          tst.l     D0
08000E56  6600 0048 1904          bne       longword_func_21
                    1905   longword_func_23:
                    1906   ; *Start = lworddata2;
08000E5A  2043      1907          move.l    D3,A0
08000E5C  20AE FFD6 1908          move.l    -42(A6),(A0)
                    1909   ; idk = Start;
08000E60  2403      1910          move.l    D3,D2
                    1911   ; idk = (int *)((char *)idk + 3);
08000E62  2002      1912          move.l    D2,D0
08000E64  5680      1913          addq.l    #3,D0
08000E66  2400      1914          move.l    D0,D2
                    1915   ; if ((count1 == 1) || (((count1 -1) % 1000)==0)){
08000E68  0C84 0000 1916          cmp.l     #1,D4
08000E6C  0001      
08000E6E  671A      1917          beq.s     longword_func_26
08000E70  2004      1918          move.l    D4,D0
08000E72  5380      1919          subq.l    #1,D0
08000E74  2F00      1920          move.l    D0,-(A7)
08000E76  4878 03E8 1921          pea       1000
08000E7A  4EB9 0800 1922          jsr       LDIV
08000E7E  1A84      
08000E80  202F 0004 1923          move.l    4(A7),D0
08000E84  504F      1924          addq.w    #8,A7
08000E86  4A80      1925          tst.l     D0
08000E88  6614      1926          bne.s     longword_func_24
                    1927   longword_func_26:
                    1928   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata2);
08000E8A  2F2E FFD6 1929          move.l    -42(A6),-(A7)
08000E8E  2F02      1930          move.l    D2,-(A7)
08000E90  2F03      1931          move.l    D3,-(A7)
08000E92  4879 0800 1932          pea       @m68kus~1_35.L
08000E96  33EA      
08000E98  4E92      1933          jsr       (A2)
08000E9A  DEFC 0010 1934          add.w     #16,A7
                    1935   longword_func_24:
                    1936   ; }
                    1937   ; Start++;
08000E9E  5883      1938          addq.l    #4,D3
                    1939   longword_func_21:
                    1940   ; }
                    1941   ; if ((count1 == 2) || (((count1 - 2) % 4)) ==0 ){
08000EA0  0C84 0000 1942          cmp.l     #2,D4
08000EA4  0002      
08000EA6  671C      1943          beq.s     longword_func_29
08000EA8  2004      1944          move.l    D4,D0
08000EAA  5580      1945          subq.l    #2,D0
08000EAC  2F00      1946          move.l    D0,-(A7)
08000EAE  4878 0004 1947          pea       4
08000EB2  4EB9 0800 1948          jsr       LDIV
08000EB6  1A84      
08000EB8  202F 0004 1949          move.l    4(A7),D0
08000EBC  504F      1950          addq.w    #8,A7
08000EBE  4A80      1951          tst.l     D0
08000EC0  6600 0048 1952          bne       longword_func_27
                    1953   longword_func_29:
                    1954   ; *Start = lworddata3;
08000EC4  2043      1955          move.l    D3,A0
08000EC6  20AE FFDA 1956          move.l    -38(A6),(A0)
                    1957   ; idk = Start;
08000ECA  2403      1958          move.l    D3,D2
                    1959   ; idk = (int *)((char *)idk + 3);
08000ECC  2002      1960          move.l    D2,D0
08000ECE  5680      1961          addq.l    #3,D0
08000ED0  2400      1962          move.l    D0,D2
                    1963   ; if ((count1 == 2) || (((count1 -2) % 1000)==0)){
08000ED2  0C84 0000 1964          cmp.l     #2,D4
08000ED6  0002      
08000ED8  671A      1965          beq.s     longword_func_32
08000EDA  2004      1966          move.l    D4,D0
08000EDC  5580      1967          subq.l    #2,D0
08000EDE  2F00      1968          move.l    D0,-(A7)
08000EE0  4878 03E8 1969          pea       1000
08000EE4  4EB9 0800 1970          jsr       LDIV
08000EE8  1A84      
08000EEA  202F 0004 1971          move.l    4(A7),D0
08000EEE  504F      1972          addq.w    #8,A7
08000EF0  4A80      1973          tst.l     D0
08000EF2  6614      1974          bne.s     longword_func_30
                    1975   longword_func_32:
                    1976   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata3);
08000EF4  2F2E FFDA 1977          move.l    -38(A6),-(A7)
08000EF8  2F02      1978          move.l    D2,-(A7)
08000EFA  2F03      1979          move.l    D3,-(A7)
08000EFC  4879 0800 1980          pea       @m68kus~1_35.L
08000F00  33EA      
08000F02  4E92      1981          jsr       (A2)
08000F04  DEFC 0010 1982          add.w     #16,A7
                    1983   longword_func_30:
                    1984   ; }
                    1985   ; Start++;
08000F08  5883      1986          addq.l    #4,D3
                    1987   longword_func_27:
                    1988   ; }
                    1989   ; if ((count1 == 3) || (((count1 - 3) % 4)) ==0 ){
08000F0A  0C84 0000 1990          cmp.l     #3,D4
08000F0E  0003      
08000F10  671C      1991          beq.s     longword_func_35
08000F12  2004      1992          move.l    D4,D0
08000F14  5780      1993          subq.l    #3,D0
08000F16  2F00      1994          move.l    D0,-(A7)
08000F18  4878 0004 1995          pea       4
08000F1C  4EB9 0800 1996          jsr       LDIV
08000F20  1A84      
08000F22  202F 0004 1997          move.l    4(A7),D0
08000F26  504F      1998          addq.w    #8,A7
08000F28  4A80      1999          tst.l     D0
08000F2A  6600 0048 2000          bne       longword_func_33
                    2001   longword_func_35:
                    2002   ; *Start = lworddata4;
08000F2E  2043      2003          move.l    D3,A0
08000F30  20AE FFDE 2004          move.l    -34(A6),(A0)
                    2005   ; idk = Start;
08000F34  2403      2006          move.l    D3,D2
                    2007   ; idk = (int *)((char *)idk + 3);
08000F36  2002      2008          move.l    D2,D0
08000F38  5680      2009          addq.l    #3,D0
08000F3A  2400      2010          move.l    D0,D2
                    2011   ; if ((count1 == 3) || (((count1 - 3) % 1000)==0)){
08000F3C  0C84 0000 2012          cmp.l     #3,D4
08000F40  0003      
08000F42  671A      2013          beq.s     longword_func_38
08000F44  2004      2014          move.l    D4,D0
08000F46  5780      2015          subq.l    #3,D0
08000F48  2F00      2016          move.l    D0,-(A7)
08000F4A  4878 03E8 2017          pea       1000
08000F4E  4EB9 0800 2018          jsr       LDIV
08000F52  1A84      
08000F54  202F 0004 2019          move.l    4(A7),D0
08000F58  504F      2020          addq.w    #8,A7
08000F5A  4A80      2021          tst.l     D0
08000F5C  6614      2022          bne.s     longword_func_36
                    2023   longword_func_38:
                    2024   ; printf("\r\nAddresses $%08X - $%08X being filled with $%08X", Start, idk, lworddata4);
08000F5E  2F2E FFDE 2025          move.l    -34(A6),-(A7)
08000F62  2F02      2026          move.l    D2,-(A7)
08000F64  2F03      2027          move.l    D3,-(A7)
08000F66  4879 0800 2028          pea       @m68kus~1_35.L
08000F6A  33EA      
08000F6C  4E92      2029          jsr       (A2)
08000F6E  DEFC 0010 2030          add.w     #16,A7
                    2031   longword_func_36:
                    2032   ; }
                    2033   ; Start++;
08000F72  5883      2034          addq.l    #4,D3
                    2035   longword_func_33:
                    2036   ; }
                    2037   ; count1++;
08000F74  5284      2038          addq.l    #1,D4
08000F76  6000 FE5C 2039          bra       longword_func_12
                    2040   longword_func_14:
                    2041   ; }
                    2042   ; printf("\r\nWriting to memory Complete.\r\nEnter '1' to read back the memory. Enter '0' to exit program.");
08000F7A  4879 0800 2043          pea       @m68kus~1_16.L
08000F7E  30D8      
08000F80  4E92      2044          jsr       (A2)
08000F82  584F      2045          addq.w    #4,A7
                    2046   ; choice = _getch();
08000F84  4EB9 0800 2047          jsr       __getch
08000F88  0124      
08000F8A  1D40 FFFF 2048          move.b    D0,-1(A6)
                    2049   ; if (choice == '1'){
08000F8E  102E FFFF 2050          move.b    -1(A6),D0
08000F92  0C00 0031 2051          cmp.b     #49,D0
08000F96  6600 01E8 2052          bne       longword_func_39
                    2053   ; //printf("\r\nwill continue");
                    2054   ; while (Start_hold < End_hold){
                    2055   longword_func_41:
08000F9A  202E FFE2 2056          move.l    -30(A6),D0
08000F9E  B094      2057          cmp.l     (A4),D0
08000FA0  6400 01DC 2058          bhs       longword_func_43
                    2059   ; data1a = (*Start_hold >> 8) & 0xFF;
08000FA4  206E FFE2 2060          move.l    -30(A6),A0
08000FA8  2010      2061          move.l    (A0),D0
08000FAA  E080      2062          asr.l     #8,D0
08000FAC  C0BC 0000 2063          and.l     #255,D0
08000FB0  00FF      
08000FB2  1D40 FFCC 2064          move.b    D0,-52(A6)
                    2065   ; data1b = *Start_hold & 0xFF;
08000FB6  206E FFE2 2066          move.l    -30(A6),A0
08000FBA  2010      2067          move.l    (A0),D0
08000FBC  C0BC 0000 2068          and.l     #255,D0
08000FC0  00FF      
08000FC2  1D40 FFCD 2069          move.b    D0,-51(A6)
                    2070   ; data2a = (*Start_hold >> 24) & 0xFF;
08000FC6  206E FFE2 2071          move.l    -30(A6),A0
08000FCA  2010      2072          move.l    (A0),D0
08000FCC  E080      2073          asr.l     #8,D0
08000FCE  E080      2074          asr.l     #8,D0
08000FD0  E080      2075          asr.l     #8,D0
08000FD2  C0BC 0000 2076          and.l     #255,D0
08000FD6  00FF      
08000FD8  1E00      2077          move.b    D0,D7
                    2078   ; data2b = (*Start_hold >> 16) & 0xFF;
08000FDA  206E FFE2 2079          move.l    -30(A6),A0
08000FDE  2010      2080          move.l    (A0),D0
08000FE0  E080      2081          asr.l     #8,D0
08000FE2  E080      2082          asr.l     #8,D0
08000FE4  C0BC 0000 2083          and.l     #255,D0
08000FE8  00FF      
08000FEA  1C00      2084          move.b    D0,D6
                    2085   ; idk = Start_hold;
08000FEC  242E FFE2 2086          move.l    -30(A6),D2
                    2087   ; idk = (int *)((char *)idk + 3);
08000FF0  2002      2088          move.l    D2,D0
08000FF2  5680      2089          addq.l    #3,D0
08000FF4  2400      2090          move.l    D0,D2
                    2091   ; //data = (*Start_hold >> 8) & 0xFF;
                    2092   ; //data2 = *Start_hold & 0xFF;
                    2093   ; if ((count2 == 0) || (count2 % 1000)==0){
08000FF6  4A85      2094          tst.l     D5
08000FF8  6718      2095          beq.s     longword_func_46
08000FFA  2F05      2096          move.l    D5,-(A7)
08000FFC  4878 03E8 2097          pea       1000
08001000  4EB9 0800 2098          jsr       LDIV
08001004  1A84      
08001006  202F 0004 2099          move.l    4(A7),D0
0800100A  504F      2100          addq.w    #8,A7
0800100C  4A80      2101          tst.l     D0
0800100E  6600 0040 2102          bne       longword_func_44
                    2103   longword_func_46:
                    2104   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
08001012  2F02      2105          move.l    D2,-(A7)
08001014  2F2E FFE2 2106          move.l    -30(A6),-(A7)
08001018  122E FFCD 2107          move.b    -51(A6),D1
0800101C  C2BC 0000 2108          and.l     #255,D1
08001020  00FF      
08001022  2F01      2109          move.l    D1,-(A7)
08001024  122E FFCC 2110          move.b    -52(A6),D1
08001028  C2BC 0000 2111          and.l     #255,D1
0800102C  00FF      
0800102E  2F01      2112          move.l    D1,-(A7)
08001030  CCBC 0000 2113          and.l     #255,D6
08001034  00FF      
08001036  2F06      2114          move.l    D6,-(A7)
08001038  CEBC 0000 2115          and.l     #255,D7
0800103C  00FF      
0800103E  2F07      2116          move.l    D7,-(A7)
08001040  4879 0800 2117          pea       @m68kus~1_36.L
08001044  341C      
08001046  4E92      2118          jsr       (A2)
08001048  DEFC 001C 2119          add.w     #28,A7
0800104C  6000 0122 2120          bra       longword_func_53
                    2121   longword_func_44:
                    2122   ; //printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_hold, (Start_hold | 0x0001));
                    2123   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    2124   ; }
                    2125   ; else if ((count2 == 1) || ((count2 - 1) % 1000)==0){
08001050  0C85 0000 2126          cmp.l     #1,D5
08001054  0001      
08001056  671C      2127          beq.s     longword_func_49
08001058  2005      2128          move.l    D5,D0
0800105A  5380      2129          subq.l    #1,D0
0800105C  2F00      2130          move.l    D0,-(A7)
0800105E  4878 03E8 2131          pea       1000
08001062  4EB9 0800 2132          jsr       LDIV
08001066  1A84      
08001068  202F 0004 2133          move.l    4(A7),D0
0800106C  504F      2134          addq.w    #8,A7
0800106E  4A80      2135          tst.l     D0
08001070  6600 0040 2136          bne       longword_func_47
                    2137   longword_func_49:
                    2138   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
08001074  2F02      2139          move.l    D2,-(A7)
08001076  2F2E FFE2 2140          move.l    -30(A6),-(A7)
0800107A  122E FFCD 2141          move.b    -51(A6),D1
0800107E  C2BC 0000 2142          and.l     #255,D1
08001082  00FF      
08001084  2F01      2143          move.l    D1,-(A7)
08001086  122E FFCC 2144          move.b    -52(A6),D1
0800108A  C2BC 0000 2145          and.l     #255,D1
0800108E  00FF      
08001090  2F01      2146          move.l    D1,-(A7)
08001092  CCBC 0000 2147          and.l     #255,D6
08001096  00FF      
08001098  2F06      2148          move.l    D6,-(A7)
0800109A  CEBC 0000 2149          and.l     #255,D7
0800109E  00FF      
080010A0  2F07      2150          move.l    D7,-(A7)
080010A2  4879 0800 2151          pea       @m68kus~1_36.L
080010A6  341C      
080010A8  4E92      2152          jsr       (A2)
080010AA  DEFC 001C 2153          add.w     #28,A7
080010AE  6000 00C0 2154          bra       longword_func_53
                    2155   longword_func_47:
                    2156   ; //printf("\r\nValues $%02X $%02X found at addresses $%08X - $%08X", data, data2, Start_hold, (Start_hold | 0x0001));
                    2157   ; //printf("\r\n$%02X Read from address $%08X", tempdata, Start_hold);
                    2158   ; }
                    2159   ; else if ((count2 == 2) || ((count2 - 2) % 1000)==0){
080010B2  0C85 0000 2160          cmp.l     #2,D5
080010B6  0002      
080010B8  671C      2161          beq.s     longword_func_52
080010BA  2005      2162          move.l    D5,D0
080010BC  5580      2163          subq.l    #2,D0
080010BE  2F00      2164          move.l    D0,-(A7)
080010C0  4878 03E8 2165          pea       1000
080010C4  4EB9 0800 2166          jsr       LDIV
080010C8  1A84      
080010CA  202F 0004 2167          move.l    4(A7),D0
080010CE  504F      2168          addq.w    #8,A7
080010D0  4A80      2169          tst.l     D0
080010D2  6600 0040 2170          bne       longword_func_50
                    2171   longword_func_52:
                    2172   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
080010D6  2F02      2173          move.l    D2,-(A7)
080010D8  2F2E FFE2 2174          move.l    -30(A6),-(A7)
080010DC  122E FFCD 2175          move.b    -51(A6),D1
080010E0  C2BC 0000 2176          and.l     #255,D1
080010E4  00FF      
080010E6  2F01      2177          move.l    D1,-(A7)
080010E8  122E FFCC 2178          move.b    -52(A6),D1
080010EC  C2BC 0000 2179          and.l     #255,D1
080010F0  00FF      
080010F2  2F01      2180          move.l    D1,-(A7)
080010F4  CCBC 0000 2181          and.l     #255,D6
080010F8  00FF      
080010FA  2F06      2182          move.l    D6,-(A7)
080010FC  CEBC 0000 2183          and.l     #255,D7
08001100  00FF      
08001102  2F07      2184          move.l    D7,-(A7)
08001104  4879 0800 2185          pea       @m68kus~1_36.L
08001108  341C      
0800110A  4E92      2186          jsr       (A2)
0800110C  DEFC 001C 2187          add.w     #28,A7
08001110  6000 005E 2188          bra       longword_func_53
                    2189   longword_func_50:
                    2190   ; }
                    2191   ; else if ((count2 == 3) || ((count2 - 3) % 1000)==0){
08001114  0C85 0000 2192          cmp.l     #3,D5
08001118  0003      
0800111A  671A      2193          beq.s     longword_func_55
0800111C  2005      2194          move.l    D5,D0
0800111E  5780      2195          subq.l    #3,D0
08001120  2F00      2196          move.l    D0,-(A7)
08001122  4878 03E8 2197          pea       1000
08001126  4EB9 0800 2198          jsr       LDIV
0800112A  1A84      
0800112C  202F 0004 2199          move.l    4(A7),D0
08001130  504F      2200          addq.w    #8,A7
08001132  4A80      2201          tst.l     D0
08001134  663A      2202          bne.s     longword_func_53
                    2203   longword_func_55:
                    2204   ; printf("\r\nValues $%02X $%02X $%02X $%02X found at addresses $%08X - $%08X", data2a, data2b, data1a, data1b, Start_hold, idk);
08001136  2F02      2205          move.l    D2,-(A7)
08001138  2F2E FFE2 2206          move.l    -30(A6),-(A7)
0800113C  122E FFCD 2207          move.b    -51(A6),D1
08001140  C2BC 0000 2208          and.l     #255,D1
08001144  00FF      
08001146  2F01      2209          move.l    D1,-(A7)
08001148  122E FFCC 2210          move.b    -52(A6),D1
0800114C  C2BC 0000 2211          and.l     #255,D1
08001150  00FF      
08001152  2F01      2212          move.l    D1,-(A7)
08001154  CCBC 0000 2213          and.l     #255,D6
08001158  00FF      
0800115A  2F06      2214          move.l    D6,-(A7)
0800115C  CEBC 0000 2215          and.l     #255,D7
08001160  00FF      
08001162  2F07      2216          move.l    D7,-(A7)
08001164  4879 0800 2217          pea       @m68kus~1_36.L
08001168  341C      
0800116A  4E92      2218          jsr       (A2)
0800116C  DEFC 001C 2219          add.w     #28,A7
                    2220   longword_func_53:
                    2221   ; }
                    2222   ; count2++;
08001170  5285      2223          addq.l    #1,D5
                    2224   ; *Start_hold++;
08001172  206E FFE2 2225          move.l    -30(A6),A0
08001176  58AE FFE2 2226          addq.l    #4,-30(A6)
0800117A  6000 FE1E 2227          bra       longword_func_41
                    2228   longword_func_43:
0800117E  6014      2229          bra.s     longword_func_56
                    2230   longword_func_39:
                    2231   ; }
                    2232   ; }
                    2233   ; else if (choice == '0'){
08001180  102E FFFF 2234          move.b    -1(A6),D0
08001184  0C00 0030 2235          cmp.b     #48,D0
08001188  660A      2236          bne.s     longword_func_56
                    2237   ; printf("\r\nProgram Ended");
0800118A  4879 0800 2238          pea       @m68kus~1_18.L
0800118E  3156      
08001190  4E92      2239          jsr       (A2)
08001192  584F      2240          addq.w    #4,A7
                    2241   longword_func_56:
08001194  4CDF 1CFC 2242          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4
08001198  4E5E      2243          unlk      A6
0800119A  4E75      2244          rts
                    2245   ; }
                    2246   ; }
                    2247   ; //////////////////////////////////////////////////////////
                    2248   ; //******IIC Program Functions Begin Here***************///
                    2249   ; //////////////////////////////////////////////////////////
                    2250   ; void IIC_Init(void)
                    2251   ; {
                    2252   _IIC_Init:
                    2253   ; IIC_Prescale_Low = 0x31; //31
0800119C  13FC 0031 2254          move.b    #49,4227072
080011A0  0040 8000 
                    2255   ; //IIC_Prescale_Low = 0x63;
                    2256   ; IIC_Prescale_High = 0x00; //0xFF for reset
080011A4  4239 0040 2257          clr.b     4227074
080011A8  8002      
                    2258   ; IIC_Control = 0x80; // core enabled, interupts disabled
080011AA  13FC 0080 2259          move.b    #128,4227076
080011AE  0040 8004 
                    2260   ; //IIC_Control = 0xC0;
                    2261   ; //IIC_Transmit_Receive = 0x00;
                    2262   ; //IIC_Command_Status = 0x00;
                    2263   ; printf("\r\n%x",IIC_Command_Status);
080011B2  1239 0040 2264          move.b    4227080,D1
080011B6  8008      
080011B8  C2BC 0000 2265          and.l     #255,D1
080011BC  00FF      
080011BE  2F01      2266          move.l    D1,-(A7)
080011C0  4879 0800 2267          pea       @m68kus~1_37.L
080011C4  345E      
080011C6  4EB9 0800 2268          jsr       _printf
080011CA  1B82      
080011CC  504F      2269          addq.w    #8,A7
080011CE  4E75      2270          rts
                    2271   ; }
                    2272   ; void PollTIPFlag(void){
                    2273   _PollTIPFlag:
080011D0  4E56 FFFC 2274          link      A6,#-4
                    2275   ; char status;
                    2276   ; status = IIC_Command_Status;
080011D4  1D79 0040 2277          move.b    4227080,-1(A6)
080011D8  8008 FFFF 
                    2278   ; //Check that TIP flag is negated
                    2279   ; while ((status & 0x02) != 0){
                    2280   PollTIPFlag_1:
080011DC  102E FFFF 2281          move.b    -1(A6),D0
080011E0  C03C 0002 2282          and.b     #2,D0
080011E4  6702      2283          beq.s     PollTIPFlag_3
                    2284   ; 1;
080011E6  60F4      2285          bra       PollTIPFlag_1
                    2286   PollTIPFlag_3:
080011E8  4E5E      2287          unlk      A6
080011EA  4E75      2288          rts
                    2289   ; //printf("%x",status);
                    2290   ; //printf("TIP ");
                    2291   ; }
                    2292   ; }
                    2293   ; void IIC_StartCommand(int block_sel){
                    2294   _IIC_StartCommand:
080011EC  4E56 FFFC 2295          link      A6,#-4
080011F0  48E7 3020 2296          movem.l   D2/D3/A2,-(A7)
080011F4  45F9 0800 2297          lea       _printf.L,A2
080011F8  1B82      
                    2298   ; char dog;
                    2299   ; int cat*;
                    2300   ; int slave_addr = 0x00;
080011FA  4283      2301          clr.l     D3
                    2302   ; if (block_sel == 0){
080011FC  202E 0008 2303          move.l    8(A6),D0
08001200  6612      2304          bne.s     IIC_StartCommand_1
                    2305   ; printf("\r\nBlock is set to 0");
08001202  4879 0800 2306          pea       @m68kus~1_38.L
08001206  3464      
08001208  4E92      2307          jsr       (A2)
0800120A  584F      2308          addq.w    #4,A7
                    2309   ; slave_addr = 0xA0;
0800120C  263C 0000 2310          move.l    #160,D3
08001210  00A0      
08001212  601C      2311          bra.s     IIC_StartCommand_3
                    2312   IIC_StartCommand_1:
                    2313   ; }
                    2314   ; else if (block_sel == 1){
08001214  202E 0008 2315          move.l    8(A6),D0
08001218  0C80 0000 2316          cmp.l     #1,D0
0800121C  0001      
0800121E  6610      2317          bne.s     IIC_StartCommand_3
                    2318   ; printf("\r\nBlock is set to 1");
08001220  4879 0800 2319          pea       @m68kus~1_39.L
08001224  3478      
08001226  4E92      2320          jsr       (A2)
08001228  584F      2321          addq.w    #4,A7
                    2322   ; slave_addr = 0xA2;
0800122A  263C 0000 2323          move.l    #162,D3
0800122E  00A2      
                    2324   IIC_StartCommand_3:
                    2325   ; }
                    2326   ; printf("\r\nSending Start Command...");
08001230  4879 0800 2327          pea       @m68kus~1_40.L
08001234  348C      
08001236  4E92      2328          jsr       (A2)
08001238  584F      2329          addq.w    #4,A7
                    2330   ; printf("\r\nControl Register is %x", IIC_Control);
0800123A  1239 0040 2331          move.b    4227076,D1
0800123E  8004      
08001240  C2BC 0000 2332          and.l     #255,D1
08001244  00FF      
08001246  2F01      2333          move.l    D1,-(A7)
08001248  4879 0800 2334          pea       @m68kus~1_41.L
0800124C  34A8      
0800124E  4E92      2335          jsr       (A2)
08001250  504F      2336          addq.w    #8,A7
                    2337   ; //Check that no transmit is in progress
                    2338   ; //IIC_Command_Status = 0x80;
                    2339   ; //PollTIPFlag();
                    2340   ; dog = IIC_Command_Status;
08001252  1439 0040 2341          move.b    4227080,D2
08001256  8008      
                    2342   ; printf("\r\n%x", dog);
08001258  4882      2343          ext.w     D2
0800125A  48C2      2344          ext.l     D2
0800125C  2F02      2345          move.l    D2,-(A7)
0800125E  4879 0800 2346          pea       @m68kus~1_37.L
08001262  345E      
08001264  4E92      2347          jsr       (A2)
08001266  504F      2348          addq.w    #8,A7
                    2349   ; IIC_Transmit_Receive = slave_addr; //Slave Adress and write bit
08001268  13C3 0040 2350          move.b    D3,4227078
0800126C  8006      
                    2351   ; //IIC_Command_Status = 0x10; //Set STA and WR bit
                    2352   ; IIC_Command_Status = 0x90;
0800126E  13FC 0090 2353          move.b    #144,4227080
08001272  0040 8008 
                    2354   ; dog = IIC_Command_Status;
08001276  1439 0040 2355          move.b    4227080,D2
0800127A  8008      
                    2356   ; printf("\r\n%x", dog);
0800127C  4882      2357          ext.w     D2
0800127E  48C2      2358          ext.l     D2
08001280  2F02      2359          move.l    D2,-(A7)
08001282  4879 0800 2360          pea       @m68kus~1_37.L
08001286  345E      
08001288  4E92      2361          jsr       (A2)
0800128A  504F      2362          addq.w    #8,A7
                    2363   ; //Wait for transmit to complete
                    2364   ; PollTIPFlag();
0800128C  4EB9 0800 2365          jsr       _PollTIPFlag
08001290  11D0      
                    2366   ; WaitForAck();
08001292  4EB9 0800 2367          jsr       _WaitForAck
08001296  156E      
                    2368   ; printf("\r\nStart Command Received");
08001298  4879 0800 2369          pea       @m68kus~1_42.L
0800129C  34C2      
0800129E  4E92      2370          jsr       (A2)
080012A0  584F      2371          addq.w    #4,A7
080012A2  4CDF 040C 2372          movem.l   (A7)+,D2/D3/A2
080012A6  4E5E      2373          unlk      A6
080012A8  4E75      2374          rts
                    2375   ; }
                    2376   ; void IIC_RepeatedStartCommand(int block_sel){
                    2377   _IIC_RepeatedStartCommand:
080012AA  4E56 0000 2378          link      A6,#0
080012AE  48E7 2020 2379          movem.l   D2/A2,-(A7)
080012B2  45F9 0800 2380          lea       _printf.L,A2
080012B6  1B82      
                    2381   ; int slave_addr = 0x00;
080012B8  4282      2382          clr.l     D2
                    2383   ; if (block_sel == 0){
080012BA  202E 0008 2384          move.l    8(A6),D0
080012BE  6612      2385          bne.s     IIC_RepeatedStartCommand_1
                    2386   ; printf("\r\nBlock is set to 0");
080012C0  4879 0800 2387          pea       @m68kus~1_38.L
080012C4  3464      
080012C6  4E92      2388          jsr       (A2)
080012C8  584F      2389          addq.w    #4,A7
                    2390   ; slave_addr = 0xA1;
080012CA  243C 0000 2391          move.l    #161,D2
080012CE  00A1      
080012D0  601C      2392          bra.s     IIC_RepeatedStartCommand_3
                    2393   IIC_RepeatedStartCommand_1:
                    2394   ; }
                    2395   ; else if (block_sel == 1){
080012D2  202E 0008 2396          move.l    8(A6),D0
080012D6  0C80 0000 2397          cmp.l     #1,D0
080012DA  0001      
080012DC  6610      2398          bne.s     IIC_RepeatedStartCommand_3
                    2399   ; printf("\r\nBlock is set to 1");
080012DE  4879 0800 2400          pea       @m68kus~1_39.L
080012E2  3478      
080012E4  4E92      2401          jsr       (A2)
080012E6  584F      2402          addq.w    #4,A7
                    2403   ; slave_addr = 0xA3;
080012E8  243C 0000 2404          move.l    #163,D2
080012EC  00A3      
                    2405   IIC_RepeatedStartCommand_3:
                    2406   ; }
                    2407   ; printf("\r\nSending Start Command...");
080012EE  4879 0800 2408          pea       @m68kus~1_40.L
080012F2  348C      
080012F4  4E92      2409          jsr       (A2)
080012F6  584F      2410          addq.w    #4,A7
                    2411   ; printf("\r\nControl Register is %x", IIC_Control);
080012F8  1239 0040 2412          move.b    4227076,D1
080012FC  8004      
080012FE  C2BC 0000 2413          and.l     #255,D1
08001302  00FF      
08001304  2F01      2414          move.l    D1,-(A7)
08001306  4879 0800 2415          pea       @m68kus~1_41.L
0800130A  34A8      
0800130C  4E92      2416          jsr       (A2)
0800130E  504F      2417          addq.w    #8,A7
                    2418   ; //Check that no transmit is in progress
                    2419   ; //IIC_Command_Status = 0x80;
                    2420   ; //PollTIPFlag();
                    2421   ; IIC_Transmit_Receive = slave_addr; //Slave Adress and write bit
08001310  13C2 0040 2422          move.b    D2,4227078
08001314  8006      
                    2423   ; //IIC_Command_Status = 0x10; //Set STA and WR bit
                    2424   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
08001316  1239 0040 2425          move.b    4227078,D1
0800131A  8006      
0800131C  C2BC 0000 2426          and.l     #255,D1
08001320  00FF      
08001322  2F01      2427          move.l    D1,-(A7)
08001324  4879 0800 2428          pea       @m68kus~1_43.L
08001328  34DC      
0800132A  4E92      2429          jsr       (A2)
0800132C  504F      2430          addq.w    #8,A7
                    2431   ; IIC_Command_Status = 0x90; //
0800132E  13FC 0090 2432          move.b    #144,4227080
08001332  0040 8008 
                    2433   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
08001336  1239 0040 2434          move.b    4227078,D1
0800133A  8006      
0800133C  C2BC 0000 2435          and.l     #255,D1
08001340  00FF      
08001342  2F01      2436          move.l    D1,-(A7)
08001344  4879 0800 2437          pea       @m68kus~1_44.L
08001348  34FA      
0800134A  4E92      2438          jsr       (A2)
0800134C  504F      2439          addq.w    #8,A7
                    2440   ; //Wait for transmit to complete
                    2441   ; PollTIPFlag();
0800134E  4EB9 0800 2442          jsr       _PollTIPFlag
08001352  11D0      
                    2443   ; WaitForAck();
08001354  4EB9 0800 2444          jsr       _WaitForAck
08001358  156E      
                    2445   ; printf("\r\nStart Command Received");
0800135A  4879 0800 2446          pea       @m68kus~1_42.L
0800135E  34C2      
08001360  4E92      2447          jsr       (A2)
08001362  584F      2448          addq.w    #4,A7
08001364  4CDF 0404 2449          movem.l   (A7)+,D2/A2
08001368  4E5E      2450          unlk      A6
0800136A  4E75      2451          rts
                    2452   ; }
                    2453   ; void IIC_SendAddress(int address_high, int address_low){
                    2454   _IIC_SendAddress:
0800136C  4E56 0000 2455          link      A6,#0
08001370  2F0A      2456          move.l    A2,-(A7)
08001372  45F9 0800 2457          lea       _printf.L,A2
08001376  1B82      
                    2458   ; printf("\r\nSending address");
08001378  4879 0800 2459          pea       @m68kus~1_45.L
0800137C  3518      
0800137E  4E92      2460          jsr       (A2)
08001380  584F      2461          addq.w    #4,A7
                    2462   ; //IIC_Command_Status = 0x10;
                    2463   ; IIC_Transmit_Receive = address_high; //High byte internal address
08001382  202E 0008 2464          move.l    8(A6),D0
08001386  13C0 0040 2465          move.b    D0,4227078
0800138A  8006      
                    2466   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
0800138C  1239 0040 2467          move.b    4227078,D1
08001390  8006      
08001392  C2BC 0000 2468          and.l     #255,D1
08001396  00FF      
08001398  2F01      2469          move.l    D1,-(A7)
0800139A  4879 0800 2470          pea       @m68kus~1_43.L
0800139E  34DC      
080013A0  4E92      2471          jsr       (A2)
080013A2  504F      2472          addq.w    #8,A7
                    2473   ; IIC_Command_Status = 0x10; //set WR bit
080013A4  13FC 0010 2474          move.b    #16,4227080
080013A8  0040 8008 
                    2475   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
080013AC  1239 0040 2476          move.b    4227078,D1
080013B0  8006      
080013B2  C2BC 0000 2477          and.l     #255,D1
080013B6  00FF      
080013B8  2F01      2478          move.l    D1,-(A7)
080013BA  4879 0800 2479          pea       @m68kus~1_44.L
080013BE  34FA      
080013C0  4E92      2480          jsr       (A2)
080013C2  504F      2481          addq.w    #8,A7
                    2482   ; //Wait for transmit to complete
                    2483   ; PollTIPFlag();
080013C4  4EB9 0800 2484          jsr       _PollTIPFlag
080013C8  11D0      
                    2485   ; WaitForAck();
080013CA  4EB9 0800 2486          jsr       _WaitForAck
080013CE  156E      
                    2487   ; printf("\r\nHigh byte address sent");
080013D0  4879 0800 2488          pea       @m68kus~1_46.L
080013D4  352A      
080013D6  4E92      2489          jsr       (A2)
080013D8  584F      2490          addq.w    #4,A7
                    2491   ; //IIC_Command_Status = 0x10;
                    2492   ; IIC_Transmit_Receive = address_low; //Low byte internal address
080013DA  202E 000C 2493          move.l    12(A6),D0
080013DE  13C0 0040 2494          move.b    D0,4227078
080013E2  8006      
                    2495   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
080013E4  1239 0040 2496          move.b    4227078,D1
080013E8  8006      
080013EA  C2BC 0000 2497          and.l     #255,D1
080013EE  00FF      
080013F0  2F01      2498          move.l    D1,-(A7)
080013F2  4879 0800 2499          pea       @m68kus~1_43.L
080013F6  34DC      
080013F8  4E92      2500          jsr       (A2)
080013FA  504F      2501          addq.w    #8,A7
                    2502   ; IIC_Command_Status = 0x10; //set WR bit
080013FC  13FC 0010 2503          move.b    #16,4227080
08001400  0040 8008 
                    2504   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
08001404  1239 0040 2505          move.b    4227078,D1
08001408  8006      
0800140A  C2BC 0000 2506          and.l     #255,D1
0800140E  00FF      
08001410  2F01      2507          move.l    D1,-(A7)
08001412  4879 0800 2508          pea       @m68kus~1_44.L
08001416  34FA      
08001418  4E92      2509          jsr       (A2)
0800141A  504F      2510          addq.w    #8,A7
                    2511   ; //Wait for transmit to complete
                    2512   ; PollTIPFlag();
0800141C  4EB9 0800 2513          jsr       _PollTIPFlag
08001420  11D0      
                    2514   ; WaitForAck();
08001422  4EB9 0800 2515          jsr       _WaitForAck
08001426  156E      
                    2516   ; printf("\r\nLow byte address sent");
08001428  4879 0800 2517          pea       @m68kus~1_47.L
0800142C  3544      
0800142E  4E92      2518          jsr       (A2)
08001430  584F      2519          addq.w    #4,A7
08001432  245F      2520          move.l    (A7)+,A2
08001434  4E5E      2521          unlk      A6
08001436  4E75      2522          rts
                    2523   ; }
                    2524   ; void IIC_WriteData(int data){
                    2525   _IIC_WriteData:
08001438  4E56 0000 2526          link      A6,#0
0800143C  2F0A      2527          move.l    A2,-(A7)
0800143E  45F9 0800 2528          lea       _printf.L,A2
08001442  1B82      
                    2529   ; //IIC_Command_Status = 0x10;
                    2530   ; IIC_Transmit_Receive = data; //High byte internal address
08001444  202E 0008 2531          move.l    8(A6),D0
08001448  13C0 0040 2532          move.b    D0,4227078
0800144C  8006      
                    2533   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
0800144E  1239 0040 2534          move.b    4227078,D1
08001452  8006      
08001454  C2BC 0000 2535          and.l     #255,D1
08001458  00FF      
0800145A  2F01      2536          move.l    D1,-(A7)
0800145C  4879 0800 2537          pea       @m68kus~1_43.L
08001460  34DC      
08001462  4E92      2538          jsr       (A2)
08001464  504F      2539          addq.w    #8,A7
                    2540   ; IIC_Command_Status = 0x10; //set WR bit
08001466  13FC 0010 2541          move.b    #16,4227080
0800146A  0040 8008 
                    2542   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
0800146E  1239 0040 2543          move.b    4227078,D1
08001472  8006      
08001474  C2BC 0000 2544          and.l     #255,D1
08001478  00FF      
0800147A  2F01      2545          move.l    D1,-(A7)
0800147C  4879 0800 2546          pea       @m68kus~1_44.L
08001480  34FA      
08001482  4E92      2547          jsr       (A2)
08001484  504F      2548          addq.w    #8,A7
                    2549   ; //Wait for transmit to complete
                    2550   ; PollTIPFlag();
08001486  4EB9 0800 2551          jsr       _PollTIPFlag
0800148A  11D0      
                    2552   ; WaitForAck();
0800148C  4EB9 0800 2553          jsr       _WaitForAck
08001490  156E      
                    2554   ; IIC_Command_Status = 0x40; //Set STO bit
08001492  13FC 0040 2555          move.b    #64,4227080
08001496  0040 8008 
                    2556   ; PollTIPFlag();
0800149A  4EB9 0800 2557          jsr       _PollTIPFlag
0800149E  11D0      
                    2558   ; printf("\r\nData Writen");
080014A0  4879 0800 2559          pea       @m68kus~1_48.L
080014A4  355C      
080014A6  4E92      2560          jsr       (A2)
080014A8  584F      2561          addq.w    #4,A7
080014AA  245F      2562          move.l    (A7)+,A2
080014AC  4E5E      2563          unlk      A6
080014AE  4E75      2564          rts
                    2565   ; }
                    2566   ; void IIC_ReadData(void){
                    2567   _IIC_ReadData:
080014B0  48E7 2020 2568          movem.l   D2/A2,-(A7)
080014B4  45F9 0800 2569          lea       _printf.L,A2
080014B8  1B82      
                    2570   ; int recieved;
                    2571   ; printf("\r\nTransmit/receive before: %x", IIC_Transmit_Receive);
080014BA  1239 0040 2572          move.b    4227078,D1
080014BE  8006      
080014C0  C2BC 0000 2573          and.l     #255,D1
080014C4  00FF      
080014C6  2F01      2574          move.l    D1,-(A7)
080014C8  4879 0800 2575          pea       @m68kus~1_43.L
080014CC  34DC      
080014CE  4E92      2576          jsr       (A2)
080014D0  504F      2577          addq.w    #8,A7
                    2578   ; IIC_Command_Status = 0x20; //set WR bit
080014D2  13FC 0020 2579          move.b    #32,4227080
080014D6  0040 8008 
                    2580   ; printf("\r\nTransmit/receive after: %x", IIC_Transmit_Receive);
080014DA  1239 0040 2581          move.b    4227078,D1
080014DE  8006      
080014E0  C2BC 0000 2582          and.l     #255,D1
080014E4  00FF      
080014E6  2F01      2583          move.l    D1,-(A7)
080014E8  4879 0800 2584          pea       @m68kus~1_44.L
080014EC  34FA      
080014EE  4E92      2585          jsr       (A2)
080014F0  504F      2586          addq.w    #8,A7
                    2587   ; PollTIPFlag();
080014F2  4EB9 0800 2588          jsr       _PollTIPFlag
080014F6  11D0      
                    2589   ; while ((IIC_Command_Status & 0x01) != 1){
                    2590   IIC_ReadData_1:
080014F8  1039 0040 2591          move.b    4227080,D0
080014FC  8008      
080014FE  C03C 0001 2592          and.b     #1,D0
08001502  0C00 0001 2593          cmp.b     #1,D0
08001506  6702      2594          beq.s     IIC_ReadData_3
                    2595   ; 1;
08001508  60EE      2596          bra       IIC_ReadData_1
                    2597   IIC_ReadData_3:
                    2598   ; }
                    2599   ; //IIC_Command_Status &= 0xFE;
                    2600   ; recieved = IIC_Transmit_Receive;
0800150A  1039 0040 2601          move.b    4227078,D0
0800150E  8006      
08001510  C0BC 0000 2602          and.l     #255,D0
08001514  00FF      
08001516  2400      2603          move.l    D0,D2
                    2604   ; printf("\r\nDATA READ IS: %02X", recieved);
08001518  2F02      2605          move.l    D2,-(A7)
0800151A  4879 0800 2606          pea       @m68kus~1_49.L
0800151E  356A      
08001520  4E92      2607          jsr       (A2)
08001522  504F      2608          addq.w    #8,A7
                    2609   ; //IIC_Command_Status |= 0x48; //set STO bit, ACK bit
                    2610   ; IIC_Command_Status = 0x48;
08001524  13FC 0048 2611          move.b    #72,4227080
08001528  0040 8008 
                    2612   ; recieved = IIC_Transmit_Receive;
0800152C  1039 0040 2613          move.b    4227078,D0
08001530  8006      
08001532  C0BC 0000 2614          and.l     #255,D0
08001536  00FF      
08001538  2400      2615          move.l    D0,D2
0800153A  4CDF 0404 2616          movem.l   (A7)+,D2/A2
0800153E  4E75      2617          rts
                    2618   ; }
                    2619   ; int CheckAck(void){
                    2620   _CheckAck:
08001540  4E56 FFF8 2621          link      A6,#-8
                    2622   ; int val;
                    2623   ; char test;
                    2624   ; test = IIC_Command_Status;
08001544  1D79 0040 2625          move.b    4227080,-1(A6)
08001548  8008 FFFF 
                    2626   ; val = (test & 0x80);
0800154C  102E FFFF 2627          move.b    -1(A6),D0
08001550  4880      2628          ext.w     D0
08001552  48C0      2629          ext.l     D0
08001554  C0BC 0000 2630          and.l     #128,D0
08001558  0080      
0800155A  2D40 FFFA 2631          move.l    D0,-6(A6)
                    2632   ; if (val == 0){
0800155E  202E FFFA 2633          move.l    -6(A6),D0
08001562  6604      2634          bne.s     CheckAck_1
                    2635   ; return 0;
08001564  4280      2636          clr.l     D0
08001566  6002      2637          bra.s     CheckAck_3
                    2638   CheckAck_1:
                    2639   ; }
                    2640   ; else{
                    2641   ; return 1;
08001568  7001      2642          moveq     #1,D0
                    2643   CheckAck_3:
0800156A  4E5E      2644          unlk      A6
0800156C  4E75      2645          rts
                    2646   ; }
                    2647   ; }
                    2648   ; void WaitForAck(void){
                    2649   _WaitForAck:
                    2650   ; while (CheckAck() == 1){
                    2651   WaitForAck_1:
0800156E  4EB9 0800 2652          jsr       _CheckAck
08001572  1540      
08001574  0C80 0000 2653          cmp.l     #1,D0
08001578  0001      
0800157A  6602      2654          bne.s     WaitForAck_3
                    2655   ; 1;
0800157C  60F0      2656          bra       WaitForAck_1
                    2657   WaitForAck_3:
0800157E  4E75      2658          rts
                    2659   ; }
                    2660   ; }
                    2661   ; void IIC_WriteDataByte(int data, int address){
                    2662   _IIC_WriteDataByte:
08001580  4E56 FFF4 2663          link      A6,#-12
08001584  2F02      2664          move.l    D2,-(A7)
08001586  242E 000C 2665          move.l    12(A6),D2
                    2666   ; int block_sel = (address >> 16) & 0xF;  // extract most significant byte
0800158A  2002      2667          move.l    D2,D0
0800158C  E080      2668          asr.l     #8,D0
0800158E  E080      2669          asr.l     #8,D0
08001590  C0BC 0000 2670          and.l     #15,D0
08001594  000F      
08001596  2D40 FFF4 2671          move.l    D0,-12(A6)
                    2672   ; int address_high = (address >> 8) & 0xFF;  // extract high byte
0800159A  2002      2673          move.l    D2,D0
0800159C  E080      2674          asr.l     #8,D0
0800159E  C0BC 0000 2675          and.l     #255,D0
080015A2  00FF      
080015A4  2D40 FFF8 2676          move.l    D0,-8(A6)
                    2677   ; int address_low = address & 0xFF;  // extract low byte
080015A8  2002      2678          move.l    D2,D0
080015AA  C0BC 0000 2679          and.l     #255,D0
080015AE  00FF      
080015B0  2D40 FFFC 2680          move.l    D0,-4(A6)
                    2681   ; //Send start command
                    2682   ; IIC_StartCommand(block_sel);
080015B4  2F2E FFF4 2683          move.l    -12(A6),-(A7)
080015B8  4EB9 0800 2684          jsr       _IIC_StartCommand
080015BC  11EC      
080015BE  584F      2685          addq.w    #4,A7
                    2686   ; IIC_SendAddress(address_high, address_low);
080015C0  2F2E FFFC 2687          move.l    -4(A6),-(A7)
080015C4  2F2E FFF8 2688          move.l    -8(A6),-(A7)
080015C8  4EB9 0800 2689          jsr       _IIC_SendAddress
080015CC  136C      
080015CE  504F      2690          addq.w    #8,A7
                    2691   ; IIC_WriteData(data);
080015D0  2F2E 0008 2692          move.l    8(A6),-(A7)
080015D4  4EB9 0800 2693          jsr       _IIC_WriteData
080015D8  1438      
080015DA  584F      2694          addq.w    #4,A7
080015DC  241F      2695          move.l    (A7)+,D2
080015DE  4E5E      2696          unlk      A6
080015E0  4E75      2697          rts
                    2698   ; }
                    2699   ; void IIC_ReadDataByte(int address){
                    2700   _IIC_ReadDataByte:
080015E2  4E56 FFF8 2701          link      A6,#-8
080015E6  48E7 3000 2702          movem.l   D2/D3,-(A7)
080015EA  242E 0008 2703          move.l    8(A6),D2
                    2704   ; int block_sel = (address >> 16) & 0xF;  // extract most significant byte
080015EE  2002      2705          move.l    D2,D0
080015F0  E080      2706          asr.l     #8,D0
080015F2  E080      2707          asr.l     #8,D0
080015F4  C0BC 0000 2708          and.l     #15,D0
080015F8  000F      
080015FA  2600      2709          move.l    D0,D3
                    2710   ; int address_high = (address >> 8) & 0xFF;  // extract high byte
080015FC  2002      2711          move.l    D2,D0
080015FE  E080      2712          asr.l     #8,D0
08001600  C0BC 0000 2713          and.l     #255,D0
08001604  00FF      
08001606  2D40 FFF8 2714          move.l    D0,-8(A6)
                    2715   ; int address_low = address & 0xFF;  // extract low byte
0800160A  2002      2716          move.l    D2,D0
0800160C  C0BC 0000 2717          and.l     #255,D0
08001610  00FF      
08001612  2D40 FFFC 2718          move.l    D0,-4(A6)
                    2719   ; //Send start command
                    2720   ; IIC_StartCommand(block_sel);
08001616  2F03      2721          move.l    D3,-(A7)
08001618  4EB9 0800 2722          jsr       _IIC_StartCommand
0800161C  11EC      
0800161E  584F      2723          addq.w    #4,A7
                    2724   ; IIC_SendAddress(address_high, address_low);
08001620  2F2E FFFC 2725          move.l    -4(A6),-(A7)
08001624  2F2E FFF8 2726          move.l    -8(A6),-(A7)
08001628  4EB9 0800 2727          jsr       _IIC_SendAddress
0800162C  136C      
0800162E  504F      2728          addq.w    #8,A7
                    2729   ; IIC_RepeatedStartCommand(block_sel);
08001630  2F03      2730          move.l    D3,-(A7)
08001632  4EB9 0800 2731          jsr       _IIC_RepeatedStartCommand
08001636  12AA      
08001638  584F      2732          addq.w    #4,A7
                    2733   ; IIC_ReadData();
0800163A  4EB9 0800 2734          jsr       _IIC_ReadData
0800163E  14B0      
08001640  4CDF 000C 2735          movem.l   (A7)+,D2/D3
08001644  4E5E      2736          unlk      A6
08001646  4E75      2737          rts
                    2738   ; }
                    2739   ; void IIC_WriteDataBlock(int address, int blocksize, int blockstart){
                    2740   _IIC_WriteDataBlock:
08001648  4E56 0000 2741          link      A6,#0
0800164C  48E7 3C20 2742          movem.l   D2/D3/D4/D5/A2,-(A7)
08001650  45F9 0800 2743          lea       _printf.L,A2
08001654  1B82      
08001656  282E 0008 2744          move.l    8(A6),D4
                    2745   ; int block_sel = (address >> 16) & 0xF;  // extract most significant byte
0800165A  2004      2746          move.l    D4,D0
0800165C  E080      2747          asr.l     #8,D0
0800165E  E080      2748          asr.l     #8,D0
08001660  C0BC 0000 2749          and.l     #15,D0
08001664  000F      
08001666  2A00      2750          move.l    D0,D5
                    2751   ; int address_high = (address >> 8) & 0xFF;  // extract high byte
08001668  2004      2752          move.l    D4,D0
0800166A  E080      2753          asr.l     #8,D0
0800166C  C0BC 0000 2754          and.l     #255,D0
08001670  00FF      
08001672  2600      2755          move.l    D0,D3
                    2756   ; int address_low = address & 0xFF;  // extract low byte
08001674  2004      2757          move.l    D4,D0
08001676  C0BC 0000 2758          and.l     #255,D0
0800167A  00FF      
0800167C  2400      2759          move.l    D0,D2
                    2760   ; // print the results
                    2761   ; printf("\r\nBlock Sel: %X", block_sel);
0800167E  2F05      2762          move.l    D5,-(A7)
08001680  4879 0800 2763          pea       @m68kus~1_50.L
08001684  3580      
08001686  4E92      2764          jsr       (A2)
08001688  504F      2765          addq.w    #8,A7
                    2766   ; printf("\r\nAddress High: %X", address_high);
0800168A  2F03      2767          move.l    D3,-(A7)
0800168C  4879 0800 2768          pea       @m68kus~1_51.L
08001690  3590      
08001692  4E92      2769          jsr       (A2)
08001694  504F      2770          addq.w    #8,A7
                    2771   ; printf("\r\nAddress Low: %X", address_low);
08001696  2F02      2772          move.l    D2,-(A7)
08001698  4879 0800 2773          pea       @m68kus~1_52.L
0800169C  35A4      
0800169E  4E92      2774          jsr       (A2)
080016A0  504F      2775          addq.w    #8,A7
                    2776   ; //Send start command
                    2777   ; IIC_StartCommand(block_sel);
080016A2  2F05      2778          move.l    D5,-(A7)
080016A4  4EB9 0800 2779          jsr       _IIC_StartCommand
080016A8  11EC      
080016AA  584F      2780          addq.w    #4,A7
                    2781   ; IIC_SendAddress(address_high, address_low);
080016AC  2F02      2782          move.l    D2,-(A7)
080016AE  2F03      2783          move.l    D3,-(A7)
080016B0  4EB9 0800 2784          jsr       _IIC_SendAddress
080016B4  136C      
080016B6  504F      2785          addq.w    #8,A7
080016B8  4CDF 043C 2786          movem.l   (A7)+,D2/D3/D4/D5/A2
080016BC  4E5E      2787          unlk      A6
080016BE  4E75      2788          rts
                    2789   ; }
                    2790   ; /******************************************************************************************************************************
                    2791   ; * Start of user program
                    2792   ; ******************************************************************************************************************************/
                    2793   ; void main()
                    2794   ; {
                    2795   _main:
080016C0  4E56 FF2C 2796          link      A6,#-212
080016C4  48E7 3038 2797          movem.l   D2/D3/A2/A3/A4,-(A7)
080016C8  45F9 0800 2798          lea       _printf.L,A2
080016CC  1B82      
080016CE  47F9 0800 2799          lea       _scanf.L,A3
080016D2  1B50      
080016D4  49F9 0800 2800          lea       _InstallExceptionHandler.L,A4
080016D8  0220      
                    2801   ; unsigned int row, i=0, count=0, counter1=1;
080016DA  42AE FF32 2802          clr.l     -206(A6)
080016DE  42AE FF36 2803          clr.l     -202(A6)
080016E2  2D7C 0000 2804          move.l    #1,-198(A6)
080016E6  0001 FF3A 
                    2805   ; char c, text[150] ;
                    2806   ; int PassFailFlag = 1 ;
080016EA  2D7C 0000 2807          move.l    #1,-42(A6)
080016EE  0001 FFD6 
                    2808   ; //IIC variables
                    2809   ; char choice = '0';
080016F2  1D7C 0030 2810          move.b    #48,-37(A6)
080016F6  FFDB      
                    2811   ; int WriteData;
                    2812   ; int WriteAddress;
                    2813   ; int ReadAddress;
                    2814   ; int WriteBlockAddress;
                    2815   ; int WriteBlockSize;
                    2816   ; int WriteBlockMaxSize;
                    2817   ; int WriteBlockDataStart;
                    2818   ; int ReadBlockAddress;
                    2819   ; int ReadBlockMaxSize;
                    2820   ; int ReadBlockSize;
                    2821   ; int num;
                    2822   ; /////Mem Test Variables
                    2823   ; // unsigned int *RamPtr;
                    2824   ; // unsigned int Start, End ;
                    2825   ; // unsigned int data_byte1, data_byte2, data_byte3, data_byte4; //Test data recieved from user (bytes)
                    2826   ; // unsigned int data_word1, data_word2, data_word3, data_word4;
                    2827   ; // unsigned int data_Lword1, data_Lword2, data_Lword3, data_Lword4;
                    2828   ; // char type;
                    2829   ; // int testnum = 1;
                    2830   ; /////Mem Test Variables
                    2831   ; i = x = y = z = PortA_Count =0;
080016F8  42B9 0800 2832          clr.l     _PortA_Count.L
080016FC  398A      
080016FE  42B9 0800 2833          clr.l     _z.L
08001702  3986      
08001704  42B9 0800 2834          clr.l     _y.L
08001708  3982      
0800170A  42B9 0800 2835          clr.l     _x.L
0800170E  397E      
08001710  42AE FF32 2836          clr.l     -206(A6)
                    2837   ; Timer1Count = Timer2Count = Timer3Count = Timer4Count = 0;
08001714  4239 0800 2838          clr.b     _Timer4Count.L
08001718  3994      
0800171A  4239 0800 2839          clr.b     _Timer3Count.L
0800171E  3992      
08001720  4239 0800 2840          clr.b     _Timer2Count.L
08001724  3990      
08001726  4239 0800 2841          clr.b     _Timer1Count.L
0800172A  398E      
                    2842   ; InstallExceptionHandler(PIA_ISR, 25) ;          // install interrupt handler for PIAs 1 and 2 on level 1 IRQ
0800172C  4878 0019 2843          pea       25
08001730  4879 0800 2844          pea       _PIA_ISR.L
08001734  0092      
08001736  4E94      2845          jsr       (A4)
08001738  504F      2846          addq.w    #8,A7
                    2847   ; InstallExceptionHandler(ACIA_ISR, 26) ;		    // install interrupt handler for ACIA on level 2 IRQ
0800173A  4878 001A 2848          pea       26
0800173E  4879 0800 2849          pea       _ACIA_ISR.L
08001742  0090      
08001744  4E94      2850          jsr       (A4)
08001746  504F      2851          addq.w    #8,A7
                    2852   ; InstallExceptionHandler(Timer_ISR, 27) ;		// install interrupt handler for Timers 1-4 on level 3 IRQ
08001748  4878 001B 2853          pea       27
0800174C  4879 0800 2854          pea       _Timer_ISR.L
08001750  003E      
08001752  4E94      2855          jsr       (A4)
08001754  504F      2856          addq.w    #8,A7
                    2857   ; InstallExceptionHandler(Key2PressISR, 28) ;	    // install interrupt handler for Key Press 2 on DE1 board for level 4 IRQ
08001756  4878 001C 2858          pea       28
0800175A  4879 0800 2859          pea       _Key2PressISR.L
0800175E  0094      
08001760  4E94      2860          jsr       (A4)
08001762  504F      2861          addq.w    #8,A7
                    2862   ; InstallExceptionHandler(Key1PressISR, 29) ;	    // install interrupt handler for Key Press 1 on DE1 board for level 5 IRQ
08001764  4878 001D 2863          pea       29
08001768  4879 0800 2864          pea       _Key1PressISR.L
0800176C  0096      
0800176E  4E94      2865          jsr       (A4)
08001770  504F      2866          addq.w    #8,A7
                    2867   ; Timer1Data = 0x10;		// program time delay into timers 1-4
08001772  13FC 0010 2868          move.b    #16,4194352
08001776  0040 0030 
                    2869   ; Timer2Data = 0x20;
0800177A  13FC 0020 2870          move.b    #32,4194356
0800177E  0040 0034 
                    2871   ; Timer3Data = 0x15;
08001782  13FC 0015 2872          move.b    #21,4194360
08001786  0040 0038 
                    2873   ; Timer4Data = 0x25;
0800178A  13FC 0025 2874          move.b    #37,4194364
0800178E  0040 003C 
                    2875   ; Timer1Control = 3;		// write 3 to control register to Bit0 = 1 (enable interrupt from timers) 1 - 4 and allow them to count Bit 1 = 1
08001792  13FC 0003 2876          move.b    #3,4194354
08001796  0040 0032 
                    2877   ; Timer2Control = 3;
0800179A  13FC 0003 2878          move.b    #3,4194358
0800179E  0040 0036 
                    2879   ; Timer3Control = 3;
080017A2  13FC 0003 2880          move.b    #3,4194362
080017A6  0040 003A 
                    2881   ; Timer4Control = 3;
080017AA  13FC 0003 2882          move.b    #3,4194366
080017AE  0040 003E 
                    2883   ; Init_LCD();             // initialise the LCD display to use a parallel data interface and 2 lines of display
080017B2  4EB9 0800 2884          jsr       _Init_LCD
080017B6  00C6      
                    2885   ; Init_RS232() ;          // initialise the RS232 port for use with hyper terminal
080017B8  4EB9 0800 2886          jsr       _Init_RS232
080017BC  00E4      
                    2887   ; /*************************************************************************************************
                    2888   ; **  User Program
                    2889   ; *************************************************************************************************/
                    2890   ; printf("\r\nIIC program will begin");
080017BE  4879 0800 2891          pea       @m68kus~1_53.L
080017C2  35B6      
080017C4  4E92      2892          jsr       (A2)
080017C6  584F      2893          addq.w    #4,A7
                    2894   ; printf("\r\nEnter 0 ... Write Single Byte\r\nEnter 1 ... Read Single Byte\r\nEnter 2 ... Write Data Block\r\nEnter 3 ... Read Data Block\r\n");
080017C8  4879 0800 2895          pea       @m68kus~1_54.L
080017CC  35D0      
080017CE  4E92      2896          jsr       (A2)
080017D0  584F      2897          addq.w    #4,A7
                    2898   ; scanf("%c", &choice);
080017D2  486E FFDB 2899          pea       -37(A6)
080017D6  4879 0800 2900          pea       @m68kus~1_55.L
080017DA  364C      
080017DC  4E93      2901          jsr       (A3)
080017DE  504F      2902          addq.w    #8,A7
                    2903   ; IIC_Init();
080017E0  4EB9 0800 2904          jsr       _IIC_Init
080017E4  119C      
                    2905   ; if(choice == '0'){
080017E6  102E FFDB 2906          move.b    -37(A6),D0
080017EA  0C00 0030 2907          cmp.b     #48,D0
080017EE  6600 0098 2908          bne       main_1
                    2909   ; printf("Single Byte Write Initiated\r\nEnter Data Byte: ");
080017F2  4879 0800 2910          pea       @m68kus~1_56.L
080017F6  3650      
080017F8  4E92      2911          jsr       (A2)
080017FA  584F      2912          addq.w    #4,A7
                    2913   ; scanf("%x", &WriteData);
080017FC  486E FFDC 2914          pea       -36(A6)
08001800  4879 0800 2915          pea       @m68kus~1_3.L
08001804  2F1E      
08001806  4E93      2916          jsr       (A3)
08001808  504F      2917          addq.w    #8,A7
                    2918   ; while (WriteData > 0xFF){
                    2919   main_3:
0800180A  202E FFDC 2920          move.l    -36(A6),D0
0800180E  0C80 0000 2921          cmp.l     #255,D0
08001812  00FF      
08001814  6F1A      2922          ble.s     main_5
                    2923   ; printf("Enter Valid Data Byte: ");
08001816  4879 0800 2924          pea       @m68kus~1_57.L
0800181A  3680      
0800181C  4E92      2925          jsr       (A2)
0800181E  584F      2926          addq.w    #4,A7
                    2927   ; scanf("%x", &WriteData);
08001820  486E FFDC 2928          pea       -36(A6)
08001824  4879 0800 2929          pea       @m68kus~1_3.L
08001828  2F1E      
0800182A  4E93      2930          jsr       (A3)
0800182C  504F      2931          addq.w    #8,A7
0800182E  60DA      2932          bra       main_3
                    2933   main_5:
                    2934   ; }
                    2935   ; printf("Enter Address (00000 - 1FFFF): ");
08001830  4879 0800 2936          pea       @m68kus~1_58.L
08001834  3698      
08001836  4E92      2937          jsr       (A2)
08001838  584F      2938          addq.w    #4,A7
                    2939   ; scanf("%x", &WriteAddress);
0800183A  486E FFE0 2940          pea       -32(A6)
0800183E  4879 0800 2941          pea       @m68kus~1_3.L
08001842  2F1E      
08001844  4E93      2942          jsr       (A3)
08001846  504F      2943          addq.w    #8,A7
                    2944   ; while (WriteAddress > 0x1FFFF){
                    2945   main_6:
08001848  202E FFE0 2946          move.l    -32(A6),D0
0800184C  0C80 0001 2947          cmp.l     #131071,D0
08001850  FFFF      
08001852  6F1A      2948          ble.s     main_8
                    2949   ; printf("Enter Valid Address: ");
08001854  4879 0800 2950          pea       @m68kus~1_59.L
08001858  36B8      
0800185A  4E92      2951          jsr       (A2)
0800185C  584F      2952          addq.w    #4,A7
                    2953   ; scanf("%x", WriteAddress);
0800185E  2F2E FFE0 2954          move.l    -32(A6),-(A7)
08001862  4879 0800 2955          pea       @m68kus~1_3.L
08001866  2F1E      
08001868  4E93      2956          jsr       (A3)
0800186A  504F      2957          addq.w    #8,A7
0800186C  60DA      2958          bra       main_6
                    2959   main_8:
                    2960   ; }
                    2961   ; printf("\r\nWriting Data Byte ...");
0800186E  4879 0800 2962          pea       @m68kus~1_60.L
08001872  36CE      
08001874  4E92      2963          jsr       (A2)
08001876  584F      2964          addq.w    #4,A7
                    2965   ; IIC_WriteDataByte(WriteData, WriteAddress);
08001878  2F2E FFE0 2966          move.l    -32(A6),-(A7)
0800187C  2F2E FFDC 2967          move.l    -36(A6),-(A7)
08001880  4EB9 0800 2968          jsr       _IIC_WriteDataByte
08001884  1580      
08001886  504F      2969          addq.w    #8,A7
                    2970   main_1:
                    2971   ; }
                    2972   ; if(choice == '1'){
08001888  102E FFDB 2973          move.b    -37(A6),D0
0800188C  0C00 0031 2974          cmp.b     #49,D0
08001890  6600 0056 2975          bne       main_9
                    2976   ; printf("\r\nSingle Byte Read Initiated\r\nEnter Address (00000 - 1FFFF): ");
08001894  4879 0800 2977          pea       @m68kus~1_61.L
08001898  36E6      
0800189A  4E92      2978          jsr       (A2)
0800189C  584F      2979          addq.w    #4,A7
                    2980   ; scanf("%x", &ReadAddress);
0800189E  486E FFE4 2981          pea       -28(A6)
080018A2  4879 0800 2982          pea       @m68kus~1_3.L
080018A6  2F1E      
080018A8  4E93      2983          jsr       (A3)
080018AA  504F      2984          addq.w    #8,A7
                    2985   ; while (ReadAddress > 0x1FFFF){
                    2986   main_11:
080018AC  202E FFE4 2987          move.l    -28(A6),D0
080018B0  0C80 0001 2988          cmp.l     #131071,D0
080018B4  FFFF      
080018B6  6F1A      2989          ble.s     main_13
                    2990   ; printf("Enter Valid Address: ");
080018B8  4879 0800 2991          pea       @m68kus~1_59.L
080018BC  36B8      
080018BE  4E92      2992          jsr       (A2)
080018C0  584F      2993          addq.w    #4,A7
                    2994   ; scanf("%x", &ReadAddress);
080018C2  486E FFE4 2995          pea       -28(A6)
080018C6  4879 0800 2996          pea       @m68kus~1_3.L
080018CA  2F1E      
080018CC  4E93      2997          jsr       (A3)
080018CE  504F      2998          addq.w    #8,A7
080018D0  60DA      2999          bra       main_11
                    3000   main_13:
                    3001   ; }
                    3002   ; printf("\r\nReading Data Byte ...");
080018D2  4879 0800 3003          pea       @m68kus~1_62.L
080018D6  3724      
080018D8  4E92      3004          jsr       (A2)
080018DA  584F      3005          addq.w    #4,A7
                    3006   ; IIC_ReadDataByte(ReadAddress);
080018DC  2F2E FFE4 3007          move.l    -28(A6),-(A7)
080018E0  4EB9 0800 3008          jsr       _IIC_ReadDataByte
080018E4  15E2      
080018E6  584F      3009          addq.w    #4,A7
                    3010   main_9:
                    3011   ; }
                    3012   ; if (choice == '2'){
080018E8  102E FFDB 3013          move.b    -37(A6),D0
080018EC  0C00 0032 3014          cmp.b     #50,D0
080018F0  6600 00DC 3015          bne       main_14
                    3016   ; printf("\r\nData Block Write Initiated\r\nEnter Starting Address (00000 - 1FFFF): ");
080018F4  4879 0800 3017          pea       @m68kus~1_63.L
080018F8  373C      
080018FA  4E92      3018          jsr       (A2)
080018FC  584F      3019          addq.w    #4,A7
                    3020   ; scanf("%x", &WriteBlockAddress);
080018FE  486E FFE8 3021          pea       -24(A6)
08001902  4879 0800 3022          pea       @m68kus~1_3.L
08001906  2F1E      
08001908  4E93      3023          jsr       (A3)
0800190A  504F      3024          addq.w    #8,A7
                    3025   ; while (WriteBlockAddress > 0x1FFFF){
                    3026   main_16:
0800190C  202E FFE8 3027          move.l    -24(A6),D0
08001910  0C80 0001 3028          cmp.l     #131071,D0
08001914  FFFF      
08001916  6F1A      3029          ble.s     main_18
                    3030   ; printf("Enter Valid Address: ");
08001918  4879 0800 3031          pea       @m68kus~1_59.L
0800191C  36B8      
0800191E  4E92      3032          jsr       (A2)
08001920  584F      3033          addq.w    #4,A7
                    3034   ; scanf("%x", &WriteBlockAddress);
08001922  486E FFE8 3035          pea       -24(A6)
08001926  4879 0800 3036          pea       @m68kus~1_3.L
0800192A  2F1E      
0800192C  4E93      3037          jsr       (A3)
0800192E  504F      3038          addq.w    #8,A7
08001930  60DA      3039          bra       main_16
                    3040   main_18:
                    3041   ; }
                    3042   ; WriteBlockMaxSize = (0x1FFFF - WriteBlockAddress);
08001932  203C 0001 3043          move.l    #131071,D0
08001936  FFFF      
08001938  90AE FFE8 3044          sub.l     -24(A6),D0
0800193C  2600      3045          move.l    D0,D3
                    3046   ; printf("Enter Data Block Size (00000 - %05X): ", WriteBlockMaxSize);
0800193E  2F03      3047          move.l    D3,-(A7)
08001940  4879 0800 3048          pea       @m68kus~1_64.L
08001944  3784      
08001946  4E92      3049          jsr       (A2)
08001948  504F      3050          addq.w    #8,A7
                    3051   ; scanf("%x", &WriteBlockSize);
0800194A  486E FFEC 3052          pea       -20(A6)
0800194E  4879 0800 3053          pea       @m68kus~1_3.L
08001952  2F1E      
08001954  4E93      3054          jsr       (A3)
08001956  504F      3055          addq.w    #8,A7
                    3056   ; while (WriteBlockSize > WriteBlockMaxSize){
                    3057   main_19:
08001958  B6AE FFEC 3058          cmp.l     -20(A6),D3
0800195C  6C1C      3059          bge.s     main_21
                    3060   ; printf("Enter Valid Block Size (00000 - %05X): ", WriteBlockMaxSize);
0800195E  2F03      3061          move.l    D3,-(A7)
08001960  4879 0800 3062          pea       @m68kus~1_65.L
08001964  37AC      
08001966  4E92      3063          jsr       (A2)
08001968  504F      3064          addq.w    #8,A7
                    3065   ; scanf("%x", &WriteBlockSize);
0800196A  486E FFEC 3066          pea       -20(A6)
0800196E  4879 0800 3067          pea       @m68kus~1_3.L
08001972  2F1E      
08001974  4E93      3068          jsr       (A3)
08001976  504F      3069          addq.w    #8,A7
08001978  60DE      3070          bra       main_19
                    3071   main_21:
                    3072   ; }
                    3073   ; printf("Enter Starting Data Byte: ");
0800197A  4879 0800 3074          pea       @m68kus~1_66.L
0800197E  37D4      
08001980  4E92      3075          jsr       (A2)
08001982  584F      3076          addq.w    #4,A7
                    3077   ; scanf("%x", &WriteBlockDataStart);
08001984  486E FFF0 3078          pea       -16(A6)
08001988  4879 0800 3079          pea       @m68kus~1_3.L
0800198C  2F1E      
0800198E  4E93      3080          jsr       (A3)
08001990  504F      3081          addq.w    #8,A7
                    3082   ; while (WriteBlockDataStart > 0xFF){
                    3083   main_22:
08001992  202E FFF0 3084          move.l    -16(A6),D0
08001996  0C80 0000 3085          cmp.l     #255,D0
0800199A  00FF      
0800199C  6F1A      3086          ble.s     main_24
                    3087   ; printf("Enter Valid Data Byte: ");
0800199E  4879 0800 3088          pea       @m68kus~1_57.L
080019A2  3680      
080019A4  4E92      3089          jsr       (A2)
080019A6  584F      3090          addq.w    #4,A7
                    3091   ; scanf("%x", &WriteBlockDataStart);
080019A8  486E FFF0 3092          pea       -16(A6)
080019AC  4879 0800 3093          pea       @m68kus~1_3.L
080019B0  2F1E      
080019B2  4E93      3094          jsr       (A3)
080019B4  504F      3095          addq.w    #8,A7
080019B6  60DA      3096          bra       main_22
                    3097   main_24:
                    3098   ; }
                    3099   ; IIC_WriteDataBlock(WriteBlockAddress, WriteBlockSize, WriteBlockDataStart);
080019B8  2F2E FFF0 3100          move.l    -16(A6),-(A7)
080019BC  2F2E FFEC 3101          move.l    -20(A6),-(A7)
080019C0  2F2E FFE8 3102          move.l    -24(A6),-(A7)
080019C4  4EB9 0800 3103          jsr       _IIC_WriteDataBlock
080019C8  1648      
080019CA  DEFC 000C 3104          add.w     #12,A7
                    3105   main_14:
                    3106   ; }
                    3107   ; if (choice == '3'){
080019CE  102E FFDB 3108          move.b    -37(A6),D0
080019D2  0C00 0033 3109          cmp.b     #51,D0
080019D6  6600 0088 3110          bne       main_32
                    3111   ; printf("\r\nData Block Read Initiated\r\nEnter Starting Address (00000 - 1FFFF): ");
080019DA  4879 0800 3112          pea       @m68kus~1_67.L
080019DE  37F0      
080019E0  4E92      3113          jsr       (A2)
080019E2  584F      3114          addq.w    #4,A7
                    3115   ; scanf("%x", &ReadBlockAddress);
080019E4  486E FFF4 3116          pea       -12(A6)
080019E8  4879 0800 3117          pea       @m68kus~1_3.L
080019EC  2F1E      
080019EE  4E93      3118          jsr       (A3)
080019F0  504F      3119          addq.w    #8,A7
                    3120   ; while (ReadBlockAddress > 0x1FFFF){
                    3121   main_27:
080019F2  202E FFF4 3122          move.l    -12(A6),D0
080019F6  0C80 0001 3123          cmp.l     #131071,D0
080019FA  FFFF      
080019FC  6F1A      3124          ble.s     main_29
                    3125   ; printf("Enter Valid Address");
080019FE  4879 0800 3126          pea       @m68kus~1_68.L
08001A02  3836      
08001A04  4E92      3127          jsr       (A2)
08001A06  584F      3128          addq.w    #4,A7
                    3129   ; scanf("%x", &ReadBlockAddress);
08001A08  486E FFF4 3130          pea       -12(A6)
08001A0C  4879 0800 3131          pea       @m68kus~1_3.L
08001A10  2F1E      
08001A12  4E93      3132          jsr       (A3)
08001A14  504F      3133          addq.w    #8,A7
08001A16  60DA      3134          bra       main_27
                    3135   main_29:
                    3136   ; }
                    3137   ; ReadBlockMaxSize = (0x1FFFF - ReadBlockAddress);
08001A18  203C 0001 3138          move.l    #131071,D0
08001A1C  FFFF      
08001A1E  90AE FFF4 3139          sub.l     -12(A6),D0
08001A22  2400      3140          move.l    D0,D2
                    3141   ; printf("Enter Data Block Size (00000 - %05X): ", ReadBlockMaxSize);
08001A24  2F02      3142          move.l    D2,-(A7)
08001A26  4879 0800 3143          pea       @m68kus~1_64.L
08001A2A  3784      
08001A2C  4E92      3144          jsr       (A2)
08001A2E  504F      3145          addq.w    #8,A7
                    3146   ; scanf("%x", &ReadBlockSize);
08001A30  486E FFF8 3147          pea       -8(A6)
08001A34  4879 0800 3148          pea       @m68kus~1_3.L
08001A38  2F1E      
08001A3A  4E93      3149          jsr       (A3)
08001A3C  504F      3150          addq.w    #8,A7
                    3151   ; while (ReadBlockSize > ReadBlockMaxSize){
                    3152   main_30:
08001A3E  B4AE FFF8 3153          cmp.l     -8(A6),D2
08001A42  6C1C      3154          bge.s     main_32
                    3155   ; printf("Enter Valid Block Size (00000 - %05X): ", ReadBlockMaxSize);
08001A44  2F02      3156          move.l    D2,-(A7)
08001A46  4879 0800 3157          pea       @m68kus~1_65.L
08001A4A  37AC      
08001A4C  4E92      3158          jsr       (A2)
08001A4E  504F      3159          addq.w    #8,A7
                    3160   ; scanf("%x", &ReadBlockSize);
08001A50  486E FFF8 3161          pea       -8(A6)
08001A54  4879 0800 3162          pea       @m68kus~1_3.L
08001A58  2F1E      
08001A5A  4E93      3163          jsr       (A3)
08001A5C  504F      3164          addq.w    #8,A7
08001A5E  60DE      3165          bra       main_30
                    3166   main_32:
                    3167   ; }
                    3168   ; }
                    3169   ; printf("\r\nProgram ended");
08001A60  4879 0800 3170          pea       @m68kus~1_69.L
08001A64  384A      
08001A66  4E92      3171          jsr       (A2)
08001A68  584F      3172          addq.w    #4,A7
08001A6A  4CDF 1C0C 3173          movem.l   (A7)+,D2/D3/A2/A3/A4
08001A6E  4E5E      3174          unlk      A6
08001A70  4E75      3175          rts
                    3176   ; }
                    3177   ULDIV:
08001A72  4E56 0000 3178          link    A6,#0
08001A76  48E7 C000 3179          movem.l D0/D1,-(A7)
08001A7A  222E 0008 3180          move.l  8(A6),D1
08001A7E  202E 000C 3181          move.l  12(A6),D0
08001A82  6036      3182          bra.s   ldiv_3
                    3183   LDIV:
08001A84  4E56 0000 3184          link    A6,#0
08001A88  48E7 C000 3185          movem.l D0/D1,-(A7)
08001A8C  222E 0008 3186          move.l  8(A6),D1
08001A90  202E 000C 3187          move.l  12(A6),D0
08001A94  4A80      3188          tst.l   D0
08001A96  6A0E      3189          bpl.s   ldiv_1
08001A98  4480      3190          neg.l   D0
08001A9A  4A81      3191          tst.l   D1
08001A9C  6A14      3192          bpl.s   ldiv_2
08001A9E  4481      3193          neg.l   D1
08001AA0  612A      3194          bsr.s   dodiv
08001AA2  4481      3195          neg.l   D1
08001AA4  6016      3196          bra.s   ldiv_4
                    3197   ldiv_1:
08001AA6  4A81      3198          tst.l   D1
08001AA8  6A10      3199          bpl.s   ldiv_3
08001AAA  4481      3200          neg.l   D1
08001AAC  611E      3201          bsr.s   dodiv
08001AAE  4480      3202          neg.l   D0
08001AB0  600A      3203          bra.s   ldiv_4
                    3204   ldiv_2:
08001AB2  6118      3205          bsr.s   dodiv
08001AB4  4480      3206          neg.l   D0
08001AB6  4481      3207          neg.l   D1
08001AB8  6002      3208          bra.s   ldiv_4
                    3209   ldiv_3:
08001ABA  6110      3210          bsr.s   dodiv
                    3211   ldiv_4:
08001ABC  2D40 0008 3212          move.l  D0,8(A6)
08001AC0  2D41 000C 3213          move.l  D1,12(A6)
08001AC4  4CDF 0003 3214          movem.l (A7)+,D0/D1
08001AC8  4E5E      3215          unlk    A6
08001ACA  4E75      3216          rts
                    3217   dodiv:
08001ACC  0C81 0000 3218          cmpi.l  #$FFFF,D1
08001AD0  FFFF      
08001AD2  6236      3219          bhi.s   dodiv_2
08001AD4  0C80 0000 3220          cmpi.l  #$FFFF,D0
08001AD8  FFFF      
08001ADA  6210      3221          bhi.s   dodiv_1
08001ADC  80C1      3222          divu    D1,D0
08001ADE  2200      3223          move.l  D0,D1
08001AE0  4241      3224          clr.w   D1
08001AE2  4841      3225          swap    D1
08001AE4  0280 0000 3226          andi.l  #$FFFF,D0
08001AE8  FFFF      
08001AEA  4E75      3227          rts
                    3228   dodiv_1:
08001AEC  48A7 A000 3229          movem.w D0/D2,-(A7)
08001AF0  4240      3230          clr.w   D0
08001AF2  4840      3231          swap    D0
08001AF4  80C1      3232          divu    D1,D0
08001AF6  3400      3233          move.w  D0,D2
08001AF8  301F      3234          move.w  (A7)+,D0
08001AFA  80C1      3235          divu    D1,D0
08001AFC  4840      3236          swap    D0
08001AFE  4281      3237          clr.l   D1
08001B00  3200      3238          move.w  D0,D1
08001B02  3002      3239          move.w  D2,D0
08001B04  4840      3240          swap    D0
08001B06  341F      3241          move.w  (A7)+,D2
08001B08  4E75      3242          rts
                    3243   dodiv_2:
08001B0A  48E7 3800 3244          movem.l D2/D3/D4,-(A7)
08001B0E  2401      3245          move.l  D1,D2
08001B10  4242      3246          clr.w   D2
08001B12  4842      3247          swap    D2
08001B14  5282      3248          addq.l  #1,D2
08001B16  2600      3249          move.l  D0,D3
08001B18  2801      3250          move.l  D1,D4
08001B1A  2202      3251          move.l  D2,D1
08001B1C  61CE      3252          bsr.s   dodiv_1
08001B1E  2204      3253          move.l  D4,D1
08001B20  82C2      3254          divu    D2,D1
08001B22  80C1      3255          divu    D1,D0
08001B24  0280 0000 3256          andi.l  #$FFFF,D0
08001B28  FFFF      
                    3257   dodiv_3:
08001B2A  2204      3258          move.l  D4,D1
08001B2C  2404      3259          move.l  D4,D2
08001B2E  4842      3260          swap    D2
08001B30  C2C0      3261          mulu    D0,D1
08001B32  C4C0      3262          mulu    D0,D2
08001B34  4842      3263          swap    D2
08001B36  D282      3264          add.l   D2,D1
08001B38  9283      3265          sub.l   D3,D1
08001B3A  620A      3266          bhi.s   dodiv_4
08001B3C  4481      3267          neg.l   D1
08001B3E  B881      3268          cmp.l   D1,D4
08001B40  6208      3269          bhi.s   dodiv_5
08001B42  5280      3270          addq.l  #1,D0
08001B44  60E4      3271          bra.s   dodiv_3
                    3272   dodiv_4:
08001B46  5380      3273          subq.l  #1,D0
08001B48  60E0      3274          bra.s   dodiv_3
                    3275   dodiv_5:
08001B4A  4CDF 001C 3276          movem.l (A7)+,D2/D3/D4
08001B4E  4E75      3277          rts
                    3278   _scanf:
08001B50  4E56 FFFC 3279          link      A6,#-4
08001B54  48E7 2000 3280          movem.l   D2,-(A7)
08001B58  41EE 0008 3281          lea       8(A6),A0
08001B5C  5848      3282          addq.w    #4,A0
08001B5E  2408      3283          move.l    A0,D2
08001B60  2F02      3284          move.l    D2,-(A7)
08001B62  2F2E 0008 3285          move.l    8(A6),-(A7)
08001B66  42A7      3286          clr.l     -(A7)
08001B68  6100 02F4 3287          bsr       _vsscanf
08001B6C  DEFC 000C 3288          add.w     #12,A7
08001B70  2D40 FFFC 3289          move.l    D0,-4(A6)
08001B74  4282      3290          clr.l     D2
08001B76  202E FFFC 3291          move.l    -4(A6),D0
08001B7A  4CDF 0004 3292          movem.l   (A7)+,D2
08001B7E  4E5E      3293          unlk      A6
08001B80  4E75      3294          rts
                    3295   _printf:
08001B82  4E56 FFFC 3296          link      A6,#-4
08001B86  48E7 2000 3297          movem.l   D2,-(A7)
08001B8A  41EE 0008 3298          lea       8(A6),A0
08001B8E  5848      3299          addq.w    #4,A0
08001B90  2408      3300          move.l    A0,D2
08001B92  2F02      3301          move.l    D2,-(A7)
08001B94  2F2E 0008 3302          move.l    8(A6),-(A7)
08001B98  42A7      3303          clr.l     -(A7)
08001B9A  6100 0962 3304          bsr       _vsprintf
08001B9E  DEFC 000C 3305          add.w     #12,A7
08001BA2  2D40 FFFC 3306          move.l    D0,-4(A6)
08001BA6  4282      3307          clr.l     D2
08001BA8  202E FFFC 3308          move.l    -4(A6),D0
08001BAC  4CDF 0004 3309          movem.l   (A7)+,D2
08001BB0  4E5E      3310          unlk      A6
08001BB2  4E75      3311          rts
                    3312   @vsscanf_scanread:
08001BB4  4E56 FFFC 3313          link      A6,#-4
08001BB8  48E7 0020 3314          movem.l   A2,-(A7)
08001BBC  45F9 0800 3315          lea       @vsscanf_bufx,A2
08001BC0  3866      
08001BC2  4AAE 0008 3316          tst.l     8(A6)
08001BC6  6722      3317          beq.s     @vsscanf_scanread_1
08001BC8  206E 0008 3318          move.l    8(A6),A0
08001BCC  58AE 0008 3319          addq.l    #4,8(A6)
08001BD0  2050      3320          move.l    (A0),A0
08001BD2  1010      3321          move.b    (A0),D0
08001BD4  4880      3322          ext.w     D0
08001BD6  48C0      3323          ext.l     D0
08001BD8  2D40 FFFC 3324          move.l    D0,-4(A6)
08001BDC  6706      3325          beq.s     @vsscanf_scanread_3
08001BDE  202E FFFC 3326          move.l    -4(A6),D0
08001BE2  6002      3327          bra.s     @vsscanf_scanread_4
                    3328   @vsscanf_scanread_3:
08001BE4  70FF      3329          moveq     #-1,D0
                    3330   @vsscanf_scanread_4:
08001BE6  6000 0032 3331          bra       @vsscanf_scanread_5
                    3332   @vsscanf_scanread_1:
08001BEA  2052      3333          move.l    (A2),A0
08001BEC  1010      3334          move.b    (A0),D0
08001BEE  6620      3335          bne.s     @vsscanf_scanread_6
08001BF0  4879 0800 3336          pea       @vsscanf_buf
08001BF4  3996      
08001BF6  6100 100A 3337          bsr       _gets
08001BFA  584F      3338          addq.w    #4,A7
08001BFC  2480      3339          move.l    D0,(A2)
08001BFE  4879 0800 3340          pea       @vsscanf_1
08001C02  386A      
08001C04  4879 0800 3341          pea       @vsscanf_buf
08001C08  3996      
08001C0A  6100 1096 3342          bsr       _strcat
08001C0E  504F      3343          addq.w    #8,A7
                    3344   @vsscanf_scanread_6:
08001C10  2052      3345          move.l    (A2),A0
08001C12  5292      3346          addq.l    #1,(A2)
08001C14  1010      3347          move.b    (A0),D0
08001C16  4880      3348          ext.w     D0
08001C18  48C0      3349          ext.l     D0
                    3350   @vsscanf_scanread_5:
08001C1A  4CDF 0400 3351          movem.l   (A7)+,A2
08001C1E  4E5E      3352          unlk      A6
08001C20  4E75      3353          rts
                    3354   @vsscanf_scanputback:
08001C22  4E56 0000 3355          link      A6,#0
08001C26  48E7 3000 3356          movem.l   D2/D3,-(A7)
08001C2A  242E 000C 3357          move.l    12(A6),D2
08001C2E  262E 0008 3358          move.l    8(A6),D3
08001C32  6718      3359          beq.s     @vsscanf_scanputback_1
08001C34  0C82 FFFF 3360          cmp.l     #-1,D2
08001C38  FFFF      
08001C3A  670A      3361          beq.s     @vsscanf_scanputback_3
08001C3C  5983      3362          subq.l    #4,D3
08001C3E  2043      3363          move.l    D3,A0
08001C40  2050      3364          move.l    (A0),A0
08001C42  1082      3365          move.b    D2,(A0)
08001C44  6004      3366          bra.s     @vsscanf_scanputback_4
                    3367   @vsscanf_scanputback_3:
08001C46  2043      3368          move.l    D3,A0
08001C48  5390      3369          subq.l    #1,(A0)
                    3370   @vsscanf_scanputback_4:
08001C4A  602E      3371          bra.s     @vsscanf_scanputback_6
                    3372   @vsscanf_scanputback_1:
08001C4C  41F9 0800 3373          lea       @vsscanf_buf,A0
08001C50  3996      
08001C52  2008      3374          move.l    A0,D0
08001C54  B0B9 0800 3375          cmp.l     @vsscanf_bufx,D0
08001C58  3866      
08001C5A  6610      3376          bne.s     @vsscanf_scanputback_5
08001C5C  4239 0800 3377          clr.b     @vsscanf_buf
08001C60  3996      
08001C62  2F02      3378          move.l    D2,-(A7)
08001C64  6100 107E 3379          bsr       _ungetch
08001C68  584F      3380          addq.w    #4,A7
08001C6A  600E      3381          bra.s     @vsscanf_scanputback_6
                    3382   @vsscanf_scanputback_5:
08001C6C  53B9 0800 3383          subq.l    #1,@vsscanf_bufx
08001C70  3866      
08001C72  2079 0800 3384          move.l    @vsscanf_bufx,A0
08001C76  3866      
08001C78  1082      3385          move.b    D2,(A0)
                    3386   @vsscanf_scanputback_6:
08001C7A  2002      3387          move.l    D2,D0
08001C7C  4CDF 000C 3388          movem.l   (A7)+,D2/D3
08001C80  4E5E      3389          unlk      A6
08001C82  4E75      3390          rts
                    3391   @vsscanf_scanspace:
08001C84  4E56 0000 3392          link      A6,#0
08001C88  48E7 2000 3393          movem.l   D2,-(A7)
                    3394   @vsscanf_scanspace_1:
08001C8C  2F2E 0008 3395          move.l    8(A6),-(A7)
08001C90  6100 FF22 3396          bsr       @vsscanf_scanread
08001C94  584F      3397          addq.w    #4,A7
08001C96  2400      3398          move.l    D0,D2
08001C98  206E 000C 3399          move.l    12(A6),A0
08001C9C  5290      3400          addq.l    #1,(A0)
08001C9E  2042      3401          move.l    D2,A0
08001CA0  43F9 0800 3402          lea       __ctype,A1
08001CA4  386C      
08001CA6  1030 9801 3403          move.b    1(A0,A1.L),D0
08001CAA  C03C 0010 3404          and.b     #16,D0
08001CAE  66DC      3405          bne       @vsscanf_scanspace_1
08001CB0  2002      3406          move.l    D2,D0
08001CB2  4CDF 0004 3407          movem.l   (A7)+,D2
08001CB6  4E5E      3408          unlk      A6
08001CB8  4E75      3409          rts
                    3410   @vsscanf_scanselect:
08001CBA  4E56 0000 3411          link      A6,#0
08001CBE  48E7 3F20 3412          movem.l   D2/D3/D4/D5/D6/D7/A2,-(A7)
08001CC2  262E 000C 3413          move.l    12(A6),D3
08001CC6  2C2E 0018 3414          move.l    24(A6),D6
08001CCA  2E2E 0014 3415          move.l    20(A6),D7
08001CCE  2043      3416          move.l    D3,A0
08001CD0  1010      3417          move.b    (A0),D0
08001CD2  4880      3418          ext.w     D0
08001CD4  48C0      3419          ext.l     D0
08001CD6  0C80 0000 3420          cmp.l     #94,D0
08001CDA  005E      
08001CDC  6608      3421          bne.s     @vsscanf_scanselect_1
08001CDE  347C 0001 3422          move.w    #1,A2
08001CE2  5283      3423          addq.l    #1,D3
08001CE4  6004      3424          bra.s     @vsscanf_scanselect_2
                    3425   @vsscanf_scanselect_1:
08001CE6  347C 0000 3426          move.w    #0,A2
                    3427   @vsscanf_scanselect_2:
08001CEA  202E 0010 3428          move.l    16(A6),D0
08001CEE  53AE 0010 3429          subq.l    #1,16(A6)
08001CF2  4A80      3430          tst.l     D0
08001CF4  6700 0108 3431          beq       @vsscanf_scanselect_5
08001CF8  2F2E 0008 3432          move.l    8(A6),-(A7)
08001CFC  6100 FEB6 3433          bsr       @vsscanf_scanread
08001D00  584F      3434          addq.w    #4,A7
08001D02  2800      3435          move.l    D0,D4
08001D04  0C84 FFFF 3436          cmp.l     #-1,D4
08001D08  FFFF      
08001D0A  6604      3437          bne.s     @vsscanf_scanselect_6
08001D0C  6000 00F0 3438          bra       @vsscanf_scanselect_5
                    3439   @vsscanf_scanselect_6:
08001D10  206E 001C 3440          move.l    28(A6),A0
08001D14  5290      3441          addq.l    #1,(A0)
08001D16  4285      3442          clr.l     D5
08001D18  4282      3443          clr.l     D2
                    3444   @vsscanf_scanselect_8:
08001D1A  2043      3445          move.l    D3,A0
08001D1C  1030 2800 3446          move.b    0(A0,D2.L),D0
08001D20  4880      3447          ext.w     D0
08001D22  48C0      3448          ext.l     D0
08001D24  0C80 0000 3449          cmp.l     #93,D0
08001D28  005D      
08001D2A  6700 008E 3450          beq       @vsscanf_scanselect_10
08001D2E  4A82      3451          tst.l     D2
08001D30  6716      3452          beq.s     @vsscanf_scanselect_11
08001D32  2043      3453          move.l    D3,A0
08001D34  1030 2800 3454          move.b    0(A0,D2.L),D0
08001D38  4880      3455          ext.w     D0
08001D3A  48C0      3456          ext.l     D0
08001D3C  0C80 0000 3457          cmp.l     #93,D0
08001D40  005D      
08001D42  6604      3458          bne.s     @vsscanf_scanselect_11
08001D44  6000 0074 3459          bra       @vsscanf_scanselect_10
                    3460   @vsscanf_scanselect_11:
08001D48  4A82      3461          tst.l     D2
08001D4A  6700 0058 3462          beq       @vsscanf_scanselect_15
08001D4E  2043      3463          move.l    D3,A0
08001D50  1030 2800 3464          move.b    0(A0,D2.L),D0
08001D54  4880      3465          ext.w     D0
08001D56  48C0      3466          ext.l     D0
08001D58  0C80 0000 3467          cmp.l     #45,D0
08001D5C  002D      
08001D5E  6600 0044 3468          bne       @vsscanf_scanselect_15
08001D62  2043      3469          move.l    D3,A0
08001D64  2002      3470          move.l    D2,D0
08001D66  5380      3471          subq.l    #1,D0
08001D68  2243      3472          move.l    D3,A1
08001D6A  2F08      3473          move.l    A0,-(A7)
08001D6C  2042      3474          move.l    D2,A0
08001D6E  1230 0800 3475          move.b    0(A0,D0.L),D1
08001D72  B230 9801 3476          cmp.b     1(A0,A1.L),D1
08001D76  6C00 002C 3477          bge       @vsscanf_scanselect_15
08001D7A  205F      3478          move.l    (A7)+,A0
08001D7C  2043      3479          move.l    D3,A0
08001D7E  2002      3480          move.l    D2,D0
08001D80  5380      3481          subq.l    #1,D0
08001D82  1030 0800 3482          move.b    0(A0,D0.L),D0
08001D86  4880      3483          ext.w     D0
08001D88  48C0      3484          ext.l     D0
08001D8A  B880      3485          cmp.l     D0,D4
08001D8C  6D12      3486          blt.s     @vsscanf_scanselect_17
08001D8E  2043      3487          move.l    D3,A0
08001D90  2242      3488          move.l    D2,A1
08001D92  1031 8801 3489          move.b    1(A1,A0.L),D0
08001D96  4880      3490          ext.w     D0
08001D98  48C0      3491          ext.l     D0
08001D9A  B880      3492          cmp.l     D0,D4
08001D9C  6E02      3493          bgt.s     @vsscanf_scanselect_17
08001D9E  601A      3494          bra.s     @vsscanf_scanselect_10
                    3495   @vsscanf_scanselect_17:
08001DA0  5282      3496          addq.l    #1,D2
08001DA2  6010      3497          bra.s     @vsscanf_scanselect_19
                    3498   @vsscanf_scanselect_15:
08001DA4  2043      3499          move.l    D3,A0
08001DA6  1030 2800 3500          move.b    0(A0,D2.L),D0
08001DAA  4880      3501          ext.w     D0
08001DAC  48C0      3502          ext.l     D0
08001DAE  B880      3503          cmp.l     D0,D4
08001DB0  6602      3504          bne.s     @vsscanf_scanselect_19
08001DB2  6006      3505          bra.s     @vsscanf_scanselect_10
                    3506   @vsscanf_scanselect_19:
08001DB4  5282      3507          addq.l    #1,D2
08001DB6  6000 FF62 3508          bra       @vsscanf_scanselect_8
                    3509   @vsscanf_scanselect_10:
08001DBA  4A82      3510          tst.l     D2
08001DBC  6712      3511          beq.s     @vsscanf_scanselect_23
08001DBE  2043      3512          move.l    D3,A0
08001DC0  1030 2800 3513          move.b    0(A0,D2.L),D0
08001DC4  4880      3514          ext.w     D0
08001DC6  48C0      3515          ext.l     D0
08001DC8  0C80 0000 3516          cmp.l     #93,D0
08001DCC  005D      
08001DCE  6702      3517          beq.s     @vsscanf_scanselect_21
                    3518   @vsscanf_scanselect_23:
08001DD0  7A01      3519          moveq     #1,D5
                    3520   @vsscanf_scanselect_21:
08001DD2  200A      3521          move.l    A2,D0
08001DD4  6712      3522          beq.s     @vsscanf_scanselect_24
08001DD6  4A85      3523          tst.l     D5
08001DD8  660C      3524          bne.s     @vsscanf_scanselect_26
08001DDA  4A87      3525          tst.l     D7
08001DDC  6606      3526          bne.s     @vsscanf_scanselect_28
08001DDE  2046      3527          move.l    D6,A0
08001DE0  5286      3528          addq.l    #1,D6
08001DE2  1084      3529          move.b    D4,(A0)
                    3530   @vsscanf_scanselect_28:
08001DE4  6014      3531          bra.s     @vsscanf_scanselect_4
                    3532   @vsscanf_scanselect_26:
08001DE6  6016      3533          bra.s     @vsscanf_scanselect_5
                    3534   @vsscanf_scanselect_24:
08001DE8  4A85      3535          tst.l     D5
08001DEA  670C      3536          beq.s     @vsscanf_scanselect_30
08001DEC  4A87      3537          tst.l     D7
08001DEE  6606      3538          bne.s     @vsscanf_scanselect_32
08001DF0  2046      3539          move.l    D6,A0
08001DF2  5286      3540          addq.l    #1,D6
08001DF4  1084      3541          move.b    D4,(A0)
                    3542   @vsscanf_scanselect_32:
08001DF6  6002      3543          bra.s     @vsscanf_scanselect_4
                    3544   @vsscanf_scanselect_30:
08001DF8  6004      3545          bra.s     @vsscanf_scanselect_5
                    3546   @vsscanf_scanselect_4:
08001DFA  6000 FEEE 3547          bra       @vsscanf_scanselect_2
                    3548   @vsscanf_scanselect_5:
08001DFE  0C84 FFFF 3549          cmp.l     #-1,D4
08001E02  FFFF      
08001E04  6712      3550          beq.s     @vsscanf_scanselect_34
08001E06  2F04      3551          move.l    D4,-(A7)
08001E08  2F2E 0008 3552          move.l    8(A6),-(A7)
08001E0C  6100 FE14 3553          bsr       @vsscanf_scanputback
08001E10  504F      3554          addq.w    #8,A7
08001E12  206E 001C 3555          move.l    28(A6),A0
08001E16  5390      3556          subq.l    #1,(A0)
                    3557   @vsscanf_scanselect_34:
08001E18  4A87      3558          tst.l     D7
08001E1A  6604      3559          bne.s     @vsscanf_scanselect_36
08001E1C  2046      3560          move.l    D6,A0
08001E1E  4210      3561          clr.b     (A0)
                    3562   @vsscanf_scanselect_36:
08001E20  5283      3563          addq.l    #1,D3
08001E22  2043      3564          move.l    D3,A0
08001E24  1010      3565          move.b    (A0),D0
08001E26  4880      3566          ext.w     D0
08001E28  48C0      3567          ext.l     D0
08001E2A  0C80 0000 3568          cmp.l     #93,D0
08001E2E  005D      
08001E30  6702      3569          beq.s     @vsscanf_scanselect_40
08001E32  60EC      3570          bra       @vsscanf_scanselect_36
                    3571   @vsscanf_scanselect_40:
08001E34  5283      3572          addq.l    #1,D3
08001E36  2003      3573          move.l    D3,D0
08001E38  4CDF 04FC 3574          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2
08001E3C  4E5E      3575          unlk      A6
08001E3E  4E75      3576          rts
                    3577   _scanflush:
08001E40  41F9 0800 3578          lea       @vsscanf_buf,A0
08001E44  3996      
08001E46  23C8 0800 3579          move.l    A0,@vsscanf_bufx
08001E4A  3866      
08001E4C  4239 0800 3580          clr.b     @vsscanf_buf
08001E50  3996      
08001E52  4878 FFFF 3581          pea       -1
08001E56  6100 0E8C 3582          bsr       _ungetch
08001E5A  584F      3583          addq.w    #4,A7
08001E5C  4E75      3584          rts
                    3585   _vsscanf:
08001E5E  4E56 FF88 3586          link      A6,#-120
08001E62  48E7 3F3C 3587          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08001E66  47F9 0800 3588          lea       @vsscanf_scanread,A3
08001E6A  1BB4      
08001E6C  4AAE 0008 3589          tst.l     8(A6)
08001E70  6706      3590          beq.s     vsscanf_1
08001E72  41EE 0008 3591          lea       8(A6),A0
08001E76  6004      3592          bra.s     vsscanf_2
                    3593   vsscanf_1:
08001E78  4280      3594          clr.l     D0
08001E7A  2040      3595          move.l    D0,A0
                    3596   vsscanf_2:
08001E7C  2A08      3597          move.l    A0,D5
08001E7E  42AE FFE4 3598          clr.l     -28(A6)
08001E82  4284      3599          clr.l     D4
                    3600   vsscanf_3:
08001E84  206E 000C 3601          move.l    12(A6),A0
08001E88  52AE 000C 3602          addq.l    #1,12(A6)
08001E8C  1010      3603          move.b    (A0),D0
08001E8E  4880      3604          ext.w     D0
08001E90  48C0      3605          ext.l     D0
08001E92  2600      3606          move.l    D0,D3
08001E94  6700 05AC 3607          beq       vsscanf_5
08001E98  4286      3608          clr.l     D6
08001E9A  387C 0000 3609          move.w    #0,A4
08001E9E  0C83 0000 3610          cmp.l     #32,D3
08001EA2  0020      
08001EA4  6712      3611          beq.s     vsscanf_8
08001EA6  0C83 0000 3612          cmp.l     #9,D3
08001EAA  0009      
08001EAC  670A      3613          beq.s     vsscanf_8
08001EAE  0C83 0000 3614          cmp.l     #10,D3
08001EB2  000A      
08001EB4  6600 0048 3615          bne       vsscanf_6
                    3616   vsscanf_8:
08001EB8  2F05      3617          move.l    D5,-(A7)
08001EBA  4E93      3618          jsr       (A3)
08001EBC  584F      3619          addq.w    #4,A7
08001EBE  2400      3620          move.l    D0,D2
08001EC0  52AE FFE4 3621          addq.l    #1,-28(A6)
08001EC4  0C82 FFFF 3622          cmp.l     #-1,D2
08001EC8  FFFF      
08001ECA  660E      3623          bne.s     vsscanf_11
08001ECC  4A84      3624          tst.l     D4
08001ECE  6704      3625          beq.s     vsscanf_13
08001ED0  2004      3626          move.l    D4,D0
08001ED2  6002      3627          bra.s     vsscanf_14
                    3628   vsscanf_13:
08001ED4  70FF      3629          moveq     #-1,D0
                    3630   vsscanf_14:
08001ED6  6000 056C 3631          bra       vsscanf_15
                    3632   vsscanf_11:
08001EDA  2042      3633          move.l    D2,A0
08001EDC  43F9 0800 3634          lea       __ctype,A1
08001EE0  386C      
08001EE2  1030 9801 3635          move.b    1(A0,A1.L),D0
08001EE6  C03C 0010 3636          and.b     #16,D0
08001EEA  66CC      3637          bne       vsscanf_8
08001EEC  53AE FFE4 3638          subq.l    #1,-28(A6)
08001EF0  2F02      3639          move.l    D2,-(A7)
08001EF2  2F05      3640          move.l    D5,-(A7)
08001EF4  6100 FD2C 3641          bsr       @vsscanf_scanputback
08001EF8  504F      3642          addq.w    #8,A7
08001EFA  6000 0542 3643          bra       vsscanf_139
                    3644   vsscanf_6:
08001EFE  0C83 0000 3645          cmp.l     #37,D3
08001F02  0025      
08001F04  6600 0502 3646          bne       vsscanf_127
08001F08  206E 000C 3647          move.l    12(A6),A0
08001F0C  52AE 000C 3648          addq.l    #1,12(A6)
08001F10  1010      3649          move.b    (A0),D0
08001F12  4880      3650          ext.w     D0
08001F14  48C0      3651          ext.l     D0
08001F16  2600      3652          move.l    D0,D3
08001F18  42AE FFEC 3653          clr.l     -20(A6)
08001F1C  4286      3654          clr.l     D6
08001F1E  42AE FFE8 3655          clr.l     -24(A6)
08001F22  347C 7FFF 3656          move.w    #32767,A2
08001F26  0C83 0000 3657          cmp.l     #42,D3
08001F2A  002A      
08001F2C  6612      3658          bne.s     vsscanf_18
08001F2E  7C01      3659          moveq     #1,D6
08001F30  206E 000C 3660          move.l    12(A6),A0
08001F34  52AE 000C 3661          addq.l    #1,12(A6)
08001F38  1010      3662          move.b    (A0),D0
08001F3A  4880      3663          ext.w     D0
08001F3C  48C0      3664          ext.l     D0
08001F3E  2600      3665          move.l    D0,D3
                    3666   vsscanf_18:
08001F40  2043      3667          move.l    D3,A0
08001F42  43F9 0800 3668          lea       __ctype,A1
08001F46  386C      
08001F48  1030 9801 3669          move.b    1(A0,A1.L),D0
08001F4C  C03C 0004 3670          and.b     #4,D0
08001F50  6700 004E 3671          beq       vsscanf_24
08001F54  2003      3672          move.l    D3,D0
08001F56  0480 0000 3673          sub.l     #48,D0
08001F5A  0030      
08001F5C  2440      3674          move.l    D0,A2
                    3675   vsscanf_22:
08001F5E  206E 000C 3676          move.l    12(A6),A0
08001F62  52AE 000C 3677          addq.l    #1,12(A6)
08001F66  1010      3678          move.b    (A0),D0
08001F68  4880      3679          ext.w     D0
08001F6A  48C0      3680          ext.l     D0
08001F6C  2600      3681          move.l    D0,D3
08001F6E  2040      3682          move.l    D0,A0
08001F70  43F9 0800 3683          lea       __ctype,A1
08001F74  386C      
08001F76  1030 9801 3684          move.b    1(A0,A1.L),D0
08001F7A  C0BC 0000 3685          and.l     #255,D0
08001F7E  00FF      
08001F80  C0BC 0000 3686          and.l     #4,D0
08001F84  0004      
08001F86  6718      3687          beq.s     vsscanf_24
08001F88  70D0      3688          moveq     #-48,D0
08001F8A  2F0A      3689          move.l    A2,-(A7)
08001F8C  4878 000A 3690          pea       10
08001F90  6100 0BE2 3691          bsr       LMUL
08001F94  2217      3692          move.l    (A7),D1
08001F96  504F      3693          addq.w    #8,A7
08001F98  D283      3694          add.l     D3,D1
08001F9A  D081      3695          add.l     D1,D0
08001F9C  2440      3696          move.l    D0,A2
08001F9E  60BE      3697          bra       vsscanf_22
                    3698   vsscanf_24:
08001FA0  0C83 0000 3699          cmp.l     #108,D3
08001FA4  006C      
08001FA6  6708      3700          beq.s     vsscanf_27
08001FA8  0C83 0000 3701          cmp.l     #76,D3
08001FAC  004C      
08001FAE  661A      3702          bne.s     vsscanf_25
                    3703   vsscanf_27:
08001FB0  2D7C 0000 3704          move.l    #1,-24(A6)
08001FB4  0001 FFE8 
08001FB8  206E 000C 3705          move.l    12(A6),A0
08001FBC  52AE 000C 3706          addq.l    #1,12(A6)
08001FC0  1010      3707          move.b    (A0),D0
08001FC2  4880      3708          ext.w     D0
08001FC4  48C0      3709          ext.l     D0
08001FC6  2600      3710          move.l    D0,D3
08001FC8  6020      3711          bra.s     vsscanf_28
                    3712   vsscanf_25:
08001FCA  0C83 0000 3713          cmp.l     #104,D3
08001FCE  0068      
08001FD0  6618      3714          bne.s     vsscanf_28
08001FD2  2D7C 0000 3715          move.l    #1,-20(A6)
08001FD6  0001 FFEC 
08001FDA  206E 000C 3716          move.l    12(A6),A0
08001FDE  52AE 000C 3717          addq.l    #1,12(A6)
08001FE2  1010      3718          move.b    (A0),D0
08001FE4  4880      3719          ext.w     D0
08001FE6  48C0      3720          ext.l     D0
08001FE8  2600      3721          move.l    D0,D3
                    3722   vsscanf_28:
08001FEA  0C83 0000 3723          cmp.l     #91,D3
08001FEE  005B      
08001FF0  6600 0036 3724          bne       vsscanf_30
08001FF4  4A86      3725          tst.l     D6
08001FF6  660A      3726          bne.s     vsscanf_32
08001FF8  206E 0010 3727          move.l    16(A6),A0
08001FFC  58AE 0010 3728          addq.l    #4,16(A6)
08002000  2E10      3729          move.l    (A0),D7
                    3730   vsscanf_32:
08002002  486E FFE4 3731          pea       -28(A6)
08002006  2F07      3732          move.l    D7,-(A7)
08002008  2F06      3733          move.l    D6,-(A7)
0800200A  2F0A      3734          move.l    A2,-(A7)
0800200C  2F2E 000C 3735          move.l    12(A6),-(A7)
08002010  2F05      3736          move.l    D5,-(A7)
08002012  6100 FCA6 3737          bsr       @vsscanf_scanselect
08002016  DEFC 0018 3738          add.w     #24,A7
0800201A  2D40 000C 3739          move.l    D0,12(A6)
0800201E  4A86      3740          tst.l     D6
08002020  6602      3741          bne.s     vsscanf_34
08002022  5284      3742          addq.l    #1,D4
                    3743   vsscanf_34:
08002024  6000 0418 3744          bra       vsscanf_139
                    3745   vsscanf_30:
08002028  0C83 0000 3746          cmp.l     #110,D3
0800202C  006E      
0800202E  661A      3747          bne.s     vsscanf_36
08002030  4A86      3748          tst.l     D6
08002032  6612      3749          bne.s     vsscanf_38
08002034  206E 0010 3750          move.l    16(A6),A0
08002038  58AE 0010 3751          addq.l    #4,16(A6)
0800203C  2E10      3752          move.l    (A0),D7
0800203E  2047      3753          move.l    D7,A0
08002040  20AE FFE4 3754          move.l    -28(A6),(A0)
08002044  5284      3755          addq.l    #1,D4
                    3756   vsscanf_38:
08002046  6000 03F6 3757          bra       vsscanf_139
                    3758   vsscanf_36:
0800204A  0C83 0000 3759          cmp.l     #115,D3
0800204E  0073      
08002050  6600 00AC 3760          bne       vsscanf_40
08002054  486E FFE4 3761          pea       -28(A6)
08002058  2F05      3762          move.l    D5,-(A7)
0800205A  6100 FC28 3763          bsr       @vsscanf_scanspace
0800205E  504F      3764          addq.w    #8,A7
08002060  2400      3765          move.l    D0,D2
08002062  4A86      3766          tst.l     D6
08002064  660A      3767          bne.s     vsscanf_42
08002066  206E 0010 3768          move.l    16(A6),A0
0800206A  58AE 0010 3769          addq.l    #4,16(A6)
0800206E  2E10      3770          move.l    (A0),D7
                    3771   vsscanf_42:
08002070  52AE FFE4 3772          addq.l    #1,-28(A6)
                    3773   vsscanf_44:
08002074  200A      3774          move.l    A2,D0
08002076  534A      3775          subq.w    #1,A2
08002078  4A80      3776          tst.l     D0
0800207A  6700 0038 3777          beq       vsscanf_46
0800207E  2042      3778          move.l    D2,A0
08002080  43F9 0800 3779          lea       __ctype,A1
08002084  386C      
08002086  1030 9801 3780          move.b    1(A0,A1.L),D0
0800208A  C03C 0010 3781          and.b     #16,D0
0800208E  6624      3782          bne.s     vsscanf_46
08002090  0C82 FFFF 3783          cmp.l     #-1,D2
08002094  FFFF      
08002096  671C      3784          beq.s     vsscanf_46
08002098  387C 0001 3785          move.w    #1,A4
0800209C  4A86      3786          tst.l     D6
0800209E  6606      3787          bne.s     vsscanf_47
080020A0  2047      3788          move.l    D7,A0
080020A2  5287      3789          addq.l    #1,D7
080020A4  1082      3790          move.b    D2,(A0)
                    3791   vsscanf_47:
080020A6  2F05      3792          move.l    D5,-(A7)
080020A8  4E93      3793          jsr       (A3)
080020AA  584F      3794          addq.w    #4,A7
080020AC  2400      3795          move.l    D0,D2
080020AE  52AE FFE4 3796          addq.l    #1,-28(A6)
080020B2  60C0      3797          bra       vsscanf_44
                    3798   vsscanf_46:
080020B4  4A86      3799          tst.l     D6
080020B6  660A      3800          bne.s     vsscanf_51
080020B8  2047      3801          move.l    D7,A0
080020BA  4210      3802          clr.b     (A0)
080020BC  200C      3803          move.l    A4,D0
080020BE  6702      3804          beq.s     vsscanf_51
080020C0  5284      3805          addq.l    #1,D4
                    3806   vsscanf_51:
080020C2  0C82 FFFF 3807          cmp.l     #-1,D2
080020C6  FFFF      
080020C8  6708      3808          beq.s     vsscanf_55
080020CA  4A86      3809          tst.l     D6
080020CC  661E      3810          bne.s     vsscanf_53
080020CE  200C      3811          move.l    A4,D0
080020D0  661A      3812          bne.s     vsscanf_53
                    3813   vsscanf_55:
080020D2  4A84      3814          tst.l     D4
080020D4  6704      3815          beq.s     vsscanf_56
080020D6  2004      3816          move.l    D4,D0
080020D8  600E      3817          bra.s     vsscanf_59
                    3818   vsscanf_56:
080020DA  0C82 FFFF 3819          cmp.l     #-1,D2
080020DE  FFFF      
080020E0  6604      3820          bne.s     vsscanf_58
080020E2  70FF      3821          moveq     #-1,D0
080020E4  6002      3822          bra.s     vsscanf_59
                    3823   vsscanf_58:
080020E6  2004      3824          move.l    D4,D0
                    3825   vsscanf_59:
080020E8  6000 035A 3826          bra       vsscanf_15
                    3827   vsscanf_53:
080020EC  53AE FFE4 3828          subq.l    #1,-28(A6)
080020F0  2F02      3829          move.l    D2,-(A7)
080020F2  2F05      3830          move.l    D5,-(A7)
080020F4  6100 FB2C 3831          bsr       @vsscanf_scanputback
080020F8  504F      3832          addq.w    #8,A7
080020FA  6000 0342 3833          bra       vsscanf_139
                    3834   vsscanf_40:
080020FE  0C83 0000 3835          cmp.l     #99,D3
08002102  0063      
08002104  6600 008E 3836          bne       vsscanf_60
08002108  4A86      3837          tst.l     D6
0800210A  660A      3838          bne.s     vsscanf_62
0800210C  206E 0010 3839          move.l    16(A6),A0
08002110  58AE 0010 3840          addq.l    #4,16(A6)
08002114  2E10      3841          move.l    (A0),D7
                    3842   vsscanf_62:
08002116  2F05      3843          move.l    D5,-(A7)
08002118  4E93      3844          jsr       (A3)
0800211A  584F      3845          addq.w    #4,A7
0800211C  2400      3846          move.l    D0,D2
0800211E  52AE FFE4 3847          addq.l    #1,-28(A6)
08002122  200A      3848          move.l    A2,D0
08002124  0C80 0000 3849          cmp.l     #32767,D0
08002128  7FFF      
0800212A  6604      3850          bne.s     vsscanf_64
0800212C  347C 0001 3851          move.w    #1,A2
                    3852   vsscanf_64:
08002130  0C82 FFFF 3853          cmp.l     #-1,D2
08002134  FFFF      
08002136  6606      3854          bne.s     vsscanf_66
08002138  4A86      3855          tst.l     D6
0800213A  6602      3856          bne.s     vsscanf_66
0800213C  5384      3857          subq.l    #1,D4
                    3858   vsscanf_66:
0800213E  200A      3859          move.l    A2,D0
08002140  534A      3860          subq.w    #1,A2
08002142  4A80      3861          tst.l     D0
08002144  6720      3862          beq.s     vsscanf_70
08002146  0C82 FFFF 3863          cmp.l     #-1,D2
0800214A  FFFF      
0800214C  6718      3864          beq.s     vsscanf_70
0800214E  4A86      3865          tst.l     D6
08002150  6606      3866          bne.s     vsscanf_71
08002152  2047      3867          move.l    D7,A0
08002154  5287      3868          addq.l    #1,D7
08002156  1082      3869          move.b    D2,(A0)
                    3870   vsscanf_71:
08002158  2F05      3871          move.l    D5,-(A7)
0800215A  4E93      3872          jsr       (A3)
0800215C  584F      3873          addq.w    #4,A7
0800215E  2400      3874          move.l    D0,D2
08002160  52AE FFE4 3875          addq.l    #1,-28(A6)
08002164  60D8      3876          bra       vsscanf_66
                    3877   vsscanf_70:
08002166  0C82 FFFF 3878          cmp.l     #-1,D2
0800216A  FFFF      
0800216C  660E      3879          bne.s     vsscanf_73
0800216E  4A84      3880          tst.l     D4
08002170  6704      3881          beq.s     vsscanf_75
08002172  2004      3882          move.l    D4,D0
08002174  6002      3883          bra.s     vsscanf_76
                    3884   vsscanf_75:
08002176  70FF      3885          moveq     #-1,D0
                    3886   vsscanf_76:
08002178  6000 02CA 3887          bra       vsscanf_15
                    3888   vsscanf_73:
0800217C  4A86      3889          tst.l     D6
0800217E  6602      3890          bne.s     vsscanf_77
08002180  5284      3891          addq.l    #1,D4
                    3892   vsscanf_77:
08002182  53AE FFE4 3893          subq.l    #1,-28(A6)
08002186  2F02      3894          move.l    D2,-(A7)
08002188  2F05      3895          move.l    D5,-(A7)
0800218A  6100 FA96 3896          bsr       @vsscanf_scanputback
0800218E  504F      3897          addq.w    #8,A7
08002190  6000 02AC 3898          bra       vsscanf_139
                    3899   vsscanf_60:
08002194  0C83 0000 3900          cmp.l     #105,D3
08002198  0069      
0800219A  6600 0060 3901          bne       vsscanf_82
0800219E  486E FFE4 3902          pea       -28(A6)
080021A2  2F05      3903          move.l    D5,-(A7)
080021A4  6100 FADE 3904          bsr       @vsscanf_scanspace
080021A8  504F      3905          addq.w    #8,A7
080021AA  2400      3906          move.l    D0,D2
080021AC  0C82 0000 3907          cmp.l     #48,D2
080021B0  0030      
080021B2  6600 0038 3908          bne       vsscanf_81
080021B6  387C 0001 3909          move.w    #1,A4
080021BA  2F05      3910          move.l    D5,-(A7)
080021BC  4E93      3911          jsr       (A3)
080021BE  584F      3912          addq.w    #4,A7
080021C0  2400      3913          move.l    D0,D2
080021C2  2F02      3914          move.l    D2,-(A7)
080021C4  6100 0AB0 3915          bsr       _tolower
080021C8  584F      3916          addq.w    #4,A7
080021CA  0C80 0000 3917          cmp.l     #120,D0
080021CE  0078      
080021D0  6604      3918          bne.s     vsscanf_83
080021D2  7678      3919          moveq     #120,D3
080021D4  6010      3920          bra.s     vsscanf_84
                    3921   vsscanf_83:
080021D6  53AE FFE4 3922          subq.l    #1,-28(A6)
080021DA  2F02      3923          move.l    D2,-(A7)
080021DC  2F05      3924          move.l    D5,-(A7)
080021DE  6100 FA42 3925          bsr       @vsscanf_scanputback
080021E2  504F      3926          addq.w    #8,A7
080021E4  766F      3927          moveq     #111,D3
                    3928   vsscanf_84:
080021E6  52AE FFE4 3929          addq.l    #1,-28(A6)
080021EA  6010      3930          bra.s     vsscanf_82
                    3931   vsscanf_81:
080021EC  53AE FFE4 3932          subq.l    #1,-28(A6)
080021F0  2F02      3933          move.l    D2,-(A7)
080021F2  2F05      3934          move.l    D5,-(A7)
080021F4  6100 FA2C 3935          bsr       @vsscanf_scanputback
080021F8  504F      3936          addq.w    #8,A7
080021FA  7664      3937          moveq     #100,D3
                    3938   vsscanf_82:
080021FC  0C83 0000 3939          cmp.l     #100,D3
08002200  0064      
08002202  671A      3940          beq.s     vsscanf_87
08002204  0C83 0000 3941          cmp.l     #117,D3
08002208  0075      
0800220A  6712      3942          beq.s     vsscanf_87
0800220C  0C83 0000 3943          cmp.l     #120,D3
08002210  0078      
08002212  670A      3944          beq.s     vsscanf_87
08002214  0C83 0000 3945          cmp.l     #111,D3
08002218  006F      
0800221A  6600 01A4 3946          bne       vsscanf_85
                    3947   vsscanf_87:
0800221E  486E FFE4 3948          pea       -28(A6)
08002222  2F05      3949          move.l    D5,-(A7)
08002224  6100 FA5E 3950          bsr       @vsscanf_scanspace
08002228  504F      3951          addq.w    #8,A7
0800222A  2400      3952          move.l    D0,D2
0800222C  2D7C 0000 3953          move.l    #10,-4(A6)
08002230  000A FFFC 
08002234  0C83 0000 3954          cmp.l     #120,D3
08002238  0078      
0800223A  6608      3955          bne.s     vsscanf_88
0800223C  2D7C 0000 3956          move.l    #16,-4(A6)
08002240  0010 FFFC 
                    3957   vsscanf_88:
08002244  0C83 0000 3958          cmp.l     #111,D3
08002248  006F      
0800224A  6608      3959          bne.s     vsscanf_90
0800224C  2D7C 0000 3960          move.l    #8,-4(A6)
08002250  0008 FFFC 
                    3961   vsscanf_90:
08002254  4A86      3962          tst.l     D6
08002256  660A      3963          bne.s     vsscanf_92
08002258  206E 0010 3964          move.l    16(A6),A0
0800225C  58AE 0010 3965          addq.l    #4,16(A6)
08002260  2E10      3966          move.l    (A0),D7
                    3967   vsscanf_92:
08002262  42AE FFE0 3968          clr.l     -32(A6)
08002266  52AE FFE4 3969          addq.l    #1,-28(A6)
0800226A  0C83 0000 3970          cmp.l     #117,D3
0800226E  0075      
08002270  6720      3971          beq.s     vsscanf_94
08002272  0C82 0000 3972          cmp.l     #45,D2
08002276  002D      
08002278  6618      3973          bne.s     vsscanf_94
0800227A  2F05      3974          move.l    D5,-(A7)
0800227C  4E93      3975          jsr       (A3)
0800227E  584F      3976          addq.w    #4,A7
08002280  2400      3977          move.l    D0,D2
08002282  52AE FFE4 3978          addq.l    #1,-28(A6)
08002286  2D7C 0000 3979          move.l    #1,-32(A6)
0800228A  0001 FFE0 
0800228E  387C 0001 3980          move.w    #1,A4
                    3981   vsscanf_94:
08002292  3A7C 0000 3982          move.w    #0,A5
08002296  0C82 FFFF 3983          cmp.l     #-1,D2
0800229A  FFFF      
0800229C  660E      3984          bne.s     vsscanf_96
0800229E  4A84      3985          tst.l     D4
080022A0  6704      3986          beq.s     vsscanf_98
080022A2  2004      3987          move.l    D4,D0
080022A4  6002      3988          bra.s     vsscanf_99
                    3989   vsscanf_98:
080022A6  70FF      3990          moveq     #-1,D0
                    3991   vsscanf_99:
080022A8  6000 019A 3992          bra       vsscanf_15
                    3993   vsscanf_96:
080022AC  200A      3994          move.l    A2,D0
080022AE  534A      3995          subq.w    #1,A2
080022B0  4A80      3996          tst.l     D0
080022B2  6700 0090 3997          beq       vsscanf_102
080022B6  0C83 0000 3998          cmp.l     #120,D3
080022BA  0078      
080022BC  6620      3999          bne.s     vsscanf_104
080022BE  2F02      4000          move.l    D2,-(A7)
080022C0  6100 09F6 4001          bsr       _toupper
080022C4  584F      4002          addq.w    #4,A7
080022C6  0C80 0000 4003          cmp.l     #65,D0
080022CA  0041      
080022CC  6D10      4004          blt.s     vsscanf_104
080022CE  2F02      4005          move.l    D2,-(A7)
080022D0  6100 09E6 4006          bsr       _toupper
080022D4  584F      4007          addq.w    #4,A7
080022D6  0C80 0000 4008          cmp.l     #70,D0
080022DA  0046      
080022DC  6F14      4009          ble.s     vsscanf_103
                    4010   vsscanf_104:
080022DE  2042      4011          move.l    D2,A0
080022E0  43F9 0800 4012          lea       __ctype,A1
080022E4  386C      
080022E6  1030 9801 4013          move.b    1(A0,A1.L),D0
080022EA  C03C 0004 4014          and.b     #4,D0
080022EE  6700 0054 4015          beq       vsscanf_102
                    4016   vsscanf_103:
080022F2  2042      4017          move.l    D2,A0
080022F4  43F9 0800 4018          lea       __ctype,A1
080022F8  386C      
080022FA  1030 9801 4019          move.b    1(A0,A1.L),D0
080022FE  C03C 0004 4020          and.b     #4,D0
08002302  6614      4021          bne.s     vsscanf_105
08002304  70F9      4022          moveq     #-7,D0
08002306  2F00      4023          move.l    D0,-(A7)
08002308  2F02      4024          move.l    D2,-(A7)
0800230A  6100 09AC 4025          bsr       _toupper
0800230E  584F      4026          addq.w    #4,A7
08002310  2200      4027          move.l    D0,D1
08002312  201F      4028          move.l    (A7)+,D0
08002314  D081      4029          add.l     D1,D0
08002316  2400      4030          move.l    D0,D2
                    4031   vsscanf_105:
08002318  2F0D      4032          move.l    A5,-(A7)
0800231A  2F2E FFFC 4033          move.l    -4(A6),-(A7)
0800231E  6100 0854 4034          bsr       LMUL
08002322  2017      4035          move.l    (A7),D0
08002324  504F      4036          addq.w    #8,A7
08002326  D082      4037          add.l     D2,D0
08002328  0480 0000 4038          sub.l     #48,D0
0800232C  0030      
0800232E  2A40      4039          move.l    D0,A5
08002330  2F05      4040          move.l    D5,-(A7)
08002332  4E93      4041          jsr       (A3)
08002334  584F      4042          addq.w    #4,A7
08002336  2400      4043          move.l    D0,D2
08002338  52AE FFE4 4044          addq.l    #1,-28(A6)
0800233C  387C 0001 4045          move.w    #1,A4
08002340  6000 FF6A 4046          bra       vsscanf_96
                    4047   vsscanf_102:
08002344  0C82 FFFF 4048          cmp.l     #-1,D2
08002348  FFFF      
0800234A  671A      4049          beq.s     vsscanf_107
0800234C  2F02      4050          move.l    D2,-(A7)
0800234E  2F05      4051          move.l    D5,-(A7)
08002350  6100 F8D0 4052          bsr       @vsscanf_scanputback
08002354  504F      4053          addq.w    #8,A7
08002356  53AE FFE4 4054          subq.l    #1,-28(A6)
0800235A  200C      4055          move.l    A4,D0
0800235C  6606      4056          bne.s     vsscanf_109
0800235E  2004      4057          move.l    D4,D0
08002360  6000 00E2 4058          bra       vsscanf_15
                    4059   vsscanf_109:
08002364  6012      4060          bra.s     vsscanf_111
                    4061   vsscanf_107:
08002366  200C      4062          move.l    A4,D0
08002368  660E      4063          bne.s     vsscanf_111
0800236A  4A84      4064          tst.l     D4
0800236C  6704      4065          beq.s     vsscanf_113
0800236E  2004      4066          move.l    D4,D0
08002370  6002      4067          bra.s     vsscanf_114
                    4068   vsscanf_113:
08002372  70FF      4069          moveq     #-1,D0
                    4070   vsscanf_114:
08002374  6000 00CE 4071          bra       vsscanf_15
                    4072   vsscanf_111:
08002378  4AAE FFE0 4073          tst.l     -32(A6)
0800237C  6706      4074          beq.s     vsscanf_115
0800237E  200D      4075          move.l    A5,D0
08002380  4480      4076          neg.l     D0
08002382  2A40      4077          move.l    D0,A5
                    4078   vsscanf_115:
08002384  4A86      4079          tst.l     D6
08002386  661E      4080          bne.s     vsscanf_117
08002388  4AAE FFE8 4081          tst.l     -24(A6)
0800238C  6706      4082          beq.s     vsscanf_119
0800238E  2047      4083          move.l    D7,A0
08002390  208D      4084          move.l    A5,(A0)
08002392  6010      4085          bra.s     vsscanf_122
                    4086   vsscanf_119:
08002394  4AAE FFEC 4087          tst.l     -20(A6)
08002398  6706      4088          beq.s     vsscanf_121
0800239A  2047      4089          move.l    D7,A0
0800239C  308D      4090          move.w    A5,(A0)
0800239E  6004      4091          bra.s     vsscanf_122
                    4092   vsscanf_121:
080023A0  2047      4093          move.l    D7,A0
080023A2  208D      4094          move.l    A5,(A0)
                    4095   vsscanf_122:
080023A4  5284      4096          addq.l    #1,D4
                    4097   vsscanf_117:
080023A6  0C82 FFFF 4098          cmp.l     #-1,D2
080023AA  FFFF      
080023AC  660E      4099          bne.s     vsscanf_123
080023AE  4A84      4100          tst.l     D4
080023B0  6704      4101          beq.s     vsscanf_125
080023B2  2004      4102          move.l    D4,D0
080023B4  6002      4103          bra.s     vsscanf_126
                    4104   vsscanf_125:
080023B6  70FF      4105          moveq     #-1,D0
                    4106   vsscanf_126:
080023B8  6000 008A 4107          bra       vsscanf_15
                    4108   vsscanf_123:
080023BC  6000 0080 4109          bra       vsscanf_139
                    4110   vsscanf_85:
080023C0  0C83 0000 4111          cmp.l     #37,D3
080023C4  0025      
080023C6  6600 0040 4112          bne       vsscanf_127
080023CA  2F05      4113          move.l    D5,-(A7)
080023CC  4E93      4114          jsr       (A3)
080023CE  584F      4115          addq.w    #4,A7
080023D0  2400      4116          move.l    D0,D2
080023D2  0C82 FFFF 4117          cmp.l     #-1,D2
080023D6  FFFF      
080023D8  660E      4118          bne.s     vsscanf_129
080023DA  4A84      4119          tst.l     D4
080023DC  6704      4120          beq.s     vsscanf_131
080023DE  2004      4121          move.l    D4,D0
080023E0  6002      4122          bra.s     vsscanf_132
                    4123   vsscanf_131:
080023E2  70FF      4124          moveq     #-1,D0
                    4125   vsscanf_132:
080023E4  6000 005E 4126          bra       vsscanf_15
                    4127   vsscanf_129:
080023E8  52AE FFE4 4128          addq.l    #1,-28(A6)
080023EC  B483      4129          cmp.l     D3,D2
080023EE  6714      4130          beq.s     vsscanf_133
080023F0  2F02      4131          move.l    D2,-(A7)
080023F2  2F05      4132          move.l    D5,-(A7)
080023F4  6100 F82C 4133          bsr       @vsscanf_scanputback
080023F8  504F      4134          addq.w    #8,A7
080023FA  53AE FFE4 4135          subq.l    #1,-28(A6)
080023FE  2004      4136          move.l    D4,D0
08002400  6000 0042 4137          bra       vsscanf_15
                    4138   vsscanf_133:
08002404  6000 0038 4139          bra       vsscanf_139
                    4140   vsscanf_127:
08002408  2F05      4141          move.l    D5,-(A7)
0800240A  4E93      4142          jsr       (A3)
0800240C  584F      4143          addq.w    #4,A7
0800240E  2400      4144          move.l    D0,D2
08002410  52AE FFE4 4145          addq.l    #1,-28(A6)
08002414  0C82 FFFF 4146          cmp.l     #-1,D2
08002418  FFFF      
0800241A  660C      4147          bne.s     vsscanf_135
0800241C  4A84      4148          tst.l     D4
0800241E  6704      4149          beq.s     vsscanf_137
08002420  2004      4150          move.l    D4,D0
08002422  6002      4151          bra.s     vsscanf_138
                    4152   vsscanf_137:
08002424  70FF      4153          moveq     #-1,D0
                    4154   vsscanf_138:
08002426  601C      4155          bra.s     vsscanf_15
                    4156   vsscanf_135:
08002428  B483      4157          cmp.l     D3,D2
0800242A  6712      4158          beq.s     vsscanf_139
0800242C  2F02      4159          move.l    D2,-(A7)
0800242E  2F05      4160          move.l    D5,-(A7)
08002430  6100 F7F0 4161          bsr       @vsscanf_scanputback
08002434  504F      4162          addq.w    #8,A7
08002436  53AE FFE4 4163          subq.l    #1,-28(A6)
0800243A  2004      4164          move.l    D4,D0
0800243C  6006      4165          bra.s     vsscanf_15
                    4166   vsscanf_139:
0800243E  6000 FA44 4167          bra       vsscanf_3
                    4168   vsscanf_5:
08002442  2004      4169          move.l    D4,D0
                    4170   vsscanf_15:
08002444  4CDF 3CFC 4171          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08002448  4E5E      4172          unlk      A6
0800244A  4E75      4173          rts
                    4174   @vsprintf_copy:
0800244C  4E56 0000 4175          link      A6,#0
08002450  206E 0008 4176          move.l    8(A6),A0
08002454  4A90      4177          tst.l     (A0)
08002456  6710      4178          beq.s     @vsprintf_copy_1
08002458  202E 000C 4179          move.l    12(A6),D0
0800245C  206E 0008 4180          move.l    8(A6),A0
08002460  2250      4181          move.l    (A0),A1
08002462  5290      4182          addq.l    #1,(A0)
08002464  1280      4183          move.b    D0,(A1)
08002466  600A      4184          bra.s     @vsprintf_copy_2
                    4185   @vsprintf_copy_1:
08002468  2F2E 000C 4186          move.l    12(A6),-(A7)
0800246C  6100 09F4 4187          bsr       _putch
08002470  584F      4188          addq.w    #4,A7
                    4189   @vsprintf_copy_2:
08002472  4E5E      4190          unlk      A6
08002474  4E75      4191          rts
                    4192   @vsprintf_getval:
08002476  4E56 0000 4193          link      A6,#0
0800247A  48E7 3000 4194          movem.l   D2/D3,-(A7)
0800247E  242E 0008 4195          move.l    8(A6),D2
08002482  4283      4196          clr.l     D3
08002484  2042      4197          move.l    D2,A0
08002486  2050      4198          move.l    (A0),A0
08002488  1010      4199          move.b    (A0),D0
0800248A  4880      4200          ext.w     D0
0800248C  48C0      4201          ext.l     D0
0800248E  0C80 0000 4202          cmp.l     #42,D0
08002492  002A      
08002494  6612      4203          bne.s     @vsprintf_getval_1
08002496  206E 000C 4204          move.l    12(A6),A0
0800249A  2250      4205          move.l    (A0),A1
0800249C  5890      4206          addq.l    #4,(A0)
0800249E  2611      4207          move.l    (A1),D3
080024A0  2042      4208          move.l    D2,A0
080024A2  5290      4209          addq.l    #1,(A0)
080024A4  6000 004E 4210          bra       @vsprintf_getval_5
                    4211   @vsprintf_getval_1:
080024A8  2042      4212          move.l    D2,A0
080024AA  2050      4213          move.l    (A0),A0
080024AC  1010      4214          move.b    (A0),D0
080024AE  4880      4215          ext.w     D0
080024B0  48C0      4216          ext.l     D0
080024B2  0C80 0000 4217          cmp.l     #48,D0
080024B6  0030      
080024B8  6D00 003A 4218          blt       @vsprintf_getval_5
080024BC  2042      4219          move.l    D2,A0
080024BE  2050      4220          move.l    (A0),A0
080024C0  1010      4221          move.b    (A0),D0
080024C2  4880      4222          ext.w     D0
080024C4  48C0      4223          ext.l     D0
080024C6  0C80 0000 4224          cmp.l     #57,D0
080024CA  0039      
080024CC  6E26      4225          bgt.s     @vsprintf_getval_5
080024CE  2F03      4226          move.l    D3,-(A7)
080024D0  4878 000A 4227          pea       10
080024D4  6100 069E 4228          bsr       LMUL
080024D8  2017      4229          move.l    (A7),D0
080024DA  504F      4230          addq.w    #8,A7
080024DC  2042      4231          move.l    D2,A0
080024DE  2250      4232          move.l    (A0),A1
080024E0  5290      4233          addq.l    #1,(A0)
080024E2  1211      4234          move.b    (A1),D1
080024E4  4881      4235          ext.w     D1
080024E6  48C1      4236          ext.l     D1
080024E8  D081      4237          add.l     D1,D0
080024EA  0480 0000 4238          sub.l     #48,D0
080024EE  0030      
080024F0  2600      4239          move.l    D0,D3
080024F2  60B4      4240          bra       @vsprintf_getval_1
                    4241   @vsprintf_getval_5:
080024F4  2003      4242          move.l    D3,D0
080024F6  4CDF 000C 4243          movem.l   (A7)+,D2/D3
080024FA  4E5E      4244          unlk      A6
080024FC  4E75      4245          rts
                    4246   _vsprintf:
080024FE  4E56 FFCC 4247          link      A6,#-52
08002502  48E7 3F3C 4248          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08002506  45EE 0008 4249          lea       8(A6),A2
0800250A  47F9 0800 4250          lea       @vsprintf_copy,A3
0800250E  244C      
08002510  49F9 0800 4251          lea       _ultoa,A4
08002514  2DEE      
08002516  4286      4252          clr.l     D6
                    4253   vsprintf_1:
08002518  206E 000C 4254          move.l    12(A6),A0
0800251C  4A10      4255          tst.b     (A0)
0800251E  6700 0624 4256          beq       vsprintf_3
08002522  206E 000C 4257          move.l    12(A6),A0
08002526  1010      4258          move.b    (A0),D0
08002528  4880      4259          ext.w     D0
0800252A  48C0      4260          ext.l     D0
0800252C  0C80 0000 4261          cmp.l     #37,D0
08002530  0025      
08002532  671C      4262          beq.s     vsprintf_4
08002534  206E 000C 4263          move.l    12(A6),A0
08002538  52AE 000C 4264          addq.l    #1,12(A6)
0800253C  1210      4265          move.b    (A0),D1
0800253E  4881      4266          ext.w     D1
08002540  48C1      4267          ext.l     D1
08002542  2F01      4268          move.l    D1,-(A7)
08002544  2F0A      4269          move.l    A2,-(A7)
08002546  4E93      4270          jsr       (A3)
08002548  504F      4271          addq.w    #8,A7
0800254A  5286      4272          addq.l    #1,D6
0800254C  6000 05F2 4273          bra       vsprintf_2
                    4274   vsprintf_4:
08002550  52AE 000C 4275          addq.l    #1,12(A6)
08002554  422E FFD3 4276          clr.b     -45(A6)
08002558  422E FFD2 4277          clr.b     -46(A6)
0800255C  422E FFD0 4278          clr.b     -48(A6)
08002560  422E FFCF 4279          clr.b     -49(A6)
08002564  422E FFCE 4280          clr.b     -50(A6)
08002568  422E FFCD 4281          clr.b     -51(A6)
0800256C  42AE FFFC 4282          clr.l     -4(A6)
08002570  7AFF      4283          moveq     #-1,D5
08002572  41EE FFDC 4284          lea       -36(A6),A0
08002576  2608      4285          move.l    A0,D3
08002578  2408      4286          move.l    A0,D2
                    4287   vsprintf_6:
0800257A  206E 000C 4288          move.l    12(A6),A0
0800257E  1010      4289          move.b    (A0),D0
08002580  4880      4290          ext.w     D0
08002582  48C0      4291          ext.l     D0
08002584  0C80 0000 4292          cmp.l     #43,D0
08002588  002B      
0800258A  6730      4293          beq.s     vsprintf_12
0800258C  6E18      4294          bgt.s     vsprintf_15
0800258E  0C80 0000 4295          cmp.l     #35,D0
08002592  0023      
08002594  6700 003E 4296          beq       vsprintf_14
08002598  6E00 0046 4297          bgt       vsprintf_9
0800259C  0C80 0000 4298          cmp.l     #32,D0
080025A0  0020      
080025A2  6724      4299          beq.s     vsprintf_13
080025A4  603A      4300          bra.s     vsprintf_9
                    4301   vsprintf_15:
080025A6  0C80 0000 4302          cmp.l     #45,D0
080025AA  002D      
080025AC  6702      4303          beq.s     vsprintf_11
080025AE  6030      4304          bra.s     vsprintf_9
                    4305   vsprintf_11:
080025B0  1D7C 0001 4306          move.b    #1,-51(A6)
080025B4  FFCD      
080025B6  52AE 000C 4307          addq.l    #1,12(A6)
080025BA  6026      4308          bra.s     vsprintf_7
                    4309   vsprintf_12:
080025BC  1D7C 0001 4310          move.b    #1,-50(A6)
080025C0  FFCE      
080025C2  52AE 000C 4311          addq.l    #1,12(A6)
080025C6  601A      4312          bra.s     vsprintf_7
                    4313   vsprintf_13:
080025C8  1D7C 0001 4314          move.b    #1,-49(A6)
080025CC  FFCF      
080025CE  52AE 000C 4315          addq.l    #1,12(A6)
080025D2  600E      4316          bra.s     vsprintf_7
                    4317   vsprintf_14:
080025D4  1D7C 0001 4318          move.b    #1,-48(A6)
080025D8  FFD0      
080025DA  52AE 000C 4319          addq.l    #1,12(A6)
080025DE  6002      4320          bra.s     vsprintf_7
                    4321   vsprintf_9:
080025E0  6002      4322          bra.s     vsprintf_8
                    4323   vsprintf_7:
080025E2  6096      4324          bra       vsprintf_6
                    4325   vsprintf_8:
080025E4  206E 000C 4326          move.l    12(A6),A0
080025E8  1010      4327          move.b    (A0),D0
080025EA  4880      4328          ext.w     D0
080025EC  48C0      4329          ext.l     D0
080025EE  0C80 0000 4330          cmp.l     #48,D0
080025F2  0030      
080025F4  660A      4331          bne.s     vsprintf_16
080025F6  52AE 000C 4332          addq.l    #1,12(A6)
080025FA  1D7C 0001 4333          move.b    #1,-46(A6)
080025FE  FFD2      
                    4334   vsprintf_16:
08002600  486E 0010 4335          pea       16(A6)
08002604  486E 000C 4336          pea       12(A6)
08002608  6100 FE6C 4337          bsr       @vsprintf_getval
0800260C  504F      4338          addq.w    #8,A7
0800260E  2A40      4339          move.l    D0,A5
08002610  206E 000C 4340          move.l    12(A6),A0
08002614  1010      4341          move.b    (A0),D0
08002616  4880      4342          ext.w     D0
08002618  48C0      4343          ext.l     D0
0800261A  0C80 0000 4344          cmp.l     #46,D0
0800261E  002E      
08002620  6614      4345          bne.s     vsprintf_18
08002622  52AE 000C 4346          addq.l    #1,12(A6)
08002626  486E 0010 4347          pea       16(A6)
0800262A  486E 000C 4348          pea       12(A6)
0800262E  6100 FE46 4349          bsr       @vsprintf_getval
08002632  504F      4350          addq.w    #8,A7
08002634  2A00      4351          move.l    D0,D5
                    4352   vsprintf_18:
08002636  206E 000C 4353          move.l    12(A6),A0
0800263A  1010      4354          move.b    (A0),D0
0800263C  4880      4355          ext.w     D0
0800263E  48C0      4356          ext.l     D0
08002640  0C80 0000 4357          cmp.l     #108,D0
08002644  006C      
08002646  660A      4358          bne.s     vsprintf_20
08002648  52AE 000C 4359          addq.l    #1,12(A6)
0800264C  1D7C 0001 4360          move.b    #1,-45(A6)
08002650  FFD3      
                    4361   vsprintf_20:
08002652  206E 000C 4362          move.l    12(A6),A0
08002656  1010      4363          move.b    (A0),D0
08002658  4880      4364          ext.w     D0
0800265A  48C0      4365          ext.l     D0
0800265C  0C80 0000 4366          cmp.l     #111,D0
08002660  006F      
08002662  6700 00D4 4367          beq       vsprintf_27
08002666  6E34      4368          bgt.s     vsprintf_33
08002668  0C80 0000 4369          cmp.l     #100,D0
0800266C  0064      
0800266E  6700 0054 4370          beq       vsprintf_24
08002672  6E1C      4371          bgt.s     vsprintf_34
08002674  0C80 0000 4372          cmp.l     #99,D0
08002678  0063      
0800267A  6700 012C 4373          beq       vsprintf_30
0800267E  6E00 016A 4374          bgt       vsprintf_22
08002682  0C80 0000 4375          cmp.l     #88,D0
08002686  0058      
08002688  6700 00E6 4376          beq       vsprintf_28
0800268C  6000 015C 4377          bra       vsprintf_22
                    4378   vsprintf_34:
08002690  0C80 0000 4379          cmp.l     #105,D0
08002694  0069      
08002696  672C      4380          beq.s     vsprintf_24
08002698  6000 0150 4381          bra       vsprintf_22
                    4382   vsprintf_33:
0800269C  0C80 0000 4383          cmp.l     #117,D0
080026A0  0075      
080026A2  6700 005C 4384          beq       vsprintf_26
080026A6  6E0E      4385          bgt.s     vsprintf_35
080026A8  0C80 0000 4386          cmp.l     #115,D0
080026AC  0073      
080026AE  6700 011C 4387          beq       vsprintf_31
080026B2  6000 0136 4388          bra       vsprintf_22
                    4389   vsprintf_35:
080026B6  0C80 0000 4390          cmp.l     #120,D0
080026BA  0078      
080026BC  6700 00B2 4391          beq       vsprintf_28
080026C0  6000 0128 4392          bra       vsprintf_22
                    4393   vsprintf_24:
080026C4  4A2E FFD3 4394          tst.b     -45(A6)
080026C8  671A      4395          beq.s     vsprintf_36
080026CA  4878 000A 4396          pea       10
080026CE  2F03      4397          move.l    D3,-(A7)
080026D0  206E 0010 4398          move.l    16(A6),A0
080026D4  58AE 0010 4399          addq.l    #4,16(A6)
080026D8  2F10      4400          move.l    (A0),-(A7)
080026DA  6100 068E 4401          bsr       _ltoa
080026DE  DEFC 000C 4402          add.w     #12,A7
080026E2  6018      4403          bra.s     vsprintf_37
                    4404   vsprintf_36:
080026E4  4878 000A 4405          pea       10
080026E8  2F03      4406          move.l    D3,-(A7)
080026EA  206E 0010 4407          move.l    16(A6),A0
080026EE  58AE 0010 4408          addq.l    #4,16(A6)
080026F2  2F10      4409          move.l    (A0),-(A7)
080026F4  6100 0674 4410          bsr       _ltoa
080026F8  DEFC 000C 4411          add.w     #12,A7
                    4412   vsprintf_37:
080026FC  6000 00FA 4413          bra       vsprintf_23
                    4414   vsprintf_26:
08002700  4A2E FFD3 4415          tst.b     -45(A6)
08002704  6718      4416          beq.s     vsprintf_38
08002706  4878 000A 4417          pea       10
0800270A  2F03      4418          move.l    D3,-(A7)
0800270C  206E 0010 4419          move.l    16(A6),A0
08002710  58AE 0010 4420          addq.l    #4,16(A6)
08002714  2F10      4421          move.l    (A0),-(A7)
08002716  4E94      4422          jsr       (A4)
08002718  DEFC 000C 4423          add.w     #12,A7
0800271C  6016      4424          bra.s     vsprintf_39
                    4425   vsprintf_38:
0800271E  4878 000A 4426          pea       10
08002722  2F03      4427          move.l    D3,-(A7)
08002724  206E 0010 4428          move.l    16(A6),A0
08002728  58AE 0010 4429          addq.l    #4,16(A6)
0800272C  2F10      4430          move.l    (A0),-(A7)
0800272E  4E94      4431          jsr       (A4)
08002730  DEFC 000C 4432          add.w     #12,A7
                    4433   vsprintf_39:
08002734  6000 00C2 4434          bra       vsprintf_23
                    4435   vsprintf_27:
08002738  4A2E FFD3 4436          tst.b     -45(A6)
0800273C  6718      4437          beq.s     vsprintf_40
0800273E  4878 0008 4438          pea       8
08002742  2F03      4439          move.l    D3,-(A7)
08002744  206E 0010 4440          move.l    16(A6),A0
08002748  58AE 0010 4441          addq.l    #4,16(A6)
0800274C  2F10      4442          move.l    (A0),-(A7)
0800274E  4E94      4443          jsr       (A4)
08002750  DEFC 000C 4444          add.w     #12,A7
08002754  6016      4445          bra.s     vsprintf_41
                    4446   vsprintf_40:
08002756  4878 0008 4447          pea       8
0800275A  2F03      4448          move.l    D3,-(A7)
0800275C  206E 0010 4449          move.l    16(A6),A0
08002760  58AE 0010 4450          addq.l    #4,16(A6)
08002764  2F10      4451          move.l    (A0),-(A7)
08002766  4E94      4452          jsr       (A4)
08002768  DEFC 000C 4453          add.w     #12,A7
                    4454   vsprintf_41:
0800276C  6000 008A 4455          bra       vsprintf_23
                    4456   vsprintf_28:
08002770  4A2E FFD3 4457          tst.b     -45(A6)
08002774  6718      4458          beq.s     vsprintf_42
08002776  4878 0010 4459          pea       16
0800277A  2F03      4460          move.l    D3,-(A7)
0800277C  206E 0010 4461          move.l    16(A6),A0
08002780  58AE 0010 4462          addq.l    #4,16(A6)
08002784  2F10      4463          move.l    (A0),-(A7)
08002786  4E94      4464          jsr       (A4)
08002788  DEFC 000C 4465          add.w     #12,A7
0800278C  6016      4466          bra.s     vsprintf_43
                    4467   vsprintf_42:
0800278E  4878 0010 4468          pea       16
08002792  2F03      4469          move.l    D3,-(A7)
08002794  206E 0010 4470          move.l    16(A6),A0
08002798  58AE 0010 4471          addq.l    #4,16(A6)
0800279C  2F10      4472          move.l    (A0),-(A7)
0800279E  4E94      4473          jsr       (A4)
080027A0  DEFC 000C 4474          add.w     #12,A7
                    4475   vsprintf_43:
080027A4  6000 0052 4476          bra       vsprintf_23
                    4477   vsprintf_30:
080027A8  206E 0010 4478          move.l    16(A6),A0
080027AC  58AE 0010 4479          addq.l    #4,16(A6)
080027B0  2010      4480          move.l    (A0),D0
080027B2  2042      4481          move.l    D2,A0
080027B4  5282      4482          addq.l    #1,D2
080027B6  1080      4483          move.b    D0,(A0)
080027B8  2042      4484          move.l    D2,A0
080027BA  4210      4485          clr.b     (A0)
080027BC  200D      4486          move.l    A5,D0
080027BE  6704      4487          beq.s     vsprintf_44
080027C0  200D      4488          move.l    A5,D0
080027C2  6002      4489          bra.s     vsprintf_45
                    4490   vsprintf_44:
080027C4  7001      4491          moveq     #1,D0
                    4492   vsprintf_45:
080027C6  2A00      4493          move.l    D0,D5
080027C8  6000 002E 4494          bra       vsprintf_23
                    4495   vsprintf_31:
080027CC  206E 0010 4496          move.l    16(A6),A0
080027D0  58AE 0010 4497          addq.l    #4,16(A6)
080027D4  2610      4498          move.l    (A0),D3
080027D6  0C85 FFFF 4499          cmp.l     #-1,D5
080027DA  FFFF      
080027DC  660A      4500          bne.s     vsprintf_46
080027DE  2F03      4501          move.l    D3,-(A7)
080027E0  6100 066E 4502          bsr       _strlen
080027E4  584F      4503          addq.w    #4,A7
080027E6  2A00      4504          move.l    D0,D5
                    4505   vsprintf_46:
080027E8  600E      4506          bra.s     vsprintf_23
                    4507   vsprintf_22:
080027EA  206E 000C 4508          move.l    12(A6),A0
080027EE  2242      4509          move.l    D2,A1
080027F0  5282      4510          addq.l    #1,D2
080027F2  1290      4511          move.b    (A0),(A1)
080027F4  2042      4512          move.l    D2,A0
080027F6  4210      4513          clr.b     (A0)
                    4514   vsprintf_23:
080027F8  2F03      4515          move.l    D3,-(A7)
080027FA  6100 0654 4516          bsr       _strlen
080027FE  584F      4517          addq.w    #4,A7
08002800  1800      4518          move.b    D0,D4
08002802  206E 000C 4519          move.l    12(A6),A0
08002806  1010      4520          move.b    (A0),D0
08002808  4880      4521          ext.w     D0
0800280A  48C0      4522          ext.l     D0
0800280C  0C80 0000 4523          cmp.l     #115,D0
08002810  0073      
08002812  6618      4524          bne.s     vsprintf_48
08002814  0C85 0000 4525          cmp.l     #0,D5
08002818  0000      
0800281A  6D10      4526          blt.s     vsprintf_48
0800281C  4884      4527          ext.w     D4
0800281E  48C4      4528          ext.l     D4
08002820  B885      4529          cmp.l     D5,D4
08002822  6F04      4530          ble.s     vsprintf_50
08002824  1005      4531          move.b    D5,D0
08002826  6002      4532          bra.s     vsprintf_51
                    4533   vsprintf_50:
08002828  1004      4534          move.b    D4,D0
                    4535   vsprintf_51:
0800282A  1800      4536          move.b    D0,D4
                    4537   vsprintf_48:
0800282C  206E 000C 4538          move.l    12(A6),A0
08002830  1010      4539          move.b    (A0),D0
08002832  4880      4540          ext.w     D0
08002834  48C0      4541          ext.l     D0
08002836  0C80 0000 4542          cmp.l     #88,D0
0800283A  0058      
0800283C  6600 0026 4543          bne       vsprintf_56
08002840  41EE FFDC 4544          lea       -36(A6),A0
08002844  2408      4545          move.l    A0,D2
                    4546   vsprintf_54:
08002846  2042      4547          move.l    D2,A0
08002848  4A10      4548          tst.b     (A0)
0800284A  6718      4549          beq.s     vsprintf_56
0800284C  2042      4550          move.l    D2,A0
0800284E  1210      4551          move.b    (A0),D1
08002850  4881      4552          ext.w     D1
08002852  48C1      4553          ext.l     D1
08002854  2F01      4554          move.l    D1,-(A7)
08002856  6100 0460 4555          bsr       _toupper
0800285A  584F      4556          addq.w    #4,A7
0800285C  2042      4557          move.l    D2,A0
0800285E  1080      4558          move.b    D0,(A0)
08002860  5282      4559          addq.l    #1,D2
08002862  60E2      4560          bra       vsprintf_54
                    4561   vsprintf_56:
08002864  7E00      4562          moveq     #0,D7
08002866  41EE FFD4 4563          lea       -44(A6),A0
0800286A  2408      4564          move.l    A0,D2
0800286C  206E 000C 4565          move.l    12(A6),A0
08002870  1010      4566          move.b    (A0),D0
08002872  4880      4567          ext.w     D0
08002874  48C0      4568          ext.l     D0
08002876  0C80 0000 4569          cmp.l     #100,D0
0800287A  0064      
0800287C  6714      4570          beq.s     vsprintf_59
0800287E  206E 000C 4571          move.l    12(A6),A0
08002882  1010      4572          move.b    (A0),D0
08002884  4880      4573          ext.w     D0
08002886  48C0      4574          ext.l     D0
08002888  0C80 0000 4575          cmp.l     #105,D0
0800288C  0069      
0800288E  6600 0076 4576          bne       vsprintf_65
                    4577   vsprintf_59:
08002892  4A2E FFCE 4578          tst.b     -50(A6)
08002896  6612      4579          bne.s     vsprintf_62
08002898  2043      4580          move.l    D3,A0
0800289A  1010      4581          move.b    (A0),D0
0800289C  4880      4582          ext.w     D0
0800289E  48C0      4583          ext.l     D0
080028A0  0C80 0000 4584          cmp.l     #45,D0
080028A4  002D      
080028A6  6600 002E 4585          bne       vsprintf_60
                    4586   vsprintf_62:
080028AA  2043      4587          move.l    D3,A0
080028AC  1010      4588          move.b    (A0),D0
080028AE  4880      4589          ext.w     D0
080028B0  48C0      4590          ext.l     D0
080028B2  0C80 0000 4591          cmp.l     #45,D0
080028B6  002D      
080028B8  660E      4592          bne.s     vsprintf_63
080028BA  2043      4593          move.l    D3,A0
080028BC  5283      4594          addq.l    #1,D3
080028BE  2242      4595          move.l    D2,A1
080028C0  5282      4596          addq.l    #1,D2
080028C2  1290      4597          move.b    (A0),(A1)
080028C4  5304      4598          subq.b    #1,D4
080028C6  6008      4599          bra.s     vsprintf_64
                    4600   vsprintf_63:
080028C8  2042      4601          move.l    D2,A0
080028CA  5282      4602          addq.l    #1,D2
080028CC  10BC 002B 4603          move.b    #43,(A0)
                    4604   vsprintf_64:
080028D0  5287      4605          addq.l    #1,D7
080028D2  6000 0032 4606          bra       vsprintf_65
                    4607   vsprintf_60:
080028D6  4A2E FFCF 4608          tst.b     -49(A6)
080028DA  6700 002A 4609          beq       vsprintf_65
080028DE  2043      4610          move.l    D3,A0
080028E0  1010      4611          move.b    (A0),D0
080028E2  4880      4612          ext.w     D0
080028E4  48C0      4613          ext.l     D0
080028E6  0C80 0000 4614          cmp.l     #45,D0
080028EA  002D      
080028EC  660E      4615          bne.s     vsprintf_67
080028EE  2043      4616          move.l    D3,A0
080028F0  5283      4617          addq.l    #1,D3
080028F2  2242      4618          move.l    D2,A1
080028F4  5282      4619          addq.l    #1,D2
080028F6  1290      4620          move.b    (A0),(A1)
080028F8  5304      4621          subq.b    #1,D4
080028FA  6008      4622          bra.s     vsprintf_68
                    4623   vsprintf_67:
080028FC  2042      4624          move.l    D2,A0
080028FE  5282      4625          addq.l    #1,D2
08002900  10BC 0020 4626          move.b    #32,(A0)
                    4627   vsprintf_68:
08002904  5287      4628          addq.l    #1,D7
                    4629   vsprintf_65:
08002906  4A2E FFD0 4630          tst.b     -48(A6)
0800290A  6700 0066 4631          beq       vsprintf_77
0800290E  206E 000C 4632          move.l    12(A6),A0
08002912  1010      4633          move.b    (A0),D0
08002914  4880      4634          ext.w     D0
08002916  48C0      4635          ext.l     D0
08002918  0C80 0000 4636          cmp.l     #111,D0
0800291C  006F      
0800291E  671A      4637          beq.s     vsprintf_73
08002920  6E0C      4638          bgt.s     vsprintf_76
08002922  0C80 0000 4639          cmp.l     #88,D0
08002926  0058      
08002928  6710      4640          beq.s     vsprintf_73
0800292A  6000 0046 4641          bra       vsprintf_77
                    4642   vsprintf_76:
0800292E  0C80 0000 4643          cmp.l     #120,D0
08002932  0078      
08002934  6704      4644          beq.s     vsprintf_73
08002936  6000 003A 4645          bra       vsprintf_77
                    4646   vsprintf_73:
0800293A  2042      4647          move.l    D2,A0
0800293C  5282      4648          addq.l    #1,D2
0800293E  10BC 0030 4649          move.b    #48,(A0)
08002942  5287      4650          addq.l    #1,D7
08002944  206E 000C 4651          move.l    12(A6),A0
08002948  1010      4652          move.b    (A0),D0
0800294A  4880      4653          ext.w     D0
0800294C  48C0      4654          ext.l     D0
0800294E  0C80 0000 4655          cmp.l     #120,D0
08002952  0078      
08002954  6712      4656          beq.s     vsprintf_79
08002956  206E 000C 4657          move.l    12(A6),A0
0800295A  1010      4658          move.b    (A0),D0
0800295C  4880      4659          ext.w     D0
0800295E  48C0      4660          ext.l     D0
08002960  0C80 0000 4661          cmp.l     #88,D0
08002964  0058      
08002966  660A      4662          bne.s     vsprintf_77
                    4663   vsprintf_79:
08002968  2042      4664          move.l    D2,A0
0800296A  5282      4665          addq.l    #1,D2
0800296C  10BC 0078 4666          move.b    #120,(A0)
08002970  5287      4667          addq.l    #1,D7
                    4668   vsprintf_77:
08002972  2042      4669          move.l    D2,A0
08002974  4210      4670          clr.b     (A0)
08002976  206E 000C 4671          move.l    12(A6),A0
0800297A  1010      4672          move.b    (A0),D0
0800297C  4880      4673          ext.w     D0
0800297E  48C0      4674          ext.l     D0
08002980  0C80 0000 4675          cmp.l     #105,D0
08002984  0069      
08002986  6700 0076 4676          beq       vsprintf_82
0800298A  6E42      4677          bgt.s     vsprintf_93
0800298C  0C80 0000 4678          cmp.l     #99,D0
08002990  0063      
08002992  6700 0084 4679          beq       vsprintf_96
08002996  6E1C      4680          bgt.s     vsprintf_94
08002998  0C80 0000 4681          cmp.l     #88,D0
0800299C  0058      
0800299E  6700 005E 4682          beq       vsprintf_82
080029A2  6E00 0184 4683          bgt       vsprintf_80
080029A6  0C80 0000 4684          cmp.l     #69,D0
080029AA  0045      
080029AC  6700 0050 4685          beq       vsprintf_82
080029B0  6000 0176 4686          bra       vsprintf_80
                    4687   vsprintf_94:
080029B4  0C80 0000 4688          cmp.l     #101,D0
080029B8  0065      
080029BA  6700 0042 4689          beq       vsprintf_82
080029BE  6E00 0168 4690          bgt       vsprintf_80
080029C2  0C80 0000 4691          cmp.l     #100,D0
080029C6  0064      
080029C8  6734      4692          beq.s     vsprintf_82
080029CA  6000 015C 4693          bra       vsprintf_80
                    4694   vsprintf_93:
080029CE  0C80 0000 4695          cmp.l     #117,D0
080029D2  0075      
080029D4  6728      4696          beq.s     vsprintf_82
080029D6  6E1A      4697          bgt.s     vsprintf_95
080029D8  0C80 0000 4698          cmp.l     #115,D0
080029DC  0073      
080029DE  6700 0038 4699          beq       vsprintf_96
080029E2  6E00 0144 4700          bgt       vsprintf_80
080029E6  0C80 0000 4701          cmp.l     #111,D0
080029EA  006F      
080029EC  6710      4702          beq.s     vsprintf_82
080029EE  6000 0138 4703          bra       vsprintf_80
                    4704   vsprintf_95:
080029F2  0C80 0000 4705          cmp.l     #120,D0
080029F6  0078      
080029F8  6704      4706          beq.s     vsprintf_82
080029FA  6000 012C 4707          bra       vsprintf_80
                    4708   vsprintf_82:
080029FE  4A2E FFD2 4709          tst.b     -46(A6)
08002A02  6714      4710          beq.s     vsprintf_96
08002A04  4A2E FFCD 4711          tst.b     -51(A6)
08002A08  660E      4712          bne.s     vsprintf_96
08002A0A  200D      4713          move.l    A5,D0
08002A0C  9087      4714          sub.l     D7,D0
08002A0E  4884      4715          ext.w     D4
08002A10  48C4      4716          ext.l     D4
08002A12  9084      4717          sub.l     D4,D0
08002A14  2D40 FFFC 4718          move.l    D0,-4(A6)
                    4719   vsprintf_96:
08002A18  202E FFFC 4720          move.l    -4(A6),D0
08002A1C  0C80 0000 4721          cmp.l     #0,D0
08002A20  0000      
08002A22  6C04      4722          bge.s     vsprintf_98
08002A24  42AE FFFC 4723          clr.l     -4(A6)
                    4724   vsprintf_98:
08002A28  4A2E FFCD 4725          tst.b     -51(A6)
08002A2C  6600 0030 4726          bne       vsprintf_104
08002A30  4884      4727          ext.w     D4
08002A32  48C4      4728          ext.l     D4
08002A34  2004      4729          move.l    D4,D0
08002A36  D0AE FFFC 4730          add.l     -4(A6),D0
08002A3A  D087      4731          add.l     D7,D0
08002A3C  1D40 FFD1 4732          move.b    D0,-47(A6)
                    4733   vsprintf_102:
08002A40  102E FFD1 4734          move.b    -47(A6),D0
08002A44  4880      4735          ext.w     D0
08002A46  48C0      4736          ext.l     D0
08002A48  220D      4737          move.l    A5,D1
08002A4A  534D      4738          subq.w    #1,A5
08002A4C  B081      4739          cmp.l     D1,D0
08002A4E  6C0E      4740          bge.s     vsprintf_104
08002A50  4878 0020 4741          pea       32
08002A54  2F0A      4742          move.l    A2,-(A7)
08002A56  4E93      4743          jsr       (A3)
08002A58  504F      4744          addq.w    #8,A7
08002A5A  5286      4745          addq.l    #1,D6
08002A5C  60E2      4746          bra       vsprintf_102
                    4747   vsprintf_104:
08002A5E  41EE FFD4 4748          lea       -44(A6),A0
08002A62  2408      4749          move.l    A0,D2
                    4750   vsprintf_105:
08002A64  2042      4751          move.l    D2,A0
08002A66  4A10      4752          tst.b     (A0)
08002A68  6716      4753          beq.s     vsprintf_107
08002A6A  2042      4754          move.l    D2,A0
08002A6C  5282      4755          addq.l    #1,D2
08002A6E  1210      4756          move.b    (A0),D1
08002A70  4881      4757          ext.w     D1
08002A72  48C1      4758          ext.l     D1
08002A74  2F01      4759          move.l    D1,-(A7)
08002A76  2F0A      4760          move.l    A2,-(A7)
08002A78  4E93      4761          jsr       (A3)
08002A7A  504F      4762          addq.w    #8,A7
08002A7C  5286      4763          addq.l    #1,D6
08002A7E  60E4      4764          bra       vsprintf_105
                    4765   vsprintf_107:
08002A80  202E FFFC 4766          move.l    -4(A6),D0
08002A84  1D40 FFD1 4767          move.b    D0,-47(A6)
                    4768   vsprintf_108:
08002A88  102E FFD1 4769          move.b    -47(A6),D0
08002A8C  532E FFD1 4770          subq.b    #1,-47(A6)
08002A90  4A00      4771          tst.b     D0
08002A92  670E      4772          beq.s     vsprintf_110
08002A94  4878 0030 4773          pea       48
08002A98  2F0A      4774          move.l    A2,-(A7)
08002A9A  4E93      4775          jsr       (A3)
08002A9C  504F      4776          addq.w    #8,A7
08002A9E  5286      4777          addq.l    #1,D6
08002AA0  60E6      4778          bra       vsprintf_108
                    4779   vsprintf_110:
08002AA2  2043      4780          move.l    D3,A0
08002AA4  4A10      4781          tst.b     (A0)
08002AA6  6700 0048 4782          beq       vsprintf_113
08002AAA  206E 000C 4783          move.l    12(A6),A0
08002AAE  1010      4784          move.b    (A0),D0
08002AB0  4880      4785          ext.w     D0
08002AB2  48C0      4786          ext.l     D0
08002AB4  0C80 0000 4787          cmp.l     #115,D0
08002AB8  0073      
08002ABA  670C      4788          beq.s     vsprintf_116
08002ABC  6E18      4789          bgt.s     vsprintf_119
08002ABE  0C80 0000 4790          cmp.l     #99,D0
08002AC2  0063      
08002AC4  6702      4791          beq.s     vsprintf_116
08002AC6  600E      4792          bra.s     vsprintf_119
                    4793   vsprintf_116:
08002AC8  2005      4794          move.l    D5,D0
08002ACA  5385      4795          subq.l    #1,D5
08002ACC  0C80 0000 4796          cmp.l     #0,D0
08002AD0  0000      
08002AD2  6E02      4797          bgt.s     vsprintf_119
08002AD4  6016      4798          bra.s     vsprintf_115
                    4799   vsprintf_119:
08002AD6  2043      4800          move.l    D3,A0
08002AD8  5283      4801          addq.l    #1,D3
08002ADA  1210      4802          move.b    (A0),D1
08002ADC  4881      4803          ext.w     D1
08002ADE  48C1      4804          ext.l     D1
08002AE0  2F01      4805          move.l    D1,-(A7)
08002AE2  2F0A      4806          move.l    A2,-(A7)
08002AE4  4E93      4807          jsr       (A3)
08002AE6  504F      4808          addq.w    #8,A7
08002AE8  5286      4809          addq.l    #1,D6
08002AEA  6002      4810          bra.s     vsprintf_112
                    4811   vsprintf_115:
08002AEC  6002      4812          bra.s     vsprintf_113
                    4813   vsprintf_112:
08002AEE  60B2      4814          bra       vsprintf_110
                    4815   vsprintf_113:
08002AF0  4A2E FFCD 4816          tst.b     -51(A6)
08002AF4  6700 0030 4817          beq       vsprintf_125
08002AF8  4884      4818          ext.w     D4
08002AFA  48C4      4819          ext.l     D4
08002AFC  2004      4820          move.l    D4,D0
08002AFE  D0AE FFFC 4821          add.l     -4(A6),D0
08002B02  D087      4822          add.l     D7,D0
08002B04  1D40 FFD1 4823          move.b    D0,-47(A6)
                    4824   vsprintf_123:
08002B08  102E FFD1 4825          move.b    -47(A6),D0
08002B0C  4880      4826          ext.w     D0
08002B0E  48C0      4827          ext.l     D0
08002B10  220D      4828          move.l    A5,D1
08002B12  534D      4829          subq.w    #1,A5
08002B14  B081      4830          cmp.l     D1,D0
08002B16  6C0E      4831          bge.s     vsprintf_125
08002B18  4878 0020 4832          pea       32
08002B1C  2F0A      4833          move.l    A2,-(A7)
08002B1E  4E93      4834          jsr       (A3)
08002B20  504F      4835          addq.w    #8,A7
08002B22  5386      4836          subq.l    #1,D6
08002B24  60E2      4837          bra       vsprintf_123
                    4838   vsprintf_125:
08002B26  6014      4839          bra.s     vsprintf_81
                    4840   vsprintf_80:
08002B28  206E 000C 4841          move.l    12(A6),A0
08002B2C  1210      4842          move.b    (A0),D1
08002B2E  4881      4843          ext.w     D1
08002B30  48C1      4844          ext.l     D1
08002B32  2F01      4845          move.l    D1,-(A7)
08002B34  2F0A      4846          move.l    A2,-(A7)
08002B36  4E93      4847          jsr       (A3)
08002B38  504F      4848          addq.w    #8,A7
08002B3A  5286      4849          addq.l    #1,D6
                    4850   vsprintf_81:
08002B3C  52AE 000C 4851          addq.l    #1,12(A6)
                    4852   vsprintf_2:
08002B40  6000 F9D6 4853          bra       vsprintf_1
                    4854   vsprintf_3:
08002B44  4A92      4855          tst.l     (A2)
08002B46  6710      4856          beq.s     vsprintf_126
08002B48  4201      4857          clr.b     D1
08002B4A  C2BC 0000 4858          and.l     #255,D1
08002B4E  00FF      
08002B50  2F01      4859          move.l    D1,-(A7)
08002B52  2F0A      4860          move.l    A2,-(A7)
08002B54  4E93      4861          jsr       (A3)
08002B56  504F      4862          addq.w    #8,A7
                    4863   vsprintf_126:
08002B58  2006      4864          move.l    D6,D0
08002B5A  4CDF 3CFC 4865          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08002B5E  4E5E      4866          unlk      A6
08002B60  4E75      4867          rts
                    4868   ULMUL:
08002B62  4E56 0000 4869          link    A6,#0
08002B66  48E7 C000 4870          movem.l D0/D1,-(A7)
08002B6A  222E 0008 4871          move.l  8(A6),D1
08002B6E  202E 000C 4872          move.l  12(A6),D0
08002B72  602C      4873          bra.s   lmul_3
                    4874   LMUL:
08002B74  4E56 0000 4875          link    A6,#0
08002B78  48E7 C000 4876          movem.l D0/D1,-(A7)
08002B7C  222E 0008 4877          move.l  8(A6),D1
08002B80  202E 000C 4878          move.l  12(A6),D0
08002B84  4A80      4879          tst.l   D0
08002B86  6A0A      4880          bpl.s   lmul_1
08002B88  4480      4881          neg.l   D0
08002B8A  4A81      4882          tst.l   D1
08002B8C  6A0A      4883          bpl.s   lmul_2
08002B8E  4481      4884          neg.l   D1
08002B90  600E      4885          bra.s   lmul_3
                    4886   lmul_1:
08002B92  4A81      4887          tst.l   D1
08002B94  6A0A      4888          bpl.s   lmul_3
08002B96  4481      4889          neg.l   D1
                    4890   lmul_2:
08002B98  6114      4891          bsr.s   domul
08002B9A  4481      4892          neg.l   D1
08002B9C  4080      4893          negx.l  D0
08002B9E  6002      4894          bra.s   lmul_4
                    4895   lmul_3:
08002BA0  610C      4896          bsr.s   domul
                    4897   lmul_4:
08002BA2  2D41 0008 4898          move.l  D1,8(A6)
08002BA6  4CDF 0003 4899          movem.l (A7)+,D0/D1
08002BAA  4E5E      4900          unlk    A6
08002BAC  4E75      4901          rts
                    4902   domul:
08002BAE  0C81 0000 4903          cmpi.l  #$FFFF,D1
08002BB2  FFFF      
08002BB4  620C      4904          bhi.s   domul_1
08002BB6  0C80 0000 4905          cmpi.l  #$FFFF,D0
08002BBA  FFFF      
08002BBC  620E      4906          bhi.s   domul_2
08002BBE  C2C0      4907          mulu    D0,D1
08002BC0  4E75      4908          rts
                    4909   domul_1:
08002BC2  0C80 0000 4910          cmpi.l  #$FFFF,D0
08002BC6  FFFF      
08002BC8  6218      4911          bhi.s   domul_4
08002BCA  6002      4912          bra.s   domul_3
                    4913   domul_2
08002BCC  C141      4914          exg     D0,D1
                    4915   domul_3:
08002BCE  2F02      4916          move.l  D2,-(A7)
08002BD0  2401      4917          move.l  D1,D2
08002BD2  4842      4918          swap    D2
08002BD4  C2C0      4919          mulu    D0,D1
08002BD6  C4C0      4920          mulu    D0,D2
08002BD8  4842      4921          swap    D2
08002BDA  4242      4922          clr.w   D2
08002BDC  D282      4923          add.l   D2,D1
08002BDE  241F      4924          move.l  (A7)+,D2
08002BE0  4E75      4925          rts
                    4926   domul_4:
08002BE2  48E7 3000 4927          movem.l D2/D3,-(A7)
08002BE6  2401      4928          move.l  D1,D2
08002BE8  2601      4929          move.l  D1,D3
08002BEA  C2C0      4930          mulu    D0,D1
08002BEC  4842      4931          swap    D2
08002BEE  C4C0      4932          mulu    D0,D2
08002BF0  4840      4933          swap    D0
08002BF2  C6C0      4934          mulu    D0,D3
08002BF4  D483      4935          add.l   D3,D2
08002BF6  4842      4936          swap    D2
08002BF8  4242      4937          clr.w   D2
08002BFA  D282      4938          add.l   D2,D1
08002BFC  4CDF 000C 4939          movem.l (A7)+,D2/D3
08002C00  4E75      4940          rts
                    4941   _gets:
08002C02  4E56 0000 4942          link      A6,#0
08002C06  48E7 3820 4943          movem.l   D2/D3/D4/A2,-(A7)
08002C0A  45F9 0800 4944          lea       _putch,A2
08002C0E  2E62      
08002C10  282E 0008 4945          move.l    8(A6),D4
08002C14  2404      4946          move.l    D4,D2
                    4947   gets_1:
08002C16  6100 027A 4948          bsr       _getch
08002C1A  2600      4949          move.l    D0,D3
08002C1C  0C80 0000 4950          cmp.l     #10,D0
08002C20  000A      
08002C22  6700 003C 4951          beq       gets_3
08002C26  0C83 0000 4952          cmp.l     #8,D3
08002C2A  0008      
08002C2C  6712      4953          beq.s     gets_4
08002C2E  2042      4954          move.l    D2,A0
08002C30  5282      4955          addq.l    #1,D2
08002C32  1083      4956          move.b    D3,(A0)
08002C34  4883      4957          ext.w     D3
08002C36  48C3      4958          ext.l     D3
08002C38  2F03      4959          move.l    D3,-(A7)
08002C3A  4E92      4960          jsr       (A2)
08002C3C  584F      4961          addq.w    #4,A7
08002C3E  601E      4962          bra.s     gets_6
                    4963   gets_4:
08002C40  B484      4964          cmp.l     D4,D2
08002C42  631A      4965          bls.s     gets_6
08002C44  4878 0008 4966          pea       8
08002C48  4E92      4967          jsr       (A2)
08002C4A  584F      4968          addq.w    #4,A7
08002C4C  4878 0020 4969          pea       32
08002C50  4E92      4970          jsr       (A2)
08002C52  584F      4971          addq.w    #4,A7
08002C54  4878 0008 4972          pea       8
08002C58  4E92      4973          jsr       (A2)
08002C5A  584F      4974          addq.w    #4,A7
08002C5C  5382      4975          subq.l    #1,D2
                    4976   gets_6:
08002C5E  60B6      4977          bra       gets_1
                    4978   gets_3:
08002C60  4878 000A 4979          pea       10
08002C64  4E92      4980          jsr       (A2)
08002C66  584F      4981          addq.w    #4,A7
08002C68  2042      4982          move.l    D2,A0
08002C6A  4210      4983          clr.b     (A0)
08002C6C  2004      4984          move.l    D4,D0
08002C6E  4CDF 041C 4985          movem.l   (A7)+,D2/D3/D4/A2
08002C72  4E5E      4986          unlk      A6
08002C74  4E75      4987          rts
                    4988   _tolower:
08002C76  4E56 0000 4989          link      A6,#0
08002C7A  48E7 2000 4990          movem.l   D2,-(A7)
08002C7E  242E 0008 4991          move.l    8(A6),D2
08002C82  0C82 0000 4992          cmp.l     #65,D2
08002C86  0041      
08002C88  6D0E      4993          blt.s     tolower_1
08002C8A  0C82 0000 4994          cmp.l     #90,D2
08002C8E  005A      
08002C90  6E06      4995          bgt.s     tolower_1
08002C92  84BC 0000 4996          or.l      #32,D2
08002C96  0020      
                    4997   tolower_1:
08002C98  2002      4998          move.l    D2,D0
08002C9A  4CDF 0004 4999          movem.l   (A7)+,D2
08002C9E  4E5E      5000          unlk      A6
08002CA0  4E75      5001          rts
                    5002   _strcat:
08002CA2  206F 0004 5003          move.l    (4,A7),A0	
08002CA6  226F 0008 5004          move.l    (8,A7),A1	
08002CAA  2008      5005          move.l    A0,D0		
                    5006   strcat_0:
08002CAC  4A18      5007          tst.b     (A0)+
08002CAE  66FC      5008          bne       strcat_0
08002CB0  5348      5009          subq      #1,A0
                    5010   strcat_1:
08002CB2  10D9      5011          move.b    (A1)+,(A0)+
08002CB4  66FC      5012          bne       strcat_1
08002CB6  4E75      5013          rts
                    5014   _toupper:
08002CB8  4E56 0000 5015          link      A6,#0
08002CBC  48E7 2000 5016          movem.l   D2,-(A7)
08002CC0  242E 0008 5017          move.l    8(A6),D2
08002CC4  0C82 0000 5018          cmp.l     #97,D2
08002CC8  0061      
08002CCA  6D0E      5019          blt.s     toupper_1
08002CCC  0C82 0000 5020          cmp.l     #122,D2
08002CD0  007A      
08002CD2  6E06      5021          bgt.s     toupper_1
08002CD4  C4BC 0000 5022          and.l     #95,D2
08002CD8  005F      
                    5023   toupper_1:
08002CDA  2002      5024          move.l    D2,D0
08002CDC  4CDF 0004 5025          movem.l   (A7)+,D2
08002CE0  4E5E      5026          unlk      A6
08002CE2  4E75      5027          rts
                    5028   _ungetch:
08002CE4  4E56 0000 5029          link      A6,#0
08002CE8  23EE 0008 5030          move.l    8(A6),__ungetbuf
08002CEC  0800 385A 
08002CF0  202E 0008 5031          move.l    8(A6),D0
08002CF4  4E5E      5032          unlk      A6
08002CF6  4E75      5033          rts
                    5034   @itoa_convert:
08002CF8  4E56 0000 5035          link      A6,#0
08002CFC  48E7 3C00 5036          movem.l   D2/D3/D4/D5,-(A7)
08002D00  242E 0008 5037          move.l    8(A6),D2
08002D04  262E 0010 5038          move.l    16(A6),D3
08002D08  2A2E 000C 5039          move.l    12(A6),D5
08002D0C  2F05      5040          move.l    D5,-(A7)
08002D0E  2F03      5041          move.l    D3,-(A7)
08002D10  6100 ED60 5042          bsr       ULDIV
08002D14  202F 0004 5043          move.l    4(A7),D0
08002D18  504F      5044          addq.w    #8,A7
08002D1A  2800      5045          move.l    D0,D4
08002D1C  BA83      5046          cmp.l     D3,D5
08002D1E  651A      5047          blo.s     @itoa_convert_1
08002D20  2F03      5048          move.l    D3,-(A7)
08002D22  2F05      5049          move.l    D5,-(A7)
08002D24  2F03      5050          move.l    D3,-(A7)
08002D26  6100 ED4A 5051          bsr       ULDIV
08002D2A  2217      5052          move.l    (A7),D1
08002D2C  504F      5053          addq.w    #8,A7
08002D2E  2F01      5054          move.l    D1,-(A7)
08002D30  2F02      5055          move.l    D2,-(A7)
08002D32  61C4      5056          bsr       @itoa_convert
08002D34  DEFC 000C 5057          add.w     #12,A7
08002D38  2400      5058          move.l    D0,D2
                    5059   @itoa_convert_1:
08002D3A  0C84 0000 5060          cmp.l     #9,D4
08002D3E  0009      
08002D40  6E0A      5061          bgt.s     @itoa_convert_3
08002D42  2004      5062          move.l    D4,D0
08002D44  0680 0000 5063          add.l     #48,D0
08002D48  0030      
08002D4A  600E      5064          bra.s     @itoa_convert_4
                    5065   @itoa_convert_3:
08002D4C  2004      5066          move.l    D4,D0
08002D4E  0680 0000 5067          add.l     #97,D0
08002D52  0061      
08002D54  0480 0000 5068          sub.l     #10,D0
08002D58  000A      
                    5069   @itoa_convert_4:
08002D5A  2042      5070          move.l    D2,A0
08002D5C  1080      5071          move.b    D0,(A0)
08002D5E  2002      5072          move.l    D2,D0
08002D60  5280      5073          addq.l    #1,D0
08002D62  4CDF 003C 5074          movem.l   (A7)+,D2/D3/D4/D5
08002D66  4E5E      5075          unlk      A6
08002D68  4E75      5076          rts
                    5077   _ltoa:
08002D6A  4E56 0000 5078          link      A6,#0
08002D6E  48E7 3C00 5079          movem.l   D2/D3/D4/D5,-(A7)
08002D72  242E 0008 5080          move.l    8(A6),D2
08002D76  262E 000C 5081          move.l    12(A6),D3
08002D7A  2A2E 0010 5082          move.l    16(A6),D5
08002D7E  2803      5083          move.l    D3,D4
08002D80  0C85 0000 5084          cmp.l     #2,D5
08002D84  0002      
08002D86  6D08      5085          blt.s     ltoa_3
08002D88  0C85 0000 5086          cmp.l     #36,D5
08002D8C  0024      
08002D8E  6F06      5087          ble.s     ltoa_1
                    5088   ltoa_3:
08002D90  2003      5089          move.l    D3,D0
08002D92  6000 0052 5090          bra       ltoa_4
                    5091   ltoa_1:
08002D96  0C85 0000 5092          cmp.l     #10,D5
08002D9A  000A      
08002D9C  6600 0032 5093          bne       ltoa_5
08002DA0  0C82 0000 5094          cmp.l     #0,D2
08002DA4  0000      
08002DA6  6C28      5095          bge.s     ltoa_5
08002DA8  2002      5096          move.l    D2,D0
08002DAA  4480      5097          neg.l     D0
08002DAC  2400      5098          move.l    D0,D2
08002DAE  0C82 0000 5099          cmp.l     #0,D2
08002DB2  0000      
08002DB4  6C12      5100          bge.s     ltoa_7
08002DB6  4879 0800 5101          pea       @itoa_1
08002DBA  396E      
08002DBC  2F03      5102          move.l    D3,-(A7)
08002DBE  6100 010E 5103          bsr       _strcpy
08002DC2  504F      5104          addq.w    #8,A7
08002DC4  2003      5105          move.l    D3,D0
08002DC6  601E      5106          bra.s     ltoa_4
                    5107   ltoa_7:
08002DC8  2044      5108          move.l    D4,A0
08002DCA  5284      5109          addq.l    #1,D4
08002DCC  10BC 002D 5110          move.b    #45,(A0)
                    5111   ltoa_5:
08002DD0  2F05      5112          move.l    D5,-(A7)
08002DD2  2F02      5113          move.l    D2,-(A7)
08002DD4  2F04      5114          move.l    D4,-(A7)
08002DD6  6100 FF20 5115          bsr       @itoa_convert
08002DDA  DEFC 000C 5116          add.w     #12,A7
08002DDE  2800      5117          move.l    D0,D4
08002DE0  2044      5118          move.l    D4,A0
08002DE2  4210      5119          clr.b     (A0)
08002DE4  2003      5120          move.l    D3,D0
                    5121   ltoa_4:
08002DE6  4CDF 003C 5122          movem.l   (A7)+,D2/D3/D4/D5
08002DEA  4E5E      5123          unlk      A6
08002DEC  4E75      5124          rts
                    5125   _ultoa:
08002DEE  4E56 0000 5126          link      A6,#0
08002DF2  48E7 3800 5127          movem.l   D2/D3/D4,-(A7)
08002DF6  262E 0010 5128          move.l    16(A6),D3
08002DFA  282E 000C 5129          move.l    12(A6),D4
08002DFE  2404      5130          move.l    D4,D2
08002E00  0C83 0000 5131          cmp.l     #2,D3
08002E04  0002      
08002E06  6D08      5132          blt.s     ultoa_3
08002E08  0C83 0000 5133          cmp.l     #36,D3
08002E0C  0024      
08002E0E  6F04      5134          ble.s     ultoa_1
                    5135   ultoa_3:
08002E10  2004      5136          move.l    D4,D0
08002E12  6018      5137          bra.s     ultoa_4
                    5138   ultoa_1:
08002E14  2F03      5139          move.l    D3,-(A7)
08002E16  2F2E 0008 5140          move.l    8(A6),-(A7)
08002E1A  2F02      5141          move.l    D2,-(A7)
08002E1C  6100 FEDA 5142          bsr       @itoa_convert
08002E20  DEFC 000C 5143          add.w     #12,A7
08002E24  2400      5144          move.l    D0,D2
08002E26  2042      5145          move.l    D2,A0
08002E28  4210      5146          clr.b     (A0)
08002E2A  2004      5147          move.l    D4,D0
                    5148   ultoa_4:
08002E2C  4CDF 001C 5149          movem.l   (A7)+,D2/D3/D4
08002E30  4E5E      5150          unlk      A6
08002E32  4E75      5151          rts
                    5152   _itoa:
08002E34  4E56 0000 5153          link      A6,#0
08002E38  2F2E 0010 5154          move.l    16(A6),-(A7)
08002E3C  2F2E 000C 5155          move.l    12(A6),-(A7)
08002E40  2F2E 0008 5156          move.l    8(A6),-(A7)
08002E44  6100 FF24 5157          bsr       _ltoa
08002E48  DEFC 000C 5158          add.w     #12,A7
08002E4C  4E5E      5159          unlk      A6
08002E4E  4E75      5160          rts
                    5161   _strlen:
08002E50  206F 0004 5162          move.l    (4,A7),A0
08002E54  2248      5163          move.l    A0,A1
                    5164   strlen_1:
08002E56  4A19      5165          tst.b     (A1)+
08002E58  66FC      5166          bne       strlen_1
08002E5A  2009      5167          move.l    A1,D0
08002E5C  9088      5168          sub.l     A0,D0
08002E5E  5380      5169          subq.l    #1,D0
08002E60  4E75      5170          rts
                    5171   _putch:
08002E62  4E56 0000 5172          link      A6,#0
08002E66  48E7 2000 5173          movem.l   D2,-(A7)
08002E6A  242E 0008 5174          move.l    8(A6),D2
08002E6E  0C82 0000 5175          cmp.l     #10,D2
08002E72  000A      
08002E74  660A      5176          bne.s     putch_1
08002E76  4878 000D 5177          pea       13
08002E7A  6100 D27A 5178          bsr       __putch
08002E7E  584F      5179          addq.w    #4,A7
                    5180   putch_1:
08002E80  2F02      5181          move.l    D2,-(A7)
08002E82  6100 D272 5182          bsr       __putch
08002E86  584F      5183          addq.w    #4,A7
08002E88  2002      5184          move.l    D2,D0
08002E8A  4CDF 0004 5185          movem.l   (A7)+,D2
08002E8E  4E5E      5186          unlk      A6
08002E90  4E75      5187          rts
                    5188   _getch:
08002E92  48E7 2000 5189          movem.l   D2,-(A7)
08002E96  2439 0800 5190          move.l    __ungetbuf,D2
08002E9A  385A      
08002E9C  2039 0800 5191          move.l    __ungetbuf,D0
08002EA0  385A      
08002EA2  0C80 FFFF 5192          cmp.l     #-1,D0
08002EA6  FFFF      
08002EA8  670C      5193          beq.s     getch_1
08002EAA  23FC FFFF 5194          move.l    #-1,__ungetbuf
08002EAE  FFFF 0800 
08002EB2  385A      
08002EB4  6010      5195          bra.s     getch_3
                    5196   getch_1:
08002EB6  6100 D26C 5197          bsr       __getch
08002EBA  2400      5198          move.l    D0,D2
08002EBC  0C80 0000 5199          cmp.l     #13,D0
08002EC0  000D      
08002EC2  6602      5200          bne.s     getch_3
08002EC4  740A      5201          moveq     #10,D2
                    5202   getch_3:
08002EC6  2002      5203          move.l    D2,D0
08002EC8  4CDF 0004 5204          movem.l   (A7)+,D2
08002ECC  4E75      5205          rts
                    5206   _strcpy:
08002ECE  206F 0004 5207          move.l    (4,A7),A0
08002ED2  226F 0008 5208          move.l    (8,A7),A1
08002ED6  2008      5209          move.l    A0,D0
                    5210   strcpy_1:
08002ED8  10D9      5211          move.b    (A1)+,(A0)+
08002EDA  66FC      5212          bne       strcpy_1
08002EDC  4E75      5213          rts
                    5214          section   const
08002EDE            5215                   align
                    5216   
                    5217   
                    5218   @m68kus~1_1:
08002EDE  0D0A 456E 5219          dc.b      13,10,69,110,116,101,114,32,52,32,98,121,116
08002EE2  7465 7220 
08002EE6  3420 6279 
08002EEA  74        
08002EEB  6573 206F 5220          dc.b      101,115,32,111,102,32,72,101,120,105,100,101
08002EEF  6620 4865 
08002EF3  7869 6465 
08002EF7  6369 6D61 5221          dc.b      99,105,109,97,108,32,116,101,115,116,32,100
08002EFB  6C20 7465 
08002EFF  7374 2064 
08002F03  6174 612E 5222          dc.b      97,116,97,46,0
08002F07  00        
                    5223   @m68kus~1_2:
08002F08  0D0A 456E 5224          dc.b      13,10,69,110,116,101,114,32,70,105,114,115,116
08002F0C  7465 7220 
08002F10  4669 7273 
08002F14  74        
08002F15  2062 7974 5225          dc.b      32,98,121,116,101,58,32,0
08002F19  653A 2000 
                    5226   @m68kus~1_3:
08002F1E  2578 00   5227          dc.b      37,120,0
                    5228   @m68kus~1_4:
08002F22  456E 7465 5229          dc.b      69,110,116,101,114,32,83,101,99,111,110,100
08002F26  7220 5365 
08002F2A  636F 6E64 
08002F2E  2062 7974 5230          dc.b      32,98,121,116,101,58,32,0
08002F32  653A 2000 
                    5231   @m68kus~1_5:
08002F36  456E 7465 5232          dc.b      69,110,116,101,114,32,84,104,105,114,100,32
08002F3A  7220 5468 
08002F3E  6972 6420 
08002F42  6279 7465 5233          dc.b      98,121,116,101,58,32,0
08002F46  3A20 00   
                    5234   @m68kus~1_6:
08002F4A  456E 7465 5235          dc.b      69,110,116,101,114,32,70,111,117,114,116,104
08002F4E  7220 466F 
08002F52  7572 7468 
08002F56  2062 7974 5236          dc.b      32,98,121,116,101,58,32,0
08002F5A  653A 2000 
                    5237   @m68kus~1_7:
08002F5E  5661 6C69 5238          dc.b      86,97,108,105,100,32,97,100,100,114,101,115
08002F62  6420 6164 
08002F66  6472 6573 
08002F6A  7365 7320 5239          dc.b      115,101,115,32,102,111,114,32,116,104,105,115
08002F6E  666F 7220 
08002F72  7468 6973 
08002F76  2070 726F 5240          dc.b      32,112,114,111,103,114,97,109,32,97,114,101
08002F7A  6772 616D 
08002F7E  2061 7265 
08002F82  3A20 2430 5241          dc.b      58,32,36,48,57,48,48,32,48,48,48,48,32,32,45
08002F86  3930 3020 
08002F8A  3030 3030 
08002F8E  2020 2D   
08002F91  2024 3039 5242          dc.b      32,36,48,57,55,70,32,70,70,70,70,0
08002F95  3746 2046 
08002F99  4646 4600 
                    5243   @m68kus~1_8:
08002F9E  0D0A 456E 5244          dc.b      13,10,69,110,116,101,114,32,83,116,97,114,116
08002FA2  7465 7220 
08002FA6  5374 6172 
08002FAA  74        
08002FAB  2041 6464 5245          dc.b      32,65,100,100,114,101,115,115,58,32,0
08002FAF  7265 7373 
08002FB3  3A20 00   
                    5246   @m68kus~1_9:
08002FB6  456E 7465 5247          dc.b      69,110,116,101,114,32,69,110,100,32,65,100,100
08002FBA  7220 456E 
08002FBE  6420 4164 
08002FC2  64        
08002FC3  7265 7373 5248          dc.b      114,101,115,115,58,32,0
08002FC7  3A20 00   
                    5249   @m68kus~1_10:
08002FCA  4552 524F 5250          dc.b      69,82,82,79,82,46,32,80,108,101,97,115,101,32
08002FCE  522E 2050 
08002FD2  6C65 6173 
08002FD6  6520      
08002FD8  456E 7465 5251          dc.b      69,110,116,101,114,32,97,32,118,97,108,105,100
08002FDC  7220 6120 
08002FE0  7661 6C69 
08002FE4  64        
08002FE5  2053 7461 5252          dc.b      32,83,116,97,114,116,32,65,100,100,114,101,115
08002FE9  7274 2041 
08002FED  6464 7265 
08002FF1  73        
08002FF2  733A 2000 5253          dc.b      115,58,32,0
                    5254   @m68kus~1_11:
08002FF6  0D0A 4552 5255          dc.b      13,10,69,82,82,79,82,46,32,80,108,101,97,115
08002FFA  524F 522E 
08002FFE  2050 6C65 
08003002  6173      
08003004  6520 456E 5256          dc.b      101,32,69,110,116,101,114,32,97,32,118,97,108
08003008  7465 7220 
0800300C  6120 7661 
08003010  6C        
08003011  6964 2045 5257          dc.b      105,100,32,69,110,100,32,65,100,100,114,101
08003015  6E64 2041 
08003019  6464 7265 
0800301D  7373 3A20 5258          dc.b      115,115,58,32,0
08003021  00        
                    5259   @m68kus~1_12:
08003022  0D0A 4552 5260          dc.b      13,10,69,82,82,79,82,46,32,80,108,101,97,115
08003026  524F 522E 
0800302A  2050 6C65 
0800302E  6173      
08003030  6520 656E 5261          dc.b      101,32,101,110,116,101,114,32,97,110,32,69,110
08003034  7465 7220 
08003038  616E 2045 
0800303C  6E        
0800303D  6420 4164 5262          dc.b      100,32,65,100,100,114,101,115,115,32,108,97
08003041  6472 6573 
08003045  7320 6C61 
08003049  7267 6572 5263          dc.b      114,103,101,114,32,116,104,97,110,32,116,104
0800304D  2074 6861 
08003051  6E20 7468 
08003055  6520 5374 5264          dc.b      101,32,83,116,97,114,116,32,65,100,100,114,101
08003059  6172 7420 
0800305D  4164 6472 
08003061  65        
08003062  7373 00   5265          dc.b      115,115,0
                    5266   @m68kus~1_13:
08003066  0D0A 456E 5267          dc.b      13,10,69,110,116,101,114,32,69,110,100,32,65
0800306A  7465 7220 
0800306E  456E 6420 
08003072  41        
08003073  6464 7265 5268          dc.b      100,100,114,101,115,115,58,32,0
08003077  7373 3A20 
0800307B  00        
                    5269   @m68kus~1_14:
0800307C  0D0A 4669 5270          dc.b      13,10,70,105,108,108,105,110,103,32,65,100,100
08003080  6C6C 696E 
08003084  6720 4164 
08003088  64        
08003089  7265 7373 5271          dc.b      114,101,115,115,101,115,32,91,36,37,48,56,88
0800308D  6573 205B 
08003091  2425 3038 
08003095  58        
08003096  202D 2024 5272          dc.b      32,45,32,36,37,48,56,88,93,32,119,105,116,104
0800309A  2530 3858 
0800309E  5D20 7769 
080030A2  7468      
080030A4  2074 6573 5273          dc.b      32,116,101,115,116,32,100,97,116,97,0
080030A8  7420 6461 
080030AC  7461 00   
                    5274   @m68kus~1_15:
080030B0  0D0A 4164 5275          dc.b      13,10,65,100,100,114,101,115,115,32,36,37,48
080030B4  6472 6573 
080030B8  7320 2425 
080030BC  30        
080030BD  3858 2062 5276          dc.b      56,88,32,98,101,105,110,103,32,102,105,108,108
080030C1  6569 6E67 
080030C5  2066 696C 
080030C9  6C        
080030CA  6564 2077 5277          dc.b      101,100,32,119,105,116,104,32,36,37,48,50,88
080030CE  6974 6820 
080030D2  2425 3032 
080030D6  58        
080030D7  00        5278          dc.b      0
                    5279   @m68kus~1_16:
080030D8  0D0A 5772 5280          dc.b      13,10,87,114,105,116,105,110,103,32,116,111
080030DC  6974 696E 
080030E0  6720 746F 
080030E4  206D 656D 5281          dc.b      32,109,101,109,111,114,121,32,67,111,109,112
080030E8  6F72 7920 
080030EC  436F 6D70 
080030F0  6C65 7465 5282          dc.b      108,101,116,101,46,13,10,69,110,116,101,114
080030F4  2E0D 0A45 
080030F8  6E74 6572 
080030FC  2027 3127 5283          dc.b      32,39,49,39,32,116,111,32,114,101,97,100,32
08003100  2074 6F20 
08003104  7265 6164 
08003108  20        
08003109  6261 636B 5284          dc.b      98,97,99,107,32,116,104,101,32,109,101,109,111
0800310D  2074 6865 
08003111  206D 656D 
08003115  6F        
08003116  7279 2E20 5285          dc.b      114,121,46,32,69,110,116,101,114,32,39,48,39
0800311A  456E 7465 
0800311E  7220 2730 
08003122  27        
08003123  2074 6F20 5286          dc.b      32,116,111,32,101,120,105,116,32,112,114,111
08003127  6578 6974 
0800312B  2070 726F 
0800312F  6772 616D 5287          dc.b      103,114,97,109,46,0
08003133  2E00      
                    5288   @m68kus~1_17:
08003136  0D0A 2425 5289          dc.b      13,10,36,37,48,50,88,32,82,101,97,100,32,102
0800313A  3032 5820 
0800313E  5265 6164 
08003142  2066      
08003144  726F 6D20 5290          dc.b      114,111,109,32,97,100,100,114,101,115,115,32
08003148  6164 6472 
0800314C  6573 7320 
08003150  2425 3038 5291          dc.b      36,37,48,56,88,0
08003154  5800      
                    5292   @m68kus~1_18:
08003156  0D0A 5072 5293          dc.b      13,10,80,114,111,103,114,97,109,32,69,110,100
0800315A  6F67 7261 
0800315E  6D20 456E 
08003162  64        
08003163  6564 00   5294          dc.b      101,100,0
                    5295   @m68kus~1_19:
08003166  0D0A 456E 5296          dc.b      13,10,69,110,116,101,114,32,52,32,119,111,114
0800316A  7465 7220 
0800316E  3420 776F 
08003172  72        
08003173  6473 2028 5297          dc.b      100,115,32,40,50,32,98,121,116,101,115,41,32
08003177  3220 6279 
0800317B  7465 7329 
0800317F  20        
08003180  6F66 2048 5298          dc.b      111,102,32,72,101,120,105,100,101,99,105,109
08003184  6578 6964 
08003188  6563 696D 
0800318C  616C 2074 5299          dc.b      97,108,32,116,101,115,116,32,100,97,116,97,46
08003190  6573 7420 
08003194  6461 7461 
08003198  2E        
08003199  00        5300          dc.b      0
                    5301   @m68kus~1_20:
0800319A  0D0A 456E 5302          dc.b      13,10,69,110,116,101,114,32,70,105,114,115,116
0800319E  7465 7220 
080031A2  4669 7273 
080031A6  74        
080031A7  2077 6F72 5303          dc.b      32,119,111,114,100,58,32,0
080031AB  643A 2000 
                    5304   @m68kus~1_21:
080031B0  456E 7465 5305          dc.b      69,110,116,101,114,32,83,101,99,111,110,100
080031B4  7220 5365 
080031B8  636F 6E64 
080031BC  2077 6F72 5306          dc.b      32,119,111,114,100,58,32,0
080031C0  643A 2000 
                    5307   @m68kus~1_22:
080031C4  456E 7465 5308          dc.b      69,110,116,101,114,32,84,104,105,114,100,32
080031C8  7220 5468 
080031CC  6972 6420 
080031D0  776F 7264 5309          dc.b      119,111,114,100,58,32,0
080031D4  3A20 00   
                    5310   @m68kus~1_23:
080031D8  456E 7465 5311          dc.b      69,110,116,101,114,32,70,111,117,114,116,104
080031DC  7220 466F 
080031E0  7572 7468 
080031E4  2077 6F72 5312          dc.b      32,119,111,114,100,58,32,0
080031E8  643A 2000 
                    5313   @m68kus~1_24:
080031EC  5661 6C69 5314          dc.b      86,97,108,105,100,32,97,100,100,114,101,115
080031F0  6420 6164 
080031F4  6472 6573 
080031F8  7365 7320 5315          dc.b      115,101,115,32,102,111,114,32,116,104,105,115
080031FC  666F 7220 
08003200  7468 6973 
08003204  2070 726F 5316          dc.b      32,112,114,111,103,114,97,109,32,97,114,101
08003208  6772 616D 
0800320C  2061 7265 
08003210  3A20 2430 5317          dc.b      58,32,36,48,57,48,48,32,48,48,48,48,32,45,32
08003214  3930 3020 
08003218  3030 3030 
0800321C  202D 20   
0800321F  2430 3937 5318          dc.b      36,48,57,55,70,32,70,70,70,70,0
08003223  4620 4646 
08003227  4646 00   
                    5319   @m68kus~1_25:
0800322A  0D0A 466F 5320          dc.b      13,10,70,111,114,32,116,104,105,115,32,116,101
0800322E  7220 7468 
08003232  6973 2074 
08003236  65        
08003237  7374 2C20 5321          dc.b      115,116,44,32,116,104,101,32,115,116,97,114
0800323B  7468 6520 
0800323F  7374 6172 
08003243  7420 616E 5322          dc.b      116,32,97,110,100,32,101,110,100,32,97,100,100
08003247  6420 656E 
0800324B  6420 6164 
0800324F  64        
08003250  7265 7373 5323          dc.b      114,101,115,115,101,115,32,109,117,115,116,32
08003254  6573 206D 
08003258  7573 7420 
0800325C  616C 6967 5324          dc.b      97,108,105,103,110,32,116,111,32,97,110,32,101
08003260  6E20 746F 
08003264  2061 6E20 
08003268  65        
08003269  7665 6E20 5325          dc.b      118,101,110,32,97,100,100,114,101,115,115,0
0800326D  6164 6472 
08003271  6573 7300 
                    5326   @m68kus~1_26:
08003276  4552 524F 5327          dc.b      69,82,82,79,82,46,32,80,108,101,97,115,101,32
0800327A  522E 2050 
0800327E  6C65 6173 
08003282  6520      
08003284  456E 7465 5328          dc.b      69,110,116,101,114,32,97,32,118,97,108,105,100
08003288  7220 6120 
0800328C  7661 6C69 
08003290  64        
08003291  2045 6E64 5329          dc.b      32,69,110,100,32,65,100,100,114,101,115,115
08003295  2041 6464 
08003299  7265 7373 
0800329D  3A20 00   5330          dc.b      58,32,0
                    5331   @m68kus~1_27:
080032A0  4552 524F 5332          dc.b      69,82,82,79,82,46,32,80,108,101,97,115,101,32
080032A4  522E 2050 
080032A8  6C65 6173 
080032AC  6520      
080032AE  656E 7465 5333          dc.b      101,110,116,101,114,32,97,110,32,69,110,100
080032B2  7220 616E 
080032B6  2045 6E64 
080032BA  2041 6464 5334          dc.b      32,65,100,100,114,101,115,115,32,108,97,114
080032BE  7265 7373 
080032C2  206C 6172 
080032C6  6765 7220 5335          dc.b      103,101,114,32,116,104,97,110,32,116,104,101
080032CA  7468 616E 
080032CE  2074 6865 
080032D2  2053 7461 5336          dc.b      32,83,116,97,114,116,32,65,100,100,114,101,115
080032D6  7274 2041 
080032DA  6464 7265 
080032DE  73        
080032DF  7300      5337          dc.b      115,0
                    5338   @m68kus~1_28:
080032E2  0D0A 4164 5339          dc.b      13,10,65,100,100,114,101,115,115,101,115,32
080032E6  6472 6573 
080032EA  7365 7320 
080032EE  2425 3038 5340          dc.b      36,37,48,56,88,32,45,32,36,37,48,56,88,32,98
080032F2  5820 2D20 
080032F6  2425 3038 
080032FA  5820 62   
080032FD  6569 6E67 5341          dc.b      101,105,110,103,32,102,105,108,108,101,100,32
08003301  2066 696C 
08003305  6C65 6420 
08003309  7769 7468 5342          dc.b      119,105,116,104,32,36,37,48,52,88,0
0800330D  2024 2530 
08003311  3458 00   
                    5343   @m68kus~1_29:
08003314  0D0A 5661 5344          dc.b      13,10,86,97,108,117,101,115,32,36,37,48,50,88
08003318  6C75 6573 
0800331C  2024 2530 
08003320  3258      
08003322  2024 2530 5345          dc.b      32,36,37,48,50,88,32,102,111,117,110,100,32
08003326  3258 2066 
0800332A  6F75 6E64 
0800332E  20        
0800332F  6174 2061 5346          dc.b      97,116,32,97,100,100,114,101,115,115,101,115
08003333  6464 7265 
08003337  7373 6573 
0800333B  2024 2530 5347          dc.b      32,36,37,48,56,88,32,45,32,36,37,48,56,88,0
0800333F  3858 202D 
08003343  2024 2530 
08003347  3858 00   
                    5348   @m68kus~1_30:
0800334A  0D0A 456E 5349          dc.b      13,10,69,110,116,101,114,32,52,32,108,111,110
0800334E  7465 7220 
08003352  3420 6C6F 
08003356  6E        
08003357  6720 776F 5350          dc.b      103,32,119,111,114,100,115,32,40,52,32,98,121
0800335B  7264 7320 
0800335F  2834 2062 
08003363  79        
08003364  7465 7329 5351          dc.b      116,101,115,41,32,111,102,32,72,101,120,105
08003368  206F 6620 
0800336C  4865 7869 
08003370  6465 6369 5352          dc.b      100,101,99,105,109,97,108,32,116,101,115,116
08003374  6D61 6C20 
08003378  7465 7374 
0800337C  2064 6174 5353          dc.b      32,100,97,116,97,46,0
08003380  612E 00   
                    5354   @m68kus~1_31:
08003384  0D0A 456E 5355          dc.b      13,10,69,110,116,101,114,32,70,105,114,115,116
08003388  7465 7220 
0800338C  4669 7273 
08003390  74        
08003391  206C 6F6E 5356          dc.b      32,108,111,110,103,32,119,111,114,100,58,32
08003395  6720 776F 
08003399  7264 3A20 
0800339D  00        5357          dc.b      0
                    5358   @m68kus~1_32:
0800339E  456E 7465 5359          dc.b      69,110,116,101,114,32,83,101,99,111,110,100
080033A2  7220 5365 
080033A6  636F 6E64 
080033AA  206C 6F6E 5360          dc.b      32,108,111,110,103,32,119,111,114,100,58,32
080033AE  6720 776F 
080033B2  7264 3A20 
080033B6  00        5361          dc.b      0
                    5362   @m68kus~1_33:
080033B8  456E 7465 5363          dc.b      69,110,116,101,114,32,84,104,105,114,100,32
080033BC  7220 5468 
080033C0  6972 6420 
080033C4  6C6F 6E67 5364          dc.b      108,111,110,103,32,119,111,114,100,58,32,0
080033C8  2077 6F72 
080033CC  643A 2000 
                    5365   @m68kus~1_34:
080033D0  456E 7465 5366          dc.b      69,110,116,101,114,32,70,111,117,114,116,104
080033D4  7220 466F 
080033D8  7572 7468 
080033DC  206C 6F6E 5367          dc.b      32,108,111,110,103,32,119,111,114,100,58,32
080033E0  6720 776F 
080033E4  7264 3A20 
080033E8  00        5368          dc.b      0
                    5369   @m68kus~1_35:
080033EA  0D0A 4164 5370          dc.b      13,10,65,100,100,114,101,115,115,101,115,32
080033EE  6472 6573 
080033F2  7365 7320 
080033F6  2425 3038 5371          dc.b      36,37,48,56,88,32,45,32,36,37,48,56,88,32,98
080033FA  5820 2D20 
080033FE  2425 3038 
08003402  5820 62   
08003405  6569 6E67 5372          dc.b      101,105,110,103,32,102,105,108,108,101,100,32
08003409  2066 696C 
0800340D  6C65 6420 
08003411  7769 7468 5373          dc.b      119,105,116,104,32,36,37,48,56,88,0
08003415  2024 2530 
08003419  3858 00   
                    5374   @m68kus~1_36:
0800341C  0D0A 5661 5375          dc.b      13,10,86,97,108,117,101,115,32,36,37,48,50,88
08003420  6C75 6573 
08003424  2024 2530 
08003428  3258      
0800342A  2024 2530 5376          dc.b      32,36,37,48,50,88,32,36,37,48,50,88,32,36,37
0800342E  3258 2024 
08003432  2530 3258 
08003436  2024 25   
08003439  3032 5820 5377          dc.b      48,50,88,32,102,111,117,110,100,32,97,116,32
0800343D  666F 756E 
08003441  6420 6174 
08003445  20        
08003446  6164 6472 5378          dc.b      97,100,100,114,101,115,115,101,115,32,36,37
0800344A  6573 7365 
0800344E  7320 2425 
08003452  3038 5820 5379          dc.b      48,56,88,32,45,32,36,37,48,56,88,0
08003456  2D20 2425 
0800345A  3038 5800 
                    5380   @m68kus~1_37:
0800345E  0D0A 2578 5381          dc.b      13,10,37,120,0
08003462  00        
                    5382   @m68kus~1_38:
08003464  0D0A 426C 5383          dc.b      13,10,66,108,111,99,107,32,105,115,32,115,101
08003468  6F63 6B20 
0800346C  6973 2073 
08003470  65        
08003471  7420 746F 5384          dc.b      116,32,116,111,32,48,0
08003475  2030 00   
                    5385   @m68kus~1_39:
08003478  0D0A 426C 5386          dc.b      13,10,66,108,111,99,107,32,105,115,32,115,101
0800347C  6F63 6B20 
08003480  6973 2073 
08003484  65        
08003485  7420 746F 5387          dc.b      116,32,116,111,32,49,0
08003489  2031 00   
                    5388   @m68kus~1_40:
0800348C  0D0A 5365 5389          dc.b      13,10,83,101,110,100,105,110,103,32,83,116,97
08003490  6E64 696E 
08003494  6720 5374 
08003498  61        
08003499  7274 2043 5390          dc.b      114,116,32,67,111,109,109,97,110,100,46,46,46
0800349D  6F6D 6D61 
080034A1  6E64 2E2E 
080034A5  2E        
080034A6  00        5391          dc.b      0
                    5392   @m68kus~1_41:
080034A8  0D0A 436F 5393          dc.b      13,10,67,111,110,116,114,111,108,32,82,101,103
080034AC  6E74 726F 
080034B0  6C20 5265 
080034B4  67        
080034B5  6973 7465 5394          dc.b      105,115,116,101,114,32,105,115,32,37,120,0
080034B9  7220 6973 
080034BD  2025 7800 
                    5395   @m68kus~1_42:
080034C2  0D0A 5374 5396          dc.b      13,10,83,116,97,114,116,32,67,111,109,109,97
080034C6  6172 7420 
080034CA  436F 6D6D 
080034CE  61        
080034CF  6E64 2052 5397          dc.b      110,100,32,82,101,99,101,105,118,101,100,0
080034D3  6563 6569 
080034D7  7665 6400 
                    5398   @m68kus~1_43:
080034DC  0D0A 5472 5399          dc.b      13,10,84,114,97,110,115,109,105,116,47,114,101
080034E0  616E 736D 
080034E4  6974 2F72 
080034E8  65        
080034E9  6365 6976 5400          dc.b      99,101,105,118,101,32,98,101,102,111,114,101
080034ED  6520 6265 
080034F1  666F 7265 
080034F5  3A20 2578 5401          dc.b      58,32,37,120,0
080034F9  00        
                    5402   @m68kus~1_44:
080034FA  0D0A 5472 5403          dc.b      13,10,84,114,97,110,115,109,105,116,47,114,101
080034FE  616E 736D 
08003502  6974 2F72 
08003506  65        
08003507  6365 6976 5404          dc.b      99,101,105,118,101,32,97,102,116,101,114,58
0800350B  6520 6166 
0800350F  7465 723A 
08003513  2025 7800 5405          dc.b      32,37,120,0
                    5406   @m68kus~1_45:
08003518  0D0A 5365 5407          dc.b      13,10,83,101,110,100,105,110,103,32,97,100,100
0800351C  6E64 696E 
08003520  6720 6164 
08003524  64        
08003525  7265 7373 5408          dc.b      114,101,115,115,0
08003529  00        
                    5409   @m68kus~1_46:
0800352A  0D0A 4869 5410          dc.b      13,10,72,105,103,104,32,98,121,116,101,32,97
0800352E  6768 2062 
08003532  7974 6520 
08003536  61        
08003537  6464 7265 5411          dc.b      100,100,114,101,115,115,32,115,101,110,116,0
0800353B  7373 2073 
0800353F  656E 7400 
                    5412   @m68kus~1_47:
08003544  0D0A 4C6F 5413          dc.b      13,10,76,111,119,32,98,121,116,101,32,97,100
08003548  7720 6279 
0800354C  7465 2061 
08003550  64        
08003551  6472 6573 5414          dc.b      100,114,101,115,115,32,115,101,110,116,0
08003555  7320 7365 
08003559  6E74 00   
                    5415   @m68kus~1_48:
0800355C  0D0A 4461 5416          dc.b      13,10,68,97,116,97,32,87,114,105,116,101,110
08003560  7461 2057 
08003564  7269 7465 
08003568  6E        
08003569  00        5417          dc.b      0
                    5418   @m68kus~1_49:
0800356A  0D0A 4441 5419          dc.b      13,10,68,65,84,65,32,82,69,65,68,32,73,83,58
0800356E  5441 2052 
08003572  4541 4420 
08003576  4953 3A   
08003579  2025 3032 5420          dc.b      32,37,48,50,88,0
0800357D  5800      
                    5421   @m68kus~1_50:
08003580  0D0A 426C 5422          dc.b      13,10,66,108,111,99,107,32,83,101,108,58,32
08003584  6F63 6B20 
08003588  5365 6C3A 
0800358C  20        
0800358D  2558 00   5423          dc.b      37,88,0
                    5424   @m68kus~1_51:
08003590  0D0A 4164 5425          dc.b      13,10,65,100,100,114,101,115,115,32,72,105,103
08003594  6472 6573 
08003598  7320 4869 
0800359C  67        
0800359D  683A 2025 5426          dc.b      104,58,32,37,88,0
080035A1  5800      
                    5427   @m68kus~1_52:
080035A4  0D0A 4164 5428          dc.b      13,10,65,100,100,114,101,115,115,32,76,111,119
080035A8  6472 6573 
080035AC  7320 4C6F 
080035B0  77        
080035B1  3A20 2558 5429          dc.b      58,32,37,88,0
080035B5  00        
                    5430   @m68kus~1_53:
080035B6  0D0A 4949 5431          dc.b      13,10,73,73,67,32,112,114,111,103,114,97,109
080035BA  4320 7072 
080035BE  6F67 7261 
080035C2  6D        
080035C3  2077 696C 5432          dc.b      32,119,105,108,108,32,98,101,103,105,110,0
080035C7  6C20 6265 
080035CB  6769 6E00 
                    5433   @m68kus~1_54:
080035D0  0D0A 456E 5434          dc.b      13,10,69,110,116,101,114,32,48,32,46,46,46,32
080035D4  7465 7220 
080035D8  3020 2E2E 
080035DC  2E20      
080035DE  5772 6974 5435          dc.b      87,114,105,116,101,32,83,105,110,103,108,101
080035E2  6520 5369 
080035E6  6E67 6C65 
080035EA  2042 7974 5436          dc.b      32,66,121,116,101,13,10,69,110,116,101,114,32
080035EE  650D 0A45 
080035F2  6E74 6572 
080035F6  20        
080035F7  3120 2E2E 5437          dc.b      49,32,46,46,46,32,82,101,97,100,32,83,105,110
080035FB  2E20 5265 
080035FF  6164 2053 
08003603  696E      
08003605  676C 6520 5438          dc.b      103,108,101,32,66,121,116,101,13,10,69,110,116
08003609  4279 7465 
0800360D  0D0A 456E 
08003611  74        
08003612  6572 2032 5439          dc.b      101,114,32,50,32,46,46,46,32,87,114,105,116
08003616  202E 2E2E 
0800361A  2057 7269 
0800361E  74        
0800361F  6520 4461 5440          dc.b      101,32,68,97,116,97,32,66,108,111,99,107,13
08003623  7461 2042 
08003627  6C6F 636B 
0800362B  0D        
0800362C  0A45 6E74 5441          dc.b      10,69,110,116,101,114,32,51,32,46,46,46,32,82
08003630  6572 2033 
08003634  202E 2E2E 
08003638  2052      
0800363A  6561 6420 5442          dc.b      101,97,100,32,68,97,116,97,32,66,108,111,99
0800363E  4461 7461 
08003642  2042 6C6F 
08003646  63        
08003647  6B0D 0A00 5443          dc.b      107,13,10,0
                    5444   @m68kus~1_55:
0800364C  2563 00   5445          dc.b      37,99,0
                    5446   @m68kus~1_56:
08003650  5369 6E67 5447          dc.b      83,105,110,103,108,101,32,66,121,116,101,32
08003654  6C65 2042 
08003658  7974 6520 
0800365C  5772 6974 5448          dc.b      87,114,105,116,101,32,73,110,105,116,105,97
08003660  6520 496E 
08003664  6974 6961 
08003668  7465 640D 5449          dc.b      116,101,100,13,10,69,110,116,101,114,32,68,97
0800366C  0A45 6E74 
08003670  6572 2044 
08003674  61        
08003675  7461 2042 5450          dc.b      116,97,32,66,121,116,101,58,32,0
08003679  7974 653A 
0800367D  2000      
                    5451   @m68kus~1_57:
08003680  456E 7465 5452          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,68
08003684  7220 5661 
08003688  6C69 6420 
0800368C  44        
0800368D  6174 6120 5453          dc.b      97,116,97,32,66,121,116,101,58,32,0
08003691  4279 7465 
08003695  3A20 00   
                    5454   @m68kus~1_58:
08003698  456E 7465 5455          dc.b      69,110,116,101,114,32,65,100,100,114,101,115
0800369C  7220 4164 
080036A0  6472 6573 
080036A4  7320 2830 5456          dc.b      115,32,40,48,48,48,48,48,32,45,32,49,70,70,70
080036A8  3030 3030 
080036AC  202D 2031 
080036B0  4646 46   
080036B3  4629 3A20 5457          dc.b      70,41,58,32,0
080036B7  00        
                    5458   @m68kus~1_59:
080036B8  456E 7465 5459          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,65
080036BC  7220 5661 
080036C0  6C69 6420 
080036C4  41        
080036C5  6464 7265 5460          dc.b      100,100,114,101,115,115,58,32,0
080036C9  7373 3A20 
080036CD  00        
                    5461   @m68kus~1_60:
080036CE  0D0A 5772 5462          dc.b      13,10,87,114,105,116,105,110,103,32,68,97,116
080036D2  6974 696E 
080036D6  6720 4461 
080036DA  74        
080036DB  6120 4279 5463          dc.b      97,32,66,121,116,101,32,46,46,46,0
080036DF  7465 202E 
080036E3  2E2E 00   
                    5464   @m68kus~1_61:
080036E6  0D0A 5369 5465          dc.b      13,10,83,105,110,103,108,101,32,66,121,116,101
080036EA  6E67 6C65 
080036EE  2042 7974 
080036F2  65        
080036F3  2052 6561 5466          dc.b      32,82,101,97,100,32,73,110,105,116,105,97,116
080036F7  6420 496E 
080036FB  6974 6961 
080036FF  74        
08003700  6564 0D0A 5467          dc.b      101,100,13,10,69,110,116,101,114,32,65,100,100
08003704  456E 7465 
08003708  7220 4164 
0800370C  64        
0800370D  7265 7373 5468          dc.b      114,101,115,115,32,40,48,48,48,48,48,32,45,32
08003711  2028 3030 
08003715  3030 3020 
08003719  2D20      
0800371B  3146 4646 5469          dc.b      49,70,70,70,70,41,58,32,0
0800371F  4629 3A20 
08003723  00        
                    5470   @m68kus~1_62:
08003724  0D0A 5265 5471          dc.b      13,10,82,101,97,100,105,110,103,32,68,97,116
08003728  6164 696E 
0800372C  6720 4461 
08003730  74        
08003731  6120 4279 5472          dc.b      97,32,66,121,116,101,32,46,46,46,0
08003735  7465 202E 
08003739  2E2E 00   
                    5473   @m68kus~1_63:
0800373C  0D0A 4461 5474          dc.b      13,10,68,97,116,97,32,66,108,111,99,107,32,87
08003740  7461 2042 
08003744  6C6F 636B 
08003748  2057      
0800374A  7269 7465 5475          dc.b      114,105,116,101,32,73,110,105,116,105,97,116
0800374E  2049 6E69 
08003752  7469 6174 
08003756  6564 0D0A 5476          dc.b      101,100,13,10,69,110,116,101,114,32,83,116,97
0800375A  456E 7465 
0800375E  7220 5374 
08003762  61        
08003763  7274 696E 5477          dc.b      114,116,105,110,103,32,65,100,100,114,101,115
08003767  6720 4164 
0800376B  6472 6573 
0800376F  7320 2830 5478          dc.b      115,32,40,48,48,48,48,48,32,45,32,49,70,70,70
08003773  3030 3030 
08003777  202D 2031 
0800377B  4646 46   
0800377E  4629 3A20 5479          dc.b      70,41,58,32,0
08003782  00        
                    5480   @m68kus~1_64:
08003784  456E 7465 5481          dc.b      69,110,116,101,114,32,68,97,116,97,32,66,108
08003788  7220 4461 
0800378C  7461 2042 
08003790  6C        
08003791  6F63 6B20 5482          dc.b      111,99,107,32,83,105,122,101,32,40,48,48,48
08003795  5369 7A65 
08003799  2028 3030 
0800379D  30        
0800379E  3030 202D 5483          dc.b      48,48,32,45,32,37,48,53,88,41,58,32,0
080037A2  2025 3035 
080037A6  5829 3A20 
080037AA  00        
                    5484   @m68kus~1_65:
080037AC  456E 7465 5485          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,66
080037B0  7220 5661 
080037B4  6C69 6420 
080037B8  42        
080037B9  6C6F 636B 5486          dc.b      108,111,99,107,32,83,105,122,101,32,40,48,48
080037BD  2053 697A 
080037C1  6520 2830 
080037C5  30        
080037C6  3030 3020 5487          dc.b      48,48,48,32,45,32,37,48,53,88,41,58,32,0
080037CA  2D20 2530 
080037CE  3558 293A 
080037D2  2000      
                    5488   @m68kus~1_66:
080037D4  456E 7465 5489          dc.b      69,110,116,101,114,32,83,116,97,114,116,105
080037D8  7220 5374 
080037DC  6172 7469 
080037E0  6E67 2044 5490          dc.b      110,103,32,68,97,116,97,32,66,121,116,101,58
080037E4  6174 6120 
080037E8  4279 7465 
080037EC  3A        
080037ED  2000      5491          dc.b      32,0
                    5492   @m68kus~1_67:
080037F0  0D0A 4461 5493          dc.b      13,10,68,97,116,97,32,66,108,111,99,107,32,82
080037F4  7461 2042 
080037F8  6C6F 636B 
080037FC  2052      
080037FE  6561 6420 5494          dc.b      101,97,100,32,73,110,105,116,105,97,116,101
08003802  496E 6974 
08003806  6961 7465 
0800380A  640D 0A45 5495          dc.b      100,13,10,69,110,116,101,114,32,83,116,97,114
0800380E  6E74 6572 
08003812  2053 7461 
08003816  72        
08003817  7469 6E67 5496          dc.b      116,105,110,103,32,65,100,100,114,101,115,115
0800381B  2041 6464 
0800381F  7265 7373 
08003823  2028 3030 5497          dc.b      32,40,48,48,48,48,48,32,45,32,49,70,70,70,70
08003827  3030 3020 
0800382B  2D20 3146 
0800382F  4646 46   
08003832  293A 2000 5498          dc.b      41,58,32,0
                    5499   @m68kus~1_68:
08003836  456E 7465 5500          dc.b      69,110,116,101,114,32,86,97,108,105,100,32,65
0800383A  7220 5661 
0800383E  6C69 6420 
08003842  41        
08003843  6464 7265 5501          dc.b      100,100,114,101,115,115,0
08003847  7373 00   
                    5502   @m68kus~1_69:
0800384A  0D0A 5072 5503          dc.b      13,10,80,114,111,103,114,97,109,32,101,110,100
0800384E  6F67 7261 
08003852  6D20 656E 
08003856  64        
08003857  6564 00   5504          dc.b      101,100,0
                    5505          section   data
0800385A            5506                   align
                    5507   
                    5508   *********************************************************************************************************************************************************
                    5509   * Section for Initialised Data (in theory should be copied to Ram at startup) but is part of program code as we copy whole program to ram at startup
                    5510   ********************************************************************************************************************************************************
                    5511   
          0800 385A 5512   DataStart       equ       *
0800385A            5513   __ungetbuf:     ds.l      1                    ungetbuffer for stdio functions
0800385E            5514   __allocp:       ds.l      1                    start of free memory block list
08003862            5515   __heap:         ds.l      1                    begin of free memory
                    5516   
                    5517   
                    5518   @vsscanf_bufx:
08003866  0800 3996 5519          dc.l      @vsscanf_buf
                    5520   @vsscanf_1:
0800386A  0A00      5521          dc.b      10,0
                    5522   __ctype:
0800386C  0040 4040 5523          dc.b      0,64,64,64,64,64,64,64,64,64,80,80,80,80,80
08003870  4040 4040 
08003874  4040 5050 
08003878  5050 50   
0800387B  4040 4040 5524          dc.b      64,64,64,64,64,64,64,64,64,64,64,64,64,64,64
0800387F  4040 4040 
08003883  4040 4040 
08003887  4040 40   
0800388A  4040 40D0 5525          dc.b      64,64,64,208,160,160,160,160,160,160,160,160
0800388E  A0A0 A0A0 
08003892  A0A0 A0A0 
08003896  A0A0 A0A0 5526          dc.b      160,160,160,160,160,160,160,140,140,140,140
0800389A  A0A0 A08C 
0800389E  8C8C 8C   
080038A1  8C8C 8C8C 5527          dc.b      140,140,140,140,140,140,160,160,160,160,160
080038A5  8C8C A0A0 
080038A9  A0A0 A0   
080038AC  A0A0 8A8A 5528          dc.b      160,160,138,138,138,138,138,138,130,130,130
080038B0  8A8A 8A8A 
080038B4  8282 82   
080038B7  8282 8282 5529          dc.b      130,130,130,130,130,130,130,130,130,130,130
080038BB  8282 8282 
080038BF  8282 82   
080038C2  8282 8282 5530          dc.b      130,130,130,130,130,130,160,160,160,160,160
080038C6  8282 A0A0 
080038CA  A0A0 A0   
080038CD  A089 8989 5531          dc.b      160,137,137,137,137,137,137,129,129,129,129
080038D1  8989 8981 
080038D5  8181 81   
080038D8  8181 8181 5532          dc.b      129,129,129,129,129,129,129,129,129,129,129
080038DC  8181 8181 
080038E0  8181 81   
080038E3  8181 8181 5533          dc.b      129,129,129,129,129,160,160,160,160,64,0,0,0
080038E7  81A0 A0A0 
080038EB  A040 0000 
080038EF  00        
080038F0  0000 0000 5534          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080038F4  0000 0000 
080038F8  0000 0000 
080038FC  0000 0000 
08003900  0000 0000 
08003904  0000      
08003906  0000 0000 5535          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0800390A  0000 0000 
0800390E  0000 0000 
08003912  0000 0000 
08003916  0000 0000 
0800391A  0000      
0800391C  0000 0000 5536          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003920  0000 0000 
08003924  0000 0000 
08003928  0000 0000 
0800392C  0000 0000 
08003930  0000      
08003932  0000 0000 5537          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003936  0000 0000 
0800393A  0000 0000 
0800393E  0000 0000 
08003942  0000 0000 
08003946  0000      
08003948  0000 0000 5538          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0800394C  0000 0000 
08003950  0000 0000 
08003954  0000 0000 
08003958  0000 0000 
0800395C  0000      
0800395E  0000 0000 5539          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003962  0000 0000 
08003966  0000 0000 
0800396A  0000 00   
                    5540   @itoa_1:
0800396E  2D32 3134 5541          dc.b      45,50,49,52,55,52,56,51,54,52,56,0
08003972  3734 3833 
08003976  3634 3800 
                    5542          section   bss
0800397A            5543                   align
                    5544   
          0800 397A 5545   DataEnd         equ       *                    this label will equate to the address of the last byte of global variable in it
          0000 0120 5546   DataLength      equ       DataEnd-DataStart    length of data needed to copy to Ram on bootup
                    5547   
                    5548   *********************************************************************************************************
                    5549   * Section for uninitialised Data which is set to zero, i.e. we should set this space to zero at starup
                    5550   *********************************************************************************************************
          0800 397A 5551   BssStart       equ       *
                    5552   
                    5553   _i:
0800397A            5554          ds.b      4
                    5555   _x:
0800397E            5556          ds.b      4
                    5557   _y:
08003982            5558          ds.b      4
                    5559   _z:
08003986            5560          ds.b      4
                    5561   _PortA_Count:
0800398A            5562          ds.b      4
                    5563   _Timer1Count:
0800398E            5564          ds.b      1
                    5565   _Timer2Count:
08003990            5566          ds.b      1
                    5567   _Timer3Count:
08003992            5568          ds.b      1
                    5569   _Timer4Count:
08003994            5570          ds.b      1
                    5571   @vsscanf_buf:
08003996            5572          ds.b      80
                    5573          section   heap
080039E6            5574                  align
                    5575   
          0800 39E6 5576   BssEnd         equ       *
          0000 006C 5577   BssLength      equ       BssEnd-BssStart       length of zeroed data needed to copy to Ram on bootup
                    5578   
                    5579   *********************************************************************************************************
                    5580   * Section for Heap
                    5581   *********************************************************************************************************
                    5582   
          0800 39E6 5583   heap           equ       *
080039E6            5584                  align
          0800 0000

Assembly errors: 0
